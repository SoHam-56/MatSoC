// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="auto_parkcalc_auto_parkcalc,hls_ip_2024_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.256000,HLS_SYN_LAT=1073741848,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=4728,HLS_SYN_LUT=5738,HLS_VERSION=2024_2}" *)

module auto_parkcalc (
        ap_clk,
        ap_rst_n,
        A_ROW_TDATA,
        A_ROW_TVALID,
        A_ROW_TREADY,
        ID_TDATA,
        ID_TVALID,
        ID_TREADY,
        IQ_TDATA,
        IQ_TVALID,
        IQ_TREADY,
        s_axi_AXICTRL_AWVALID,
        s_axi_AXICTRL_AWREADY,
        s_axi_AXICTRL_AWADDR,
        s_axi_AXICTRL_WVALID,
        s_axi_AXICTRL_WREADY,
        s_axi_AXICTRL_WDATA,
        s_axi_AXICTRL_WSTRB,
        s_axi_AXICTRL_ARVALID,
        s_axi_AXICTRL_ARREADY,
        s_axi_AXICTRL_ARADDR,
        s_axi_AXICTRL_RVALID,
        s_axi_AXICTRL_RREADY,
        s_axi_AXICTRL_RDATA,
        s_axi_AXICTRL_RRESP,
        s_axi_AXICTRL_BVALID,
        s_axi_AXICTRL_BREADY,
        s_axi_AXICTRL_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 7'd1;
parameter    ap_ST_fsm_state2 = 7'd2;
parameter    ap_ST_fsm_state3 = 7'd4;
parameter    ap_ST_fsm_state4 = 7'd8;
parameter    ap_ST_fsm_state5 = 7'd16;
parameter    ap_ST_fsm_state6 = 7'd32;
parameter    ap_ST_fsm_state7 = 7'd64;
parameter    C_S_AXI_AXICTRL_DATA_WIDTH = 32;
parameter    C_S_AXI_AXICTRL_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_AXICTRL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input  [95:0] A_ROW_TDATA;
input   A_ROW_TVALID;
output   A_ROW_TREADY;
output  [95:0] ID_TDATA;
output   ID_TVALID;
input   ID_TREADY;
output  [95:0] IQ_TDATA;
output   IQ_TVALID;
input   IQ_TREADY;
input   s_axi_AXICTRL_AWVALID;
output   s_axi_AXICTRL_AWREADY;
input  [C_S_AXI_AXICTRL_ADDR_WIDTH - 1:0] s_axi_AXICTRL_AWADDR;
input   s_axi_AXICTRL_WVALID;
output   s_axi_AXICTRL_WREADY;
input  [C_S_AXI_AXICTRL_DATA_WIDTH - 1:0] s_axi_AXICTRL_WDATA;
input  [C_S_AXI_AXICTRL_WSTRB_WIDTH - 1:0] s_axi_AXICTRL_WSTRB;
input   s_axi_AXICTRL_ARVALID;
output   s_axi_AXICTRL_ARREADY;
input  [C_S_AXI_AXICTRL_ADDR_WIDTH - 1:0] s_axi_AXICTRL_ARADDR;
output   s_axi_AXICTRL_RVALID;
input   s_axi_AXICTRL_RREADY;
output  [C_S_AXI_AXICTRL_DATA_WIDTH - 1:0] s_axi_AXICTRL_RDATA;
output  [1:0] s_axi_AXICTRL_RRESP;
output   s_axi_AXICTRL_BVALID;
input   s_axi_AXICTRL_BREADY;
output  [1:0] s_axi_AXICTRL_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [6:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [31:0] size;
wire  signed [31:0] add_ln50_fu_82_p2;
reg  signed [31:0] add_ln50_reg_147;
reg   [0:0] tmp_reg_152;
wire    ap_CS_fsm_state2;
wire   [64:0] grp_fu_77_p2;
reg   [64:0] mul_ln50_reg_163;
wire    ap_CS_fsm_state3;
reg   [29:0] tmp_7_cast_reg_168;
wire   [30:0] zext_ln50_fu_131_p1;
reg   [30:0] zext_ln50_reg_173;
wire    ap_CS_fsm_state4;
wire   [30:0] sub_ln50_1_fu_135_p2;
reg   [30:0] sub_ln50_1_reg_178;
wire   [30:0] select_ln50_1_fu_141_p3;
reg   [30:0] select_ln50_1_reg_183;
wire    ap_CS_fsm_state5;
wire    grp_auto_parkcalc_Pipeline_VITIS_LOOP_51_1_fu_66_ap_start;
wire    grp_auto_parkcalc_Pipeline_VITIS_LOOP_51_1_fu_66_ap_done;
wire    grp_auto_parkcalc_Pipeline_VITIS_LOOP_51_1_fu_66_ap_idle;
wire    grp_auto_parkcalc_Pipeline_VITIS_LOOP_51_1_fu_66_ap_ready;
wire    grp_auto_parkcalc_Pipeline_VITIS_LOOP_51_1_fu_66_ID_TREADY;
wire    grp_auto_parkcalc_Pipeline_VITIS_LOOP_51_1_fu_66_IQ_TREADY;
wire    grp_auto_parkcalc_Pipeline_VITIS_LOOP_51_1_fu_66_A_ROW_TREADY;
wire   [95:0] grp_auto_parkcalc_Pipeline_VITIS_LOOP_51_1_fu_66_ID_TDATA;
wire    grp_auto_parkcalc_Pipeline_VITIS_LOOP_51_1_fu_66_ID_TVALID;
wire   [95:0] grp_auto_parkcalc_Pipeline_VITIS_LOOP_51_1_fu_66_IQ_TDATA;
wire    grp_auto_parkcalc_Pipeline_VITIS_LOOP_51_1_fu_66_IQ_TVALID;
reg    grp_auto_parkcalc_Pipeline_VITIS_LOOP_51_1_fu_66_ap_start_reg;
wire    ap_CS_fsm_state6;
reg   [95:0] ID_TDATA_reg;
reg   [95:0] IQ_TDATA_reg;
wire   [33:0] grp_fu_77_p1;
wire   [64:0] sub_ln50_fu_110_p2;
wire   [29:0] tmp_6_cast_fu_115_p4;
wire   [29:0] select_ln50_fu_125_p3;
wire    ap_CS_fsm_state7;
wire    regslice_both_ID_U_apdone_blk;
wire    regslice_both_IQ_U_apdone_blk;
reg    ap_block_state7;
reg   [6:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
reg    ap_ST_fsm_state6_blk;
reg    ap_ST_fsm_state7_blk;
wire    regslice_both_A_ROW_U_apdone_blk;
wire   [95:0] A_ROW_TDATA_int_regslice;
wire    A_ROW_TVALID_int_regslice;
reg    A_ROW_TREADY_int_regslice;
wire    regslice_both_A_ROW_U_ack_in;
reg   [95:0] ID_TDATA_int_regslice;
wire    ID_TREADY_int_regslice;
wire    regslice_both_ID_U_vld_out;
reg   [95:0] IQ_TDATA_int_regslice;
wire    IQ_TREADY_int_regslice;
wire    regslice_both_IQ_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 7'd1;
#0 grp_auto_parkcalc_Pipeline_VITIS_LOOP_51_1_fu_66_ap_start_reg = 1'b0;
end

auto_parkcalc_auto_parkcalc_Pipeline_VITIS_LOOP_51_1 grp_auto_parkcalc_Pipeline_VITIS_LOOP_51_1_fu_66(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_auto_parkcalc_Pipeline_VITIS_LOOP_51_1_fu_66_ap_start),
    .ap_done(grp_auto_parkcalc_Pipeline_VITIS_LOOP_51_1_fu_66_ap_done),
    .ap_idle(grp_auto_parkcalc_Pipeline_VITIS_LOOP_51_1_fu_66_ap_idle),
    .ap_ready(grp_auto_parkcalc_Pipeline_VITIS_LOOP_51_1_fu_66_ap_ready),
    .A_ROW_TVALID(A_ROW_TVALID_int_regslice),
    .ID_TREADY(grp_auto_parkcalc_Pipeline_VITIS_LOOP_51_1_fu_66_ID_TREADY),
    .IQ_TREADY(grp_auto_parkcalc_Pipeline_VITIS_LOOP_51_1_fu_66_IQ_TREADY),
    .select_ln50_1(select_ln50_1_reg_183),
    .A_ROW_TDATA(A_ROW_TDATA_int_regslice),
    .A_ROW_TREADY(grp_auto_parkcalc_Pipeline_VITIS_LOOP_51_1_fu_66_A_ROW_TREADY),
    .ID_TDATA(grp_auto_parkcalc_Pipeline_VITIS_LOOP_51_1_fu_66_ID_TDATA),
    .ID_TVALID(grp_auto_parkcalc_Pipeline_VITIS_LOOP_51_1_fu_66_ID_TVALID),
    .IQ_TDATA(grp_auto_parkcalc_Pipeline_VITIS_LOOP_51_1_fu_66_IQ_TDATA),
    .IQ_TVALID(grp_auto_parkcalc_Pipeline_VITIS_LOOP_51_1_fu_66_IQ_TVALID)
);

auto_parkcalc_AXICTRL_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_AXICTRL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_AXICTRL_DATA_WIDTH ))
AXICTRL_s_axi_U(
    .AWVALID(s_axi_AXICTRL_AWVALID),
    .AWREADY(s_axi_AXICTRL_AWREADY),
    .AWADDR(s_axi_AXICTRL_AWADDR),
    .WVALID(s_axi_AXICTRL_WVALID),
    .WREADY(s_axi_AXICTRL_WREADY),
    .WDATA(s_axi_AXICTRL_WDATA),
    .WSTRB(s_axi_AXICTRL_WSTRB),
    .ARVALID(s_axi_AXICTRL_ARVALID),
    .ARREADY(s_axi_AXICTRL_ARREADY),
    .ARADDR(s_axi_AXICTRL_ARADDR),
    .RVALID(s_axi_AXICTRL_RVALID),
    .RREADY(s_axi_AXICTRL_RREADY),
    .RDATA(s_axi_AXICTRL_RDATA),
    .RRESP(s_axi_AXICTRL_RRESP),
    .BVALID(s_axi_AXICTRL_BVALID),
    .BREADY(s_axi_AXICTRL_BREADY),
    .BRESP(s_axi_AXICTRL_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .size(size),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

auto_parkcalc_mul_32s_34ns_65_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 34 ),
    .dout_WIDTH( 65 ))
mul_32s_34ns_65_2_1_U19(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(add_ln50_reg_147),
    .din1(grp_fu_77_p1),
    .ce(1'b1),
    .dout(grp_fu_77_p2)
);

auto_parkcalc_regslice_both #(
    .DataWidth( 96 ))
regslice_both_A_ROW_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(A_ROW_TDATA),
    .vld_in(A_ROW_TVALID),
    .ack_in(regslice_both_A_ROW_U_ack_in),
    .data_out(A_ROW_TDATA_int_regslice),
    .vld_out(A_ROW_TVALID_int_regslice),
    .ack_out(A_ROW_TREADY_int_regslice),
    .apdone_blk(regslice_both_A_ROW_U_apdone_blk)
);

auto_parkcalc_regslice_both #(
    .DataWidth( 96 ))
regslice_both_ID_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(ID_TDATA_int_regslice),
    .vld_in(grp_auto_parkcalc_Pipeline_VITIS_LOOP_51_1_fu_66_ID_TVALID),
    .ack_in(ID_TREADY_int_regslice),
    .data_out(ID_TDATA),
    .vld_out(regslice_both_ID_U_vld_out),
    .ack_out(ID_TREADY),
    .apdone_blk(regslice_both_ID_U_apdone_blk)
);

auto_parkcalc_regslice_both #(
    .DataWidth( 96 ))
regslice_both_IQ_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(IQ_TDATA_int_regslice),
    .vld_in(grp_auto_parkcalc_Pipeline_VITIS_LOOP_51_1_fu_66_IQ_TVALID),
    .ack_in(IQ_TREADY_int_regslice),
    .data_out(IQ_TDATA),
    .vld_out(regslice_both_IQ_U_vld_out),
    .ack_out(IQ_TREADY),
    .apdone_blk(regslice_both_IQ_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_auto_parkcalc_Pipeline_VITIS_LOOP_51_1_fu_66_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state5)) begin
            grp_auto_parkcalc_Pipeline_VITIS_LOOP_51_1_fu_66_ap_start_reg <= 1'b1;
        end else if ((grp_auto_parkcalc_Pipeline_VITIS_LOOP_51_1_fu_66_ap_ready == 1'b1)) begin
            grp_auto_parkcalc_Pipeline_VITIS_LOOP_51_1_fu_66_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((grp_auto_parkcalc_Pipeline_VITIS_LOOP_51_1_fu_66_ID_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        ID_TDATA_reg <= grp_auto_parkcalc_Pipeline_VITIS_LOOP_51_1_fu_66_ID_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_auto_parkcalc_Pipeline_VITIS_LOOP_51_1_fu_66_IQ_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        IQ_TDATA_reg <= grp_auto_parkcalc_Pipeline_VITIS_LOOP_51_1_fu_66_IQ_TDATA;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        add_ln50_reg_147 <= add_ln50_fu_82_p2;
        tmp_reg_152 <= add_ln50_fu_82_p2[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        mul_ln50_reg_163 <= grp_fu_77_p2;
        tmp_7_cast_reg_168 <= {{grp_fu_77_p2[63:34]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        select_ln50_1_reg_183 <= select_ln50_1_fu_141_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        sub_ln50_1_reg_178 <= sub_ln50_1_fu_135_p2;
        zext_ln50_reg_173[29 : 0] <= zext_ln50_fu_131_p1[29 : 0];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        A_ROW_TREADY_int_regslice = grp_auto_parkcalc_Pipeline_VITIS_LOOP_51_1_fu_66_A_ROW_TREADY;
    end else begin
        A_ROW_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((grp_auto_parkcalc_Pipeline_VITIS_LOOP_51_1_fu_66_ID_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        ID_TDATA_int_regslice = grp_auto_parkcalc_Pipeline_VITIS_LOOP_51_1_fu_66_ID_TDATA;
    end else begin
        ID_TDATA_int_regslice = ID_TDATA_reg;
    end
end

always @ (*) begin
    if (((grp_auto_parkcalc_Pipeline_VITIS_LOOP_51_1_fu_66_IQ_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        IQ_TDATA_int_regslice = grp_auto_parkcalc_Pipeline_VITIS_LOOP_51_1_fu_66_IQ_TDATA;
    end else begin
        IQ_TDATA_int_regslice = IQ_TDATA_reg;
    end
end

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

always @ (*) begin
    if ((grp_auto_parkcalc_Pipeline_VITIS_LOOP_51_1_fu_66_ap_done == 1'b0)) begin
        ap_ST_fsm_state6_blk = 1'b1;
    end else begin
        ap_ST_fsm_state6_blk = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_block_state7)) begin
        ap_ST_fsm_state7_blk = 1'b1;
    end else begin
        ap_ST_fsm_state7_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state7) & (1'b1 == ap_CS_fsm_state7))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state7) & (1'b1 == ap_CS_fsm_state7))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((grp_auto_parkcalc_Pipeline_VITIS_LOOP_51_1_fu_66_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b0 == ap_block_state7) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign A_ROW_TREADY = regslice_both_A_ROW_U_ack_in;

assign ID_TVALID = regslice_both_ID_U_vld_out;

assign IQ_TVALID = regslice_both_IQ_U_vld_out;

assign add_ln50_fu_82_p2 = (size + 32'd2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

always @ (*) begin
    ap_block_state7 = ((regslice_both_IQ_U_apdone_blk == 1'b1) | (regslice_both_ID_U_apdone_blk == 1'b1));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign grp_auto_parkcalc_Pipeline_VITIS_LOOP_51_1_fu_66_ID_TREADY = (ap_CS_fsm_state6 & ID_TREADY_int_regslice);

assign grp_auto_parkcalc_Pipeline_VITIS_LOOP_51_1_fu_66_IQ_TREADY = (ap_CS_fsm_state6 & IQ_TREADY_int_regslice);

assign grp_auto_parkcalc_Pipeline_VITIS_LOOP_51_1_fu_66_ap_start = grp_auto_parkcalc_Pipeline_VITIS_LOOP_51_1_fu_66_ap_start_reg;

assign grp_fu_77_p1 = 65'd5726623062;

assign select_ln50_1_fu_141_p3 = ((tmp_reg_152[0:0] == 1'b1) ? sub_ln50_1_reg_178 : zext_ln50_reg_173);

assign select_ln50_fu_125_p3 = ((tmp_reg_152[0:0] == 1'b1) ? tmp_6_cast_fu_115_p4 : tmp_7_cast_reg_168);

assign sub_ln50_1_fu_135_p2 = (31'd0 - zext_ln50_fu_131_p1);

assign sub_ln50_fu_110_p2 = (65'd0 - mul_ln50_reg_163);

assign tmp_6_cast_fu_115_p4 = {{sub_ln50_fu_110_p2[63:34]}};

assign zext_ln50_fu_131_p1 = select_ln50_fu_125_p3;

always @ (posedge ap_clk) begin
    zext_ln50_reg_173[30] <= 1'b0;
end


reg find_kernel_block = 0;
// synthesis translate_off
`include "auto_parkcalc_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on

endmodule //auto_parkcalc

