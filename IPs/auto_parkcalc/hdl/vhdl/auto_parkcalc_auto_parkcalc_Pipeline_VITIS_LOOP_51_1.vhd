-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity auto_parkcalc_auto_parkcalc_Pipeline_VITIS_LOOP_51_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    A_ROW_TVALID : IN STD_LOGIC;
    ID_TREADY : IN STD_LOGIC;
    IQ_TREADY : IN STD_LOGIC;
    select_ln50_1 : IN STD_LOGIC_VECTOR (30 downto 0);
    A_ROW_TDATA : IN STD_LOGIC_VECTOR (95 downto 0);
    A_ROW_TREADY : OUT STD_LOGIC;
    ID_TDATA : OUT STD_LOGIC_VECTOR (95 downto 0);
    ID_TVALID : OUT STD_LOGIC;
    IQ_TDATA : OUT STD_LOGIC_VECTOR (95 downto 0);
    IQ_TVALID : OUT STD_LOGIC );
end;


architecture behav of auto_parkcalc_auto_parkcalc_Pipeline_VITIS_LOOP_51_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv30_0 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000000";
    constant ap_const_lv32_3F510625 : STD_LOGIC_VECTOR (31 downto 0) := "00111111010100010000011000100101";
    constant ap_const_lv32_BED0FF97 : STD_LOGIC_VECTOR (31 downto 0) := "10111110110100001111111110010111";
    constant ap_const_lv32_3F350481 : STD_LOGIC_VECTOR (31 downto 0) := "00111111001101010000010010000001";
    constant ap_const_lv32_BF350481 : STD_LOGIC_VECTOR (31 downto 0) := "10111111001101010000010010000001";
    constant ap_const_lv96_20 : STD_LOGIC_VECTOR (95 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_const_lv96_40 : STD_LOGIC_VECTOR (95 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_const_lv30_1 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (2 downto 0) := "001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal icmp_ln51_reg_321 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state3_pp0_stage2_iter0_grp2 : BOOLEAN;
    signal ap_block_pp0_stage2_subdone_grp2_done_reg : BOOLEAN := false;
    signal ap_block_pp0_stage2_subdone_grp2 : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage2_subdone_grp4_done_reg : BOOLEAN := false;
    signal ap_block_pp0_stage2_subdone_grp4 : BOOLEAN;
    signal ap_block_pp0_stage2_subdone_grp5_done_reg : BOOLEAN := false;
    signal ap_block_pp0_stage2_subdone_grp5 : BOOLEAN;
    signal ap_condition_exit_pp0_iter0_stage2 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal A_ROW_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1_grp1 : BOOLEAN;
    signal ap_block_pp0_stage2_grp2 : BOOLEAN;
    signal ap_block_pp0_stage0_grp3 : BOOLEAN;
    signal ID_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage2_grp4 : BOOLEAN;
    signal IQ_TDATA_blk_n : STD_LOGIC;
    signal ap_block_pp0_stage2_grp5 : BOOLEAN;
    signal icmp_ln51_fu_191_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal A_blk_fu_212_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state2_pp0_stage1_iter0_grp1 : BOOLEAN;
    signal ap_block_pp0_stage1_11001_grp1 : BOOLEAN;
    signal A_blk_1_fu_218_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln59_fu_224_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal A_blk_2_fu_234_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage2_11001_grp2 : BOOLEAN;
    signal A_blk_3_fu_240_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln59_3_fu_246_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal A_blk_4_fu_256_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_11001_grp3 : BOOLEAN;
    signal A_blk_5_fu_262_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln59_6_fu_268_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_124_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal product_reg_379 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_129_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal product_1_reg_384 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_134_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal product_2_reg_389 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_139_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal product_3_reg_394 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_144_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal product_4_reg_399 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_149_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal product_5_reg_404 : STD_LOGIC_VECTOR (31 downto 0);
    signal product_6_reg_409 : STD_LOGIC_VECTOR (31 downto 0);
    signal product_6_reg_409_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal product_7_reg_414 : STD_LOGIC_VECTOR (31 downto 0);
    signal product_7_reg_414_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal product_8_reg_419 : STD_LOGIC_VECTOR (31 downto 0);
    signal product_8_reg_419_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal product_9_reg_424 : STD_LOGIC_VECTOR (31 downto 0);
    signal product_9_reg_424_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal product_10_reg_429 : STD_LOGIC_VECTOR (31 downto 0);
    signal product_10_reg_429_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal product_11_reg_434 : STD_LOGIC_VECTOR (31 downto 0);
    signal product_11_reg_434_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal product_12_reg_439 : STD_LOGIC_VECTOR (31 downto 0);
    signal product_12_reg_439_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal product_12_reg_439_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal product_13_reg_444 : STD_LOGIC_VECTOR (31 downto 0);
    signal product_13_reg_444_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal product_13_reg_444_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal product_14_reg_449 : STD_LOGIC_VECTOR (31 downto 0);
    signal product_14_reg_449_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal product_14_reg_449_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal product_15_reg_454 : STD_LOGIC_VECTOR (31 downto 0);
    signal product_15_reg_454_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal product_15_reg_454_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal product_16_reg_459 : STD_LOGIC_VECTOR (31 downto 0);
    signal product_16_reg_459_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal product_16_reg_459_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal product_17_reg_464 : STD_LOGIC_VECTOR (31 downto 0);
    signal product_17_reg_464_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal product_17_reg_464_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_94_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ID_blk_reg_469 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_11001_grp0 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone_grp0_done_reg : BOOLEAN := false;
    signal ap_block_pp0_stage0_subdone_grp0 : BOOLEAN;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal grp_fu_99_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal IQ_blk_reg_474 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_104_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ID_blk_1_reg_479 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_109_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal IQ_blk_1_reg_484 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_114_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add32_s_reg_489 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_119_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add38_277_1_reg_494 : STD_LOGIC_VECTOR (31 downto 0);
    signal ID_blk_2_reg_499 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage2_11001_grp0 : BOOLEAN;
    signal ap_block_pp0_stage2_subdone_grp0_done_reg : BOOLEAN := false;
    signal ap_block_pp0_stage2_subdone_grp0 : BOOLEAN;
    signal IQ_blk_2_reg_504 : STD_LOGIC_VECTOR (31 downto 0);
    signal ID_blk_3_reg_509 : STD_LOGIC_VECTOR (31 downto 0);
    signal IQ_blk_3_reg_514 : STD_LOGIC_VECTOR (31 downto 0);
    signal add32_1_2_reg_519 : STD_LOGIC_VECTOR (31 downto 0);
    signal add38_1_2_1_reg_524 : STD_LOGIC_VECTOR (31 downto 0);
    signal ID_blk_4_reg_529 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage1_11001_grp0 : BOOLEAN;
    signal ap_block_pp0_stage1_subdone_grp0_done_reg : BOOLEAN := false;
    signal ap_block_pp0_stage1_subdone_grp0 : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal IQ_blk_4_reg_534 : STD_LOGIC_VECTOR (31 downto 0);
    signal ID_blk_5_reg_539 : STD_LOGIC_VECTOR (31 downto 0);
    signal IQ_blk_5_reg_544 : STD_LOGIC_VECTOR (31 downto 0);
    signal add32_2_2_reg_549 : STD_LOGIC_VECTOR (31 downto 0);
    signal add38_2_2_1_reg_554 : STD_LOGIC_VECTOR (31 downto 0);
    signal ib_fu_64 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000000";
    signal add_ln51_fu_197_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_ib_load : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_block_pp0_stage2_01001_grp4 : BOOLEAN;
    signal ap_block_pp0_stage2_11001_grp4 : BOOLEAN;
    signal ap_block_pp0_stage2_01001_grp5 : BOOLEAN;
    signal ap_block_pp0_stage2_11001_grp5 : BOOLEAN;
    signal grp_fu_94_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_94_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage2_grp0 : BOOLEAN;
    signal ap_block_pp0_stage1_grp0 : BOOLEAN;
    signal ap_block_pp0_stage0_grp0 : BOOLEAN;
    signal grp_fu_99_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_99_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_104_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_104_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_109_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_109_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_114_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_114_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_119_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_119_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_124_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_124_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_129_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_129_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_134_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_134_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_139_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_139_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_144_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_144_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_149_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_149_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ib_cast_fu_187_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln59_fu_208_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_163_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_171_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln59_1_fu_230_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln59_2_fu_252_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln75_2_fu_280_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln75_1_fu_277_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln75_fu_274_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln76_2_fu_300_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln76_1_fu_297_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln76_fu_294_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_94_ce : STD_LOGIC;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal grp_fu_99_ce : STD_LOGIC;
    signal grp_fu_104_ce : STD_LOGIC;
    signal grp_fu_109_ce : STD_LOGIC;
    signal grp_fu_114_ce : STD_LOGIC;
    signal grp_fu_119_ce : STD_LOGIC;
    signal grp_fu_124_ce : STD_LOGIC;
    signal grp_fu_129_ce : STD_LOGIC;
    signal grp_fu_134_ce : STD_LOGIC;
    signal grp_fu_139_ce : STD_LOGIC;
    signal grp_fu_144_ce : STD_LOGIC;
    signal grp_fu_149_ce : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_idle_pp0_1to6 : STD_LOGIC;
    signal ap_done_pending_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ready_sig : STD_LOGIC;
    signal ap_done_sig : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component auto_parkcalc_fadd_32ns_32ns_32_5_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component auto_parkcalc_fmul_32ns_32ns_32_4_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component auto_parkcalc_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    fadd_32ns_32ns_32_5_full_dsp_1_U1 : component auto_parkcalc_fadd_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_94_p0,
        din1 => grp_fu_94_p1,
        ce => grp_fu_94_ce,
        dout => grp_fu_94_p2);

    fadd_32ns_32ns_32_5_full_dsp_1_U2 : component auto_parkcalc_fadd_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_99_p0,
        din1 => grp_fu_99_p1,
        ce => grp_fu_99_ce,
        dout => grp_fu_99_p2);

    fadd_32ns_32ns_32_5_full_dsp_1_U3 : component auto_parkcalc_fadd_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_104_p0,
        din1 => grp_fu_104_p1,
        ce => grp_fu_104_ce,
        dout => grp_fu_104_p2);

    fadd_32ns_32ns_32_5_full_dsp_1_U4 : component auto_parkcalc_fadd_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_109_p0,
        din1 => grp_fu_109_p1,
        ce => grp_fu_109_ce,
        dout => grp_fu_109_p2);

    fadd_32ns_32ns_32_5_full_dsp_1_U5 : component auto_parkcalc_fadd_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_114_p0,
        din1 => grp_fu_114_p1,
        ce => grp_fu_114_ce,
        dout => grp_fu_114_p2);

    fadd_32ns_32ns_32_5_full_dsp_1_U6 : component auto_parkcalc_fadd_32ns_32ns_32_5_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_119_p0,
        din1 => grp_fu_119_p1,
        ce => grp_fu_119_ce,
        dout => grp_fu_119_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U7 : component auto_parkcalc_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_124_p0,
        din1 => grp_fu_124_p1,
        ce => grp_fu_124_ce,
        dout => grp_fu_124_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U8 : component auto_parkcalc_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_129_p0,
        din1 => grp_fu_129_p1,
        ce => grp_fu_129_ce,
        dout => grp_fu_129_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U9 : component auto_parkcalc_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_134_p0,
        din1 => grp_fu_134_p1,
        ce => grp_fu_134_ce,
        dout => grp_fu_134_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U10 : component auto_parkcalc_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_139_p0,
        din1 => grp_fu_139_p1,
        ce => grp_fu_139_ce,
        dout => grp_fu_139_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U11 : component auto_parkcalc_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_144_p0,
        din1 => grp_fu_144_p1,
        ce => grp_fu_144_ce,
        dout => grp_fu_144_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U12 : component auto_parkcalc_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_149_p0,
        din1 => grp_fu_149_p1,
        ce => grp_fu_149_ce,
        dout => grp_fu_149_p2);

    flow_control_loop_pipe_sequential_init_U : component auto_parkcalc_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready_sig,
        ap_done => ap_done_sig,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage2,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_block_pp0_stage0_subdone_grp0_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_block_pp0_stage0_subdone_grp0_done_reg <= ap_const_boolean_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                        ap_block_pp0_stage0_subdone_grp0_done_reg <= ap_const_boolean_0;
                    elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0)) then 
                        ap_block_pp0_stage0_subdone_grp0_done_reg <= ap_const_boolean_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_block_pp0_stage1_subdone_grp0_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_block_pp0_stage1_subdone_grp0_done_reg <= ap_const_boolean_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then 
                        ap_block_pp0_stage1_subdone_grp0_done_reg <= ap_const_boolean_0;
                    elsif ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp0)) then 
                        ap_block_pp0_stage1_subdone_grp0_done_reg <= ap_const_boolean_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_block_pp0_stage2_subdone_grp0_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_block_pp0_stage2_subdone_grp0_done_reg <= ap_const_boolean_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then 
                        ap_block_pp0_stage2_subdone_grp0_done_reg <= ap_const_boolean_0;
                    elsif ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone_grp0)) then 
                        ap_block_pp0_stage2_subdone_grp0_done_reg <= ap_const_boolean_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_block_pp0_stage2_subdone_grp2_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_block_pp0_stage2_subdone_grp2_done_reg <= ap_const_boolean_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then 
                        ap_block_pp0_stage2_subdone_grp2_done_reg <= ap_const_boolean_0;
                    elsif ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone_grp2)) then 
                        ap_block_pp0_stage2_subdone_grp2_done_reg <= ap_const_boolean_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_block_pp0_stage2_subdone_grp4_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_block_pp0_stage2_subdone_grp4_done_reg <= ap_const_boolean_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then 
                        ap_block_pp0_stage2_subdone_grp4_done_reg <= ap_const_boolean_0;
                    elsif ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone_grp4)) then 
                        ap_block_pp0_stage2_subdone_grp4_done_reg <= ap_const_boolean_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_block_pp0_stage2_subdone_grp5_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_block_pp0_stage2_subdone_grp5_done_reg <= ap_const_boolean_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) then
                    if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then 
                        ap_block_pp0_stage2_subdone_grp5_done_reg <= ap_const_boolean_0;
                    elsif ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone_grp5)) then 
                        ap_block_pp0_stage2_subdone_grp5_done_reg <= ap_const_boolean_1;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_loop_exit_ready_pp0_iter5_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage2)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ib_fu_64_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (icmp_ln51_fu_191_p2 = ap_const_lv1_1))) then 
                    ib_fu_64 <= add_ln51_fu_197_p2;
                elsif ((ap_loop_init = ap_const_logic_1)) then 
                    ib_fu_64 <= ap_const_lv30_0;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ID_blk_1_reg_479 <= grp_fu_104_p2;
                ID_blk_reg_469 <= grp_fu_94_p2;
                IQ_blk_1_reg_484 <= grp_fu_109_p2;
                IQ_blk_reg_474 <= grp_fu_99_p2;
                add32_s_reg_489 <= grp_fu_114_p2;
                add38_277_1_reg_494 <= grp_fu_119_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001_grp0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                ID_blk_2_reg_499 <= grp_fu_94_p2;
                ID_blk_3_reg_509 <= grp_fu_104_p2;
                IQ_blk_2_reg_504 <= grp_fu_99_p2;
                IQ_blk_3_reg_514 <= grp_fu_109_p2;
                add32_1_2_reg_519 <= grp_fu_114_p2;
                add38_1_2_1_reg_524 <= grp_fu_119_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001_grp0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                ID_blk_4_reg_529 <= grp_fu_94_p2;
                ID_blk_5_reg_539 <= grp_fu_104_p2;
                IQ_blk_4_reg_534 <= grp_fu_99_p2;
                IQ_blk_5_reg_544 <= grp_fu_109_p2;
                add32_2_2_reg_549 <= grp_fu_114_p2;
                add38_2_2_1_reg_554 <= grp_fu_119_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln51_reg_321 <= icmp_ln51_fu_191_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone_grp2_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001_grp2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                product_10_reg_429 <= grp_fu_144_p2;
                product_11_reg_434 <= grp_fu_149_p2;
                product_6_reg_409 <= grp_fu_124_p2;
                product_7_reg_414 <= grp_fu_129_p2;
                product_8_reg_419 <= grp_fu_134_p2;
                product_9_reg_424 <= grp_fu_139_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone_grp2_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001_grp2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                product_10_reg_429_pp0_iter2_reg <= product_10_reg_429;
                product_11_reg_434_pp0_iter2_reg <= product_11_reg_434;
                product_6_reg_409_pp0_iter2_reg <= product_6_reg_409;
                product_7_reg_414_pp0_iter2_reg <= product_7_reg_414;
                product_8_reg_419_pp0_iter2_reg <= product_8_reg_419;
                product_9_reg_424_pp0_iter2_reg <= product_9_reg_424;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                product_12_reg_439 <= grp_fu_124_p2;
                product_13_reg_444 <= grp_fu_129_p2;
                product_14_reg_449 <= grp_fu_134_p2;
                product_15_reg_454 <= grp_fu_139_p2;
                product_16_reg_459 <= grp_fu_144_p2;
                product_17_reg_464 <= grp_fu_149_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                product_12_reg_439_pp0_iter3_reg <= product_12_reg_439;
                product_12_reg_439_pp0_iter4_reg <= product_12_reg_439_pp0_iter3_reg;
                product_13_reg_444_pp0_iter3_reg <= product_13_reg_444;
                product_13_reg_444_pp0_iter4_reg <= product_13_reg_444_pp0_iter3_reg;
                product_14_reg_449_pp0_iter3_reg <= product_14_reg_449;
                product_14_reg_449_pp0_iter4_reg <= product_14_reg_449_pp0_iter3_reg;
                product_15_reg_454_pp0_iter3_reg <= product_15_reg_454;
                product_15_reg_454_pp0_iter4_reg <= product_15_reg_454_pp0_iter3_reg;
                product_16_reg_459_pp0_iter3_reg <= product_16_reg_459;
                product_16_reg_459_pp0_iter4_reg <= product_16_reg_459_pp0_iter3_reg;
                product_17_reg_464_pp0_iter3_reg <= product_17_reg_464;
                product_17_reg_464_pp0_iter4_reg <= product_17_reg_464_pp0_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001_grp1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                product_1_reg_384 <= grp_fu_129_p2;
                product_2_reg_389 <= grp_fu_134_p2;
                product_3_reg_394 <= grp_fu_139_p2;
                product_4_reg_399 <= grp_fu_144_p2;
                product_5_reg_404 <= grp_fu_149_p2;
                product_reg_379 <= grp_fu_124_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage2_subdone, ap_block_pp0_stage0_subdone, ap_block_pp0_stage1_subdone, ap_idle_pp0_1to6, ap_done_pending_pp0, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_done_pending_pp0 = ap_const_logic_0) and (ap_idle_pp0_1to6 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when others =>  
                ap_NS_fsm <= "XXX";
        end case;
    end process;

    A_ROW_TDATA_blk_n_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, A_ROW_TVALID, icmp_ln51_reg_321, ap_block_pp0_stage2_subdone_grp2_done_reg, ap_enable_reg_pp0_iter0_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_grp1, ap_block_pp0_stage2_grp2, ap_block_pp0_stage0_grp3)
    begin
        if ((((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone_grp2_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage2_grp2) and (icmp_ln51_reg_321 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_grp1) and (icmp_ln51_reg_321 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_grp3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            A_ROW_TDATA_blk_n <= A_ROW_TVALID;
        else 
            A_ROW_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    A_ROW_TREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, icmp_ln51_reg_321, ap_block_pp0_stage2_subdone_grp2_done_reg, ap_enable_reg_pp0_iter0_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001_grp1, ap_block_pp0_stage2_11001_grp2, ap_block_pp0_stage0_11001_grp3)
    begin
        if ((((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone_grp2_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001_grp2) and (icmp_ln51_reg_321 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001_grp1) and (icmp_ln51_reg_321 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            A_ROW_TREADY <= ap_const_logic_1;
        else 
            A_ROW_TREADY <= ap_const_logic_0;
        end if; 
    end process;

    A_blk_1_fu_218_p1 <= grp_fu_163_p3;
    A_blk_2_fu_234_p1 <= trunc_ln59_1_fu_230_p1;
    A_blk_3_fu_240_p1 <= grp_fu_163_p3;
    A_blk_4_fu_256_p1 <= trunc_ln59_2_fu_252_p1;
    A_blk_5_fu_262_p1 <= grp_fu_163_p3;
    A_blk_fu_212_p1 <= trunc_ln59_fu_208_p1;
    ID_TDATA <= ((bitcast_ln75_2_fu_280_p1 & bitcast_ln75_1_fu_277_p1) & bitcast_ln75_fu_274_p1);

    ID_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage2, ID_TREADY, ap_block_pp0_stage2_subdone_grp4_done_reg, ap_block_pp0_stage2_grp4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone_grp4_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage2_grp4) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ID_TDATA_blk_n <= ID_TREADY;
        else 
            ID_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    ID_TVALID_assign_proc : process(ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_subdone_grp4_done_reg, ap_block_pp0_stage2_11001_grp4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone_grp4_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001_grp4) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ID_TVALID <= ap_const_logic_1;
        else 
            ID_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    IQ_TDATA <= ((bitcast_ln76_2_fu_300_p1 & bitcast_ln76_1_fu_297_p1) & bitcast_ln76_fu_294_p1);

    IQ_TDATA_blk_n_assign_proc : process(ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage2, IQ_TREADY, ap_block_pp0_stage2_subdone_grp5_done_reg, ap_block_pp0_stage2_grp5)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone_grp5_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage2_grp5) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            IQ_TDATA_blk_n <= IQ_TREADY;
        else 
            IQ_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    IQ_TVALID_assign_proc : process(ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_subdone_grp5_done_reg, ap_block_pp0_stage2_11001_grp5)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone_grp5_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001_grp5) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            IQ_TVALID <= ap_const_logic_1;
        else 
            IQ_TVALID <= ap_const_logic_0;
        end if; 
    end process;

    add_ln51_fu_197_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_ib_load) + unsigned(ap_const_lv30_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, A_ROW_TVALID)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_const_logic_0 = A_ROW_TVALID) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage0_11001_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_grp3_assign_proc : process(ap_enable_reg_pp0_iter1, A_ROW_TVALID)
    begin
                ap_block_pp0_stage0_11001_grp3 <= ((ap_const_logic_0 = A_ROW_TVALID) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage0_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_grp3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, A_ROW_TVALID)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_const_logic_0 = A_ROW_TVALID) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage0_subdone_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state2_pp0_stage1_iter0_grp1)
    begin
                ap_block_pp0_stage1_11001 <= ((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_pp0_stage1_iter0_grp1));
    end process;

        ap_block_pp0_stage1_11001_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_11001_grp1_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state2_pp0_stage1_iter0_grp1)
    begin
                ap_block_pp0_stage1_11001_grp1 <= ((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_pp0_stage1_iter0_grp1));
    end process;

        ap_block_pp0_stage1_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_grp1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state2_pp0_stage1_iter0_grp1)
    begin
                ap_block_pp0_stage1_subdone <= ((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state2_pp0_stage1_iter0_grp1));
    end process;

        ap_block_pp0_stage1_subdone_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_01001_grp4_assign_proc : process(ap_enable_reg_pp0_iter6, ID_TREADY, ap_block_pp0_stage2_subdone_grp4_done_reg)
    begin
                ap_block_pp0_stage2_01001_grp4 <= ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone_grp4_done_reg) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_0 = ID_TREADY));
    end process;


    ap_block_pp0_stage2_01001_grp5_assign_proc : process(ap_enable_reg_pp0_iter6, IQ_TREADY, ap_block_pp0_stage2_subdone_grp5_done_reg)
    begin
                ap_block_pp0_stage2_01001_grp5 <= ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone_grp5_done_reg) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_0 = IQ_TREADY));
    end process;


    ap_block_pp0_stage2_11001_assign_proc : process(ap_enable_reg_pp0_iter6, ID_TREADY, IQ_TREADY, ap_block_state3_pp0_stage2_iter0_grp2, ap_block_pp0_stage2_subdone_grp2_done_reg, ap_enable_reg_pp0_iter0_reg, ap_block_pp0_stage2_subdone_grp4_done_reg, ap_block_pp0_stage2_subdone_grp5_done_reg)
    begin
                ap_block_pp0_stage2_11001 <= (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone_grp5_done_reg) and (ap_const_logic_0 = IQ_TREADY)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone_grp4_done_reg) and (ap_const_logic_0 = ID_TREADY)))) or ((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone_grp2_done_reg) and (ap_const_boolean_1 = ap_block_state3_pp0_stage2_iter0_grp2)));
    end process;

        ap_block_pp0_stage2_11001_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_11001_grp2_assign_proc : process(ap_block_state3_pp0_stage2_iter0_grp2, ap_block_pp0_stage2_subdone_grp2_done_reg, ap_enable_reg_pp0_iter0_reg)
    begin
                ap_block_pp0_stage2_11001_grp2 <= ((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone_grp2_done_reg) and (ap_const_boolean_1 = ap_block_state3_pp0_stage2_iter0_grp2));
    end process;


    ap_block_pp0_stage2_11001_grp4_assign_proc : process(ap_enable_reg_pp0_iter6, ID_TREADY, ap_block_pp0_stage2_subdone_grp4_done_reg)
    begin
                ap_block_pp0_stage2_11001_grp4 <= ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone_grp4_done_reg) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_0 = ID_TREADY));
    end process;


    ap_block_pp0_stage2_11001_grp5_assign_proc : process(ap_enable_reg_pp0_iter6, IQ_TREADY, ap_block_pp0_stage2_subdone_grp5_done_reg)
    begin
                ap_block_pp0_stage2_11001_grp5 <= ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone_grp5_done_reg) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_0 = IQ_TREADY));
    end process;

        ap_block_pp0_stage2_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_grp2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_grp4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_grp5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_subdone_assign_proc : process(ap_enable_reg_pp0_iter6, ID_TREADY, IQ_TREADY, ap_block_state3_pp0_stage2_iter0_grp2, ap_block_pp0_stage2_subdone_grp2_done_reg, ap_enable_reg_pp0_iter0_reg, ap_block_pp0_stage2_subdone_grp4_done_reg, ap_block_pp0_stage2_subdone_grp5_done_reg)
    begin
                ap_block_pp0_stage2_subdone <= (((ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone_grp5_done_reg) and (ap_const_logic_0 = IQ_TREADY)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone_grp4_done_reg) and (ap_const_logic_0 = ID_TREADY)))) or ((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone_grp2_done_reg) and (ap_const_boolean_1 = ap_block_state3_pp0_stage2_iter0_grp2)));
    end process;

        ap_block_pp0_stage2_subdone_grp0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage2_subdone_grp2_assign_proc : process(ap_block_state3_pp0_stage2_iter0_grp2, ap_block_pp0_stage2_subdone_grp2_done_reg, ap_enable_reg_pp0_iter0_reg)
    begin
                ap_block_pp0_stage2_subdone_grp2 <= ((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone_grp2_done_reg) and (ap_const_boolean_1 = ap_block_state3_pp0_stage2_iter0_grp2));
    end process;


    ap_block_pp0_stage2_subdone_grp4_assign_proc : process(ap_enable_reg_pp0_iter6, ID_TREADY, ap_block_pp0_stage2_subdone_grp4_done_reg)
    begin
                ap_block_pp0_stage2_subdone_grp4 <= ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone_grp4_done_reg) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_0 = ID_TREADY));
    end process;


    ap_block_pp0_stage2_subdone_grp5_assign_proc : process(ap_enable_reg_pp0_iter6, IQ_TREADY, ap_block_pp0_stage2_subdone_grp5_done_reg)
    begin
                ap_block_pp0_stage2_subdone_grp5 <= ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone_grp5_done_reg) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_0 = IQ_TREADY));
    end process;


    ap_block_state2_pp0_stage1_iter0_grp1_assign_proc : process(A_ROW_TVALID, icmp_ln51_reg_321)
    begin
                ap_block_state2_pp0_stage1_iter0_grp1 <= ((icmp_ln51_reg_321 = ap_const_lv1_1) and (ap_const_logic_0 = A_ROW_TVALID));
    end process;


    ap_block_state3_pp0_stage2_iter0_grp2_assign_proc : process(A_ROW_TVALID, icmp_ln51_reg_321)
    begin
                ap_block_state3_pp0_stage2_iter0_grp2 <= ((icmp_ln51_reg_321 = ap_const_lv1_1) and (ap_const_logic_0 = A_ROW_TVALID));
    end process;


    ap_condition_exit_pp0_iter0_stage2_assign_proc : process(ap_CS_fsm_pp0_stage2, icmp_ln51_reg_321, ap_block_pp0_stage2_subdone, ap_enable_reg_pp0_iter0_reg)
    begin
        if (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (icmp_ln51_reg_321 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_condition_exit_pp0_iter0_stage2 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage2 <= ap_const_logic_0;
        end if; 
    end process;

    ap_done <= ap_done_sig;

    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter5_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_loop_exit_ready_pp0_iter5_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;


    ap_done_pending_pp0_assign_proc : process(ap_loop_exit_ready, ap_loop_exit_ready_pp0_iter1_reg, ap_loop_exit_ready_pp0_iter2_reg, ap_loop_exit_ready_pp0_iter3_reg, ap_loop_exit_ready_pp0_iter4_reg, ap_loop_exit_ready_pp0_iter5_reg)
    begin
        if (not(((ap_loop_exit_ready = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter5_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter4_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter3_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter2_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_0)))) then 
            ap_done_pending_pp0 <= ap_const_logic_1;
        else 
            ap_done_pending_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_start_int = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to6_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to6 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to6 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage2;
    ap_ready <= ap_ready_sig;

    ap_ready_int_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_subdone, ap_enable_reg_pp0_iter0_reg)
    begin
        if (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_ib_load_assign_proc : process(ap_CS_fsm_pp0_stage0, ib_fu_64, ap_loop_init, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_sig_allocacmp_ib_load <= ap_const_lv30_0;
        else 
            ap_sig_allocacmp_ib_load <= ib_fu_64;
        end if; 
    end process;

    bitcast_ln59_3_fu_246_p1 <= grp_fu_171_p3;
    bitcast_ln59_6_fu_268_p1 <= grp_fu_171_p3;
    bitcast_ln59_fu_224_p1 <= grp_fu_171_p3;
    bitcast_ln75_1_fu_277_p1 <= ID_blk_5_reg_539;
    bitcast_ln75_2_fu_280_p1 <= add32_2_2_reg_549;
    bitcast_ln75_fu_274_p1 <= ID_blk_4_reg_529;
    bitcast_ln76_1_fu_297_p1 <= IQ_blk_5_reg_544;
    bitcast_ln76_2_fu_300_p1 <= add38_2_2_1_reg_554;
    bitcast_ln76_fu_294_p1 <= IQ_blk_4_reg_534;

    grp_fu_104_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg, ap_block_pp0_stage2_11001_grp0, ap_block_pp0_stage2_subdone_grp0_done_reg, ap_block_pp0_stage1_11001_grp0, ap_block_pp0_stage1_subdone_grp0_done_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_104_ce <= ap_const_logic_1;
        else 
            grp_fu_104_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_104_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, product_2_reg_389, ID_blk_1_reg_479, ID_blk_3_reg_509, ap_block_pp0_stage2_grp0, ap_block_pp0_stage1_grp0, ap_block_pp0_stage0_grp0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_grp0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_104_p0 <= ID_blk_3_reg_509;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_grp0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_104_p0 <= ID_blk_1_reg_479;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_grp0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_104_p0 <= product_2_reg_389;
        else 
            grp_fu_104_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_104_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, product_8_reg_419_pp0_iter2_reg, product_14_reg_449_pp0_iter4_reg, ap_block_pp0_stage2_grp0, ap_block_pp0_stage1_grp0, ap_block_pp0_stage0_grp0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_grp0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_104_p1 <= product_14_reg_449_pp0_iter4_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_grp0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_104_p1 <= product_8_reg_419_pp0_iter2_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_grp0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_104_p1 <= ap_const_lv32_0;
        else 
            grp_fu_104_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_109_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg, ap_block_pp0_stage2_11001_grp0, ap_block_pp0_stage2_subdone_grp0_done_reg, ap_block_pp0_stage1_11001_grp0, ap_block_pp0_stage1_subdone_grp0_done_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_109_ce <= ap_const_logic_1;
        else 
            grp_fu_109_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_109_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, product_3_reg_394, IQ_blk_1_reg_484, IQ_blk_3_reg_514, ap_block_pp0_stage2_grp0, ap_block_pp0_stage1_grp0, ap_block_pp0_stage0_grp0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_grp0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_109_p0 <= IQ_blk_3_reg_514;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_grp0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_109_p0 <= IQ_blk_1_reg_484;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_grp0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_109_p0 <= product_3_reg_394;
        else 
            grp_fu_109_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_109_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, product_9_reg_424_pp0_iter2_reg, product_15_reg_454_pp0_iter4_reg, ap_block_pp0_stage2_grp0, ap_block_pp0_stage1_grp0, ap_block_pp0_stage0_grp0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_grp0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_109_p1 <= product_15_reg_454_pp0_iter4_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_grp0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_109_p1 <= product_9_reg_424_pp0_iter2_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_grp0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_109_p1 <= ap_const_lv32_0;
        else 
            grp_fu_109_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_114_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg, ap_block_pp0_stage2_11001_grp0, ap_block_pp0_stage2_subdone_grp0_done_reg, ap_block_pp0_stage1_11001_grp0, ap_block_pp0_stage1_subdone_grp0_done_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_114_ce <= ap_const_logic_1;
        else 
            grp_fu_114_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_114_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, product_4_reg_399, add32_s_reg_489, add32_1_2_reg_519, ap_block_pp0_stage2_grp0, ap_block_pp0_stage1_grp0, ap_block_pp0_stage0_grp0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_grp0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_114_p0 <= add32_1_2_reg_519;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_grp0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_114_p0 <= add32_s_reg_489;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_grp0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_114_p0 <= product_4_reg_399;
        else 
            grp_fu_114_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_114_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, product_10_reg_429_pp0_iter2_reg, product_16_reg_459_pp0_iter4_reg, ap_block_pp0_stage2_grp0, ap_block_pp0_stage1_grp0, ap_block_pp0_stage0_grp0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_grp0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_114_p1 <= product_16_reg_459_pp0_iter4_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_grp0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_114_p1 <= product_10_reg_429_pp0_iter2_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_grp0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_114_p1 <= ap_const_lv32_0;
        else 
            grp_fu_114_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_119_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg, ap_block_pp0_stage2_11001_grp0, ap_block_pp0_stage2_subdone_grp0_done_reg, ap_block_pp0_stage1_11001_grp0, ap_block_pp0_stage1_subdone_grp0_done_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_119_ce <= ap_const_logic_1;
        else 
            grp_fu_119_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_119_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, product_5_reg_404, add38_277_1_reg_494, add38_1_2_1_reg_524, ap_block_pp0_stage2_grp0, ap_block_pp0_stage1_grp0, ap_block_pp0_stage0_grp0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_grp0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_119_p0 <= add38_1_2_1_reg_524;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_grp0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_119_p0 <= add38_277_1_reg_494;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_grp0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_119_p0 <= product_5_reg_404;
        else 
            grp_fu_119_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_119_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, product_11_reg_434_pp0_iter2_reg, product_17_reg_464_pp0_iter4_reg, ap_block_pp0_stage2_grp0, ap_block_pp0_stage1_grp0, ap_block_pp0_stage0_grp0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_grp0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_119_p1 <= product_17_reg_464_pp0_iter4_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_grp0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_119_p1 <= product_11_reg_434_pp0_iter2_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_grp0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_119_p1 <= ap_const_lv32_0;
        else 
            grp_fu_119_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_124_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_subdone_grp2_done_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001_grp1, ap_block_pp0_stage2_11001_grp2, ap_block_pp0_stage0_11001_grp3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_subdone_grp2_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001_grp2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001_grp1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_124_ce <= ap_const_logic_1;
        else 
            grp_fu_124_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_124_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_grp1, ap_block_pp0_stage2_grp2, ap_block_pp0_stage0_grp3, A_blk_fu_212_p1, A_blk_2_fu_234_p1, A_blk_4_fu_256_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_grp3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_124_p0 <= A_blk_4_fu_256_p1;
        elsif (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_grp2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_124_p0 <= A_blk_2_fu_234_p1;
        elsif (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_grp1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_124_p0 <= A_blk_fu_212_p1;
        else 
            grp_fu_124_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_124_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_grp1, ap_block_pp0_stage2_grp2, ap_block_pp0_stage0_grp3)
    begin
        if ((((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_grp2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_grp3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_124_p1 <= ap_const_lv32_BED0FF97;
        elsif (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_grp1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_124_p1 <= ap_const_lv32_3F510625;
        else 
            grp_fu_124_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_129_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_subdone_grp2_done_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001_grp1, ap_block_pp0_stage2_11001_grp2, ap_block_pp0_stage0_11001_grp3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_subdone_grp2_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001_grp2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001_grp1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_129_ce <= ap_const_logic_1;
        else 
            grp_fu_129_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_129_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_grp1, ap_block_pp0_stage2_grp2, ap_block_pp0_stage0_grp3, A_blk_fu_212_p1, A_blk_2_fu_234_p1, A_blk_4_fu_256_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_grp3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_129_p0 <= A_blk_4_fu_256_p1;
        elsif (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_grp2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_129_p0 <= A_blk_2_fu_234_p1;
        elsif (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_grp1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_129_p0 <= A_blk_fu_212_p1;
        else 
            grp_fu_129_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_129_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_grp1, ap_block_pp0_stage2_grp2, ap_block_pp0_stage0_grp3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_grp3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_129_p1 <= ap_const_lv32_BF350481;
        elsif (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_grp2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_129_p1 <= ap_const_lv32_3F350481;
        elsif (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_grp1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_129_p1 <= ap_const_lv32_0;
        else 
            grp_fu_129_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_134_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_subdone_grp2_done_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001_grp1, ap_block_pp0_stage2_11001_grp2, ap_block_pp0_stage0_11001_grp3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_subdone_grp2_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001_grp2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001_grp1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_134_ce <= ap_const_logic_1;
        else 
            grp_fu_134_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_134_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_grp1, ap_block_pp0_stage2_grp2, ap_block_pp0_stage0_grp3, A_blk_1_fu_218_p1, A_blk_3_fu_240_p1, A_blk_5_fu_262_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_grp3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_134_p0 <= A_blk_5_fu_262_p1;
        elsif (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_grp2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_134_p0 <= A_blk_3_fu_240_p1;
        elsif (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_grp1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_134_p0 <= A_blk_1_fu_218_p1;
        else 
            grp_fu_134_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_134_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_grp1, ap_block_pp0_stage2_grp2, ap_block_pp0_stage0_grp3)
    begin
        if ((((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_grp2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_grp3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_134_p1 <= ap_const_lv32_BED0FF97;
        elsif (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_grp1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_134_p1 <= ap_const_lv32_3F510625;
        else 
            grp_fu_134_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_139_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_subdone_grp2_done_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001_grp1, ap_block_pp0_stage2_11001_grp2, ap_block_pp0_stage0_11001_grp3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_subdone_grp2_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001_grp2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001_grp1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_139_ce <= ap_const_logic_1;
        else 
            grp_fu_139_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_139_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_grp1, ap_block_pp0_stage2_grp2, ap_block_pp0_stage0_grp3, A_blk_1_fu_218_p1, A_blk_3_fu_240_p1, A_blk_5_fu_262_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_grp3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_139_p0 <= A_blk_5_fu_262_p1;
        elsif (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_grp2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_139_p0 <= A_blk_3_fu_240_p1;
        elsif (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_grp1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_139_p0 <= A_blk_1_fu_218_p1;
        else 
            grp_fu_139_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_139_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_grp1, ap_block_pp0_stage2_grp2, ap_block_pp0_stage0_grp3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_grp3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_139_p1 <= ap_const_lv32_BF350481;
        elsif (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_grp2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_139_p1 <= ap_const_lv32_3F350481;
        elsif (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_grp1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_139_p1 <= ap_const_lv32_0;
        else 
            grp_fu_139_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_144_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_subdone_grp2_done_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001_grp1, ap_block_pp0_stage2_11001_grp2, ap_block_pp0_stage0_11001_grp3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_subdone_grp2_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001_grp2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001_grp1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_144_ce <= ap_const_logic_1;
        else 
            grp_fu_144_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_144_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_grp1, ap_block_pp0_stage2_grp2, ap_block_pp0_stage0_grp3, bitcast_ln59_fu_224_p1, bitcast_ln59_3_fu_246_p1, bitcast_ln59_6_fu_268_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_grp3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_144_p0 <= bitcast_ln59_6_fu_268_p1;
        elsif (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_grp2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_144_p0 <= bitcast_ln59_3_fu_246_p1;
        elsif (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_grp1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_144_p0 <= bitcast_ln59_fu_224_p1;
        else 
            grp_fu_144_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_144_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_grp1, ap_block_pp0_stage2_grp2, ap_block_pp0_stage0_grp3)
    begin
        if ((((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_grp2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_grp3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_144_p1 <= ap_const_lv32_BED0FF97;
        elsif (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_grp1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_144_p1 <= ap_const_lv32_3F510625;
        else 
            grp_fu_144_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_149_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_subdone_grp2_done_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001_grp1, ap_block_pp0_stage2_11001_grp2, ap_block_pp0_stage0_11001_grp3)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage2_subdone_grp2_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001_grp2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_11001_grp1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_149_ce <= ap_const_logic_1;
        else 
            grp_fu_149_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_149_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_grp1, ap_block_pp0_stage2_grp2, ap_block_pp0_stage0_grp3, bitcast_ln59_fu_224_p1, bitcast_ln59_3_fu_246_p1, bitcast_ln59_6_fu_268_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_grp3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_149_p0 <= bitcast_ln59_6_fu_268_p1;
        elsif (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_grp2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_149_p0 <= bitcast_ln59_3_fu_246_p1;
        elsif (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_grp1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_149_p0 <= bitcast_ln59_fu_224_p1;
        else 
            grp_fu_149_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_149_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage2, ap_enable_reg_pp0_iter0_reg, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_grp1, ap_block_pp0_stage2_grp2, ap_block_pp0_stage0_grp3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_grp3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_149_p1 <= ap_const_lv32_BF350481;
        elsif (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_grp2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_149_p1 <= ap_const_lv32_3F350481;
        elsif (((ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_grp1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_149_p1 <= ap_const_lv32_0;
        else 
            grp_fu_149_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_163_p3 <= A_ROW_TDATA(63 downto 32);
    grp_fu_171_p3 <= A_ROW_TDATA(95 downto 64);

    grp_fu_94_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg, ap_block_pp0_stage2_11001_grp0, ap_block_pp0_stage2_subdone_grp0_done_reg, ap_block_pp0_stage1_11001_grp0, ap_block_pp0_stage1_subdone_grp0_done_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_94_ce <= ap_const_logic_1;
        else 
            grp_fu_94_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_94_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, product_reg_379, ID_blk_reg_469, ID_blk_2_reg_499, ap_block_pp0_stage2_grp0, ap_block_pp0_stage1_grp0, ap_block_pp0_stage0_grp0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_grp0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_94_p0 <= ID_blk_2_reg_499;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_grp0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_94_p0 <= ID_blk_reg_469;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_grp0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_94_p0 <= product_reg_379;
        else 
            grp_fu_94_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_94_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, product_6_reg_409_pp0_iter2_reg, product_12_reg_439_pp0_iter4_reg, ap_block_pp0_stage2_grp0, ap_block_pp0_stage1_grp0, ap_block_pp0_stage0_grp0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_grp0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_94_p1 <= product_12_reg_439_pp0_iter4_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_grp0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_94_p1 <= product_6_reg_409_pp0_iter2_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_grp0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_94_p1 <= ap_const_lv32_0;
        else 
            grp_fu_94_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_99_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage0_11001_grp0, ap_block_pp0_stage0_subdone_grp0_done_reg, ap_block_pp0_stage2_11001_grp0, ap_block_pp0_stage2_subdone_grp0_done_reg, ap_block_pp0_stage1_11001_grp0, ap_block_pp0_stage1_subdone_grp0_done_reg)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone_grp0_done_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001_grp0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_99_ce <= ap_const_logic_1;
        else 
            grp_fu_99_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_99_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, product_1_reg_384, IQ_blk_reg_474, IQ_blk_2_reg_504, ap_block_pp0_stage2_grp0, ap_block_pp0_stage1_grp0, ap_block_pp0_stage0_grp0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_grp0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_99_p0 <= IQ_blk_2_reg_504;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_grp0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_99_p0 <= IQ_blk_reg_474;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_grp0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_99_p0 <= product_1_reg_384;
        else 
            grp_fu_99_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_99_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage1, product_7_reg_414_pp0_iter2_reg, product_13_reg_444_pp0_iter4_reg, ap_block_pp0_stage2_grp0, ap_block_pp0_stage1_grp0, ap_block_pp0_stage0_grp0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_grp0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_99_p1 <= product_13_reg_444_pp0_iter4_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_grp0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_99_p1 <= product_7_reg_414_pp0_iter2_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_grp0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_99_p1 <= ap_const_lv32_0;
        else 
            grp_fu_99_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    ib_cast_fu_187_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_sig_allocacmp_ib_load),31));
    icmp_ln51_fu_191_p2 <= "1" when (signed(ib_cast_fu_187_p1) < signed(select_ln50_1)) else "0";
    trunc_ln59_1_fu_230_p1 <= A_ROW_TDATA(32 - 1 downto 0);
    trunc_ln59_2_fu_252_p1 <= A_ROW_TDATA(32 - 1 downto 0);
    trunc_ln59_fu_208_p1 <= A_ROW_TDATA(32 - 1 downto 0);
end behav;
