-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity unpack_blk_to_stream is
generic (
    C_S_AXI_CTRL_ADDR_WIDTH : INTEGER := 5;
    C_S_AXI_CTRL_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    blk_stream_TDATA : IN STD_LOGIC_VECTOR (95 downto 0);
    blk_stream_TVALID : IN STD_LOGIC;
    blk_stream_TREADY : OUT STD_LOGIC;
    output_stream_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_stream_TVALID : OUT STD_LOGIC;
    output_stream_TREADY : IN STD_LOGIC;
    output_stream_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    output_stream_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    output_stream_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    s_axi_CTRL_AWVALID : IN STD_LOGIC;
    s_axi_CTRL_AWREADY : OUT STD_LOGIC;
    s_axi_CTRL_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_ADDR_WIDTH-1 downto 0);
    s_axi_CTRL_WVALID : IN STD_LOGIC;
    s_axi_CTRL_WREADY : OUT STD_LOGIC;
    s_axi_CTRL_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH-1 downto 0);
    s_axi_CTRL_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH/8-1 downto 0);
    s_axi_CTRL_ARVALID : IN STD_LOGIC;
    s_axi_CTRL_ARREADY : OUT STD_LOGIC;
    s_axi_CTRL_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_ADDR_WIDTH-1 downto 0);
    s_axi_CTRL_RVALID : OUT STD_LOGIC;
    s_axi_CTRL_RREADY : IN STD_LOGIC;
    s_axi_CTRL_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH-1 downto 0);
    s_axi_CTRL_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_CTRL_BVALID : OUT STD_LOGIC;
    s_axi_CTRL_BREADY : IN STD_LOGIC;
    s_axi_CTRL_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of unpack_blk_to_stream is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "unpack_blk_to_stream_unpack_blk_to_stream,hls_ip_2024_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.912000,HLS_SYN_LAT=2147483683,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1087,HLS_SYN_LUT=1114,HLS_VERSION=2024_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (39 downto 0) := "0000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (39 downto 0) := "0000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (39 downto 0) := "0000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (39 downto 0) := "0000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (39 downto 0) := "0000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (39 downto 0) := "0000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (39 downto 0) := "0001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (39 downto 0) := "0010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (39 downto 0) := "0100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (39 downto 0) := "1000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant C_S_AXI_DATA_WIDTH : INTEGER := 32;
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv30_0 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv65_155555556 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000101010101010101010101010101010110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv65_0 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv31_7FFFFFFF : STD_LOGIC_VECTOR (30 downto 0) := "1111111111111111111111111111111";
    constant ap_const_lv30_1 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000001";
    constant ap_const_lv96_20 : STD_LOGIC_VECTOR (95 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_const_lv96_40 : STD_LOGIC_VECTOR (95 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal n : STD_LOGIC_VECTOR (31 downto 0);
    signal blk_stream_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal add_ln97_fu_141_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln97_reg_330 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_reg_335 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_fu_136_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal mul_ln97_reg_346 : STD_LOGIC_VECTOR (64 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_3_cast_reg_351 : STD_LOGIC_VECTOR (29 downto 0);
    signal select_ln97_fu_195_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal select_ln97_reg_356 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal select_ln97_1_fu_210_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal select_ln97_1_reg_361 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal last_block_size_fu_227_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal last_block_size_reg_366 : STD_LOGIC_VECTOR (2 downto 0);
    signal sub3_fu_235_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal sub3_reg_371 : STD_LOGIC_VECTOR (30 downto 0);
    signal icmp_ln104_fu_259_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln104_reg_379 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal temp_blk_fu_273_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_blk_reg_385 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_blk_1_fu_286_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_blk_1_reg_390 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_blk_2_fu_299_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_blk_2_reg_395 : STD_LOGIC_VECTOR (31 downto 0);
    signal elements_in_block_fu_304_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal elements_in_block_reg_400 : STD_LOGIC_VECTOR (2 downto 0);
    signal sub18_fu_311_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal sub18_reg_405 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_ap_start : STD_LOGIC;
    signal grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_ap_done : STD_LOGIC;
    signal grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_ap_idle : STD_LOGIC;
    signal grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_ap_ready : STD_LOGIC;
    signal grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TREADY : STD_LOGIC;
    signal grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TDATA : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TVALID : STD_LOGIC;
    signal grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TKEEP : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TSTRB : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal output_stream_TDATA_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal output_stream_TKEEP_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal output_stream_TSTRB_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal output_stream_TLAST_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal blk_count_fu_102 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000000";
    signal blk_count_2_fu_253_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal icmp_ln100_fu_248_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_136_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal grp_fu_155_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal sub_ln97_fu_180_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal tmp_2_cast_fu_185_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal zext_ln97_fu_201_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal sub_ln97_1_fu_204_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_155_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln98_fu_217_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln98_fu_221_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln100_fu_244_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln101_fu_269_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_278_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_291_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_155_ap_start : STD_LOGIC;
    signal grp_fu_155_ap_done : STD_LOGIC;
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal regslice_both_output_stream_V_data_V_U_apdone_blk : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (39 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal ap_ST_fsm_state40_blk : STD_LOGIC;
    signal regslice_both_blk_stream_U_apdone_blk : STD_LOGIC;
    signal blk_stream_TDATA_int_regslice : STD_LOGIC_VECTOR (95 downto 0);
    signal blk_stream_TVALID_int_regslice : STD_LOGIC;
    signal blk_stream_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_blk_stream_U_ack_in : STD_LOGIC;
    signal output_stream_TDATA_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal output_stream_TVALID_int_regslice : STD_LOGIC;
    signal output_stream_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_output_stream_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_output_stream_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal output_stream_TKEEP_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_output_stream_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_output_stream_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_output_stream_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal output_stream_TSTRB_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_output_stream_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_output_stream_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_output_stream_V_last_V_U_apdone_blk : STD_LOGIC;
    signal output_stream_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_output_stream_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_output_stream_V_last_V_U_vld_out : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component unpack_blk_to_stream_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        output_stream_TREADY : IN STD_LOGIC;
        elements_in_block : IN STD_LOGIC_VECTOR (2 downto 0);
        temp_blk_3 : IN STD_LOGIC_VECTOR (31 downto 0);
        temp_blk_4 : IN STD_LOGIC_VECTOR (31 downto 0);
        temp_blk_5 : IN STD_LOGIC_VECTOR (31 downto 0);
        sub18 : IN STD_LOGIC_VECTOR (2 downto 0);
        icmp_ln104 : IN STD_LOGIC_VECTOR (0 downto 0);
        output_stream_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_stream_TVALID : OUT STD_LOGIC;
        output_stream_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
        output_stream_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
        output_stream_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component unpack_blk_to_stream_mul_32s_34ns_65_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (33 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (64 downto 0) );
    end component;


    component unpack_blk_to_stream_srem_32ns_3ns_3_36_seq_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        start : IN STD_LOGIC;
        done : OUT STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component unpack_blk_to_stream_CTRL_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        n : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component unpack_blk_to_stream_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118 : component unpack_blk_to_stream_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_ap_start,
        ap_done => grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_ap_done,
        ap_idle => grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_ap_idle,
        ap_ready => grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_ap_ready,
        output_stream_TREADY => grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TREADY,
        elements_in_block => elements_in_block_reg_400,
        temp_blk_3 => temp_blk_reg_385,
        temp_blk_4 => temp_blk_1_reg_390,
        temp_blk_5 => temp_blk_2_reg_395,
        sub18 => sub18_reg_405,
        icmp_ln104 => icmp_ln104_reg_379,
        output_stream_TDATA => grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TDATA,
        output_stream_TVALID => grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TVALID,
        output_stream_TKEEP => grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TKEEP,
        output_stream_TSTRB => grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TSTRB,
        output_stream_TLAST => grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TLAST);

    CTRL_s_axi_U : component unpack_blk_to_stream_CTRL_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CTRL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CTRL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_CTRL_AWVALID,
        AWREADY => s_axi_CTRL_AWREADY,
        AWADDR => s_axi_CTRL_AWADDR,
        WVALID => s_axi_CTRL_WVALID,
        WREADY => s_axi_CTRL_WREADY,
        WDATA => s_axi_CTRL_WDATA,
        WSTRB => s_axi_CTRL_WSTRB,
        ARVALID => s_axi_CTRL_ARVALID,
        ARREADY => s_axi_CTRL_ARREADY,
        ARADDR => s_axi_CTRL_ARADDR,
        RVALID => s_axi_CTRL_RVALID,
        RREADY => s_axi_CTRL_RREADY,
        RDATA => s_axi_CTRL_RDATA,
        RRESP => s_axi_CTRL_RRESP,
        BVALID => s_axi_CTRL_BVALID,
        BREADY => s_axi_CTRL_BREADY,
        BRESP => s_axi_CTRL_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        n => n,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    mul_32s_34ns_65_2_1_U13 : component unpack_blk_to_stream_mul_32s_34ns_65_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 34,
        dout_WIDTH => 65)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => add_ln97_reg_330,
        din1 => grp_fu_136_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_136_p2);

    srem_32ns_3ns_3_36_seq_1_U14 : component unpack_blk_to_stream_srem_32ns_3ns_3_36_seq_1
    generic map (
        ID => 1,
        NUM_STAGE => 36,
        din0_WIDTH => 32,
        din1_WIDTH => 3,
        dout_WIDTH => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        start => grp_fu_155_ap_start,
        done => grp_fu_155_ap_done,
        din0 => n,
        din1 => grp_fu_155_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_155_p2);

    regslice_both_blk_stream_U : component unpack_blk_to_stream_regslice_both
    generic map (
        DataWidth => 96)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => blk_stream_TDATA,
        vld_in => blk_stream_TVALID,
        ack_in => regslice_both_blk_stream_U_ack_in,
        data_out => blk_stream_TDATA_int_regslice,
        vld_out => blk_stream_TVALID_int_regslice,
        ack_out => blk_stream_TREADY_int_regslice,
        apdone_blk => regslice_both_blk_stream_U_apdone_blk);

    regslice_both_output_stream_V_data_V_U : component unpack_blk_to_stream_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => output_stream_TDATA_int_regslice,
        vld_in => grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TVALID,
        ack_in => output_stream_TREADY_int_regslice,
        data_out => output_stream_TDATA,
        vld_out => regslice_both_output_stream_V_data_V_U_vld_out,
        ack_out => output_stream_TREADY,
        apdone_blk => regslice_both_output_stream_V_data_V_U_apdone_blk);

    regslice_both_output_stream_V_keep_V_U : component unpack_blk_to_stream_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => output_stream_TKEEP_int_regslice,
        vld_in => grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TVALID,
        ack_in => regslice_both_output_stream_V_keep_V_U_ack_in_dummy,
        data_out => output_stream_TKEEP,
        vld_out => regslice_both_output_stream_V_keep_V_U_vld_out,
        ack_out => output_stream_TREADY,
        apdone_blk => regslice_both_output_stream_V_keep_V_U_apdone_blk);

    regslice_both_output_stream_V_strb_V_U : component unpack_blk_to_stream_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => output_stream_TSTRB_int_regslice,
        vld_in => grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TVALID,
        ack_in => regslice_both_output_stream_V_strb_V_U_ack_in_dummy,
        data_out => output_stream_TSTRB,
        vld_out => regslice_both_output_stream_V_strb_V_U_vld_out,
        ack_out => output_stream_TREADY,
        apdone_blk => regslice_both_output_stream_V_strb_V_U_apdone_blk);

    regslice_both_output_stream_V_last_V_U : component unpack_blk_to_stream_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => output_stream_TLAST_int_regslice,
        vld_in => grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TVALID,
        ack_in => regslice_both_output_stream_V_last_V_U_ack_in_dummy,
        data_out => output_stream_TLAST,
        vld_out => regslice_both_output_stream_V_last_V_U_vld_out,
        ack_out => output_stream_TREADY,
        apdone_blk => regslice_both_output_stream_V_last_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_ap_start_reg <= ap_const_logic_0;
            else
                if (((blk_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state38))) then 
                    grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_ap_ready = ap_const_logic_1)) then 
                    grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    blk_count_fu_102_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                blk_count_fu_102 <= ap_const_lv30_0;
            elsif (((icmp_ln100_fu_248_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state37))) then 
                blk_count_fu_102 <= blk_count_2_fu_253_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                add_ln97_reg_330 <= add_ln97_fu_141_p2;
                tmp_2_reg_335 <= add_ln97_fu_141_p2(31 downto 31);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state38)) then
                elements_in_block_reg_400 <= elements_in_block_fu_304_p3;
                sub18_reg_405 <= sub18_fu_311_p2;
                temp_blk_1_reg_390 <= temp_blk_1_fu_286_p1;
                temp_blk_2_reg_395 <= temp_blk_2_fu_299_p1;
                temp_blk_reg_385 <= temp_blk_fu_273_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state37)) then
                icmp_ln104_reg_379 <= icmp_ln104_fu_259_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state36)) then
                last_block_size_reg_366 <= last_block_size_fu_227_p3;
                select_ln97_1_reg_361 <= select_ln97_1_fu_210_p3;
                sub3_reg_371 <= sub3_fu_235_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                mul_ln97_reg_346 <= grp_fu_136_p2;
                tmp_3_cast_reg_351 <= grp_fu_136_p2(63 downto 34);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state39) and (grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TVALID = ap_const_logic_1))) then
                output_stream_TDATA_reg <= grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TDATA;
                output_stream_TKEEP_reg <= grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TKEEP;
                output_stream_TLAST_reg <= grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TLAST;
                output_stream_TSTRB_reg <= grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TSTRB;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                select_ln97_reg_356 <= select_ln97_fu_195_p3;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state38, ap_CS_fsm_state37, grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_ap_done, ap_CS_fsm_state39, icmp_ln100_fu_248_p2, ap_CS_fsm_state40, regslice_both_output_stream_V_data_V_U_apdone_blk, blk_stream_TVALID_int_regslice)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                if (((icmp_ln100_fu_248_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state37))) then
                    ap_NS_fsm <= ap_ST_fsm_state40;
                else
                    ap_NS_fsm <= ap_ST_fsm_state38;
                end if;
            when ap_ST_fsm_state38 => 
                if (((blk_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state38))) then
                    ap_NS_fsm <= ap_ST_fsm_state39;
                else
                    ap_NS_fsm <= ap_ST_fsm_state38;
                end if;
            when ap_ST_fsm_state39 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state39) and (grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state37;
                else
                    ap_NS_fsm <= ap_ST_fsm_state39;
                end if;
            when ap_ST_fsm_state40 => 
                if (((regslice_both_output_stream_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state40))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state40;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln97_fu_141_p2 <= std_logic_vector(unsigned(n) + unsigned(ap_const_lv32_2));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state40 <= ap_CS_fsm(39);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;
    ap_ST_fsm_state27_blk <= ap_const_logic_0;
    ap_ST_fsm_state28_blk <= ap_const_logic_0;
    ap_ST_fsm_state29_blk <= ap_const_logic_0;
    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_fsm_state33_blk <= ap_const_logic_0;
    ap_ST_fsm_state34_blk <= ap_const_logic_0;
    ap_ST_fsm_state35_blk <= ap_const_logic_0;
    ap_ST_fsm_state36_blk <= ap_const_logic_0;
    ap_ST_fsm_state37_blk <= ap_const_logic_0;

    ap_ST_fsm_state38_blk_assign_proc : process(blk_stream_TVALID_int_regslice)
    begin
        if ((blk_stream_TVALID_int_regslice = ap_const_logic_0)) then 
            ap_ST_fsm_state38_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state38_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state39_blk_assign_proc : process(grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_ap_done)
    begin
        if ((grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state39_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state39_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state40_blk_assign_proc : process(regslice_both_output_stream_V_data_V_U_apdone_blk)
    begin
        if ((regslice_both_output_stream_V_data_V_U_apdone_blk = ap_const_logic_1)) then 
            ap_ST_fsm_state40_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state40_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_CS_fsm_state40, regslice_both_output_stream_V_data_V_U_apdone_blk)
    begin
        if (((regslice_both_output_stream_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state40))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state40, regslice_both_output_stream_V_data_V_U_apdone_blk)
    begin
        if (((regslice_both_output_stream_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state40))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    blk_count_2_fu_253_p2 <= std_logic_vector(unsigned(blk_count_fu_102) + unsigned(ap_const_lv30_1));

    blk_stream_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state38, blk_stream_TVALID_int_regslice)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            blk_stream_TDATA_blk_n <= blk_stream_TVALID_int_regslice;
        else 
            blk_stream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    blk_stream_TREADY <= regslice_both_blk_stream_U_ack_in;

    blk_stream_TREADY_int_regslice_assign_proc : process(ap_CS_fsm_state38, blk_stream_TVALID_int_regslice)
    begin
        if (((blk_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state38))) then 
            blk_stream_TREADY_int_regslice <= ap_const_logic_1;
        else 
            blk_stream_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    elements_in_block_fu_304_p3 <= 
        last_block_size_reg_366 when (icmp_ln104_reg_379(0) = '1') else 
        ap_const_lv3_3;
    grp_fu_136_p1 <= ap_const_lv65_155555556(34 - 1 downto 0);

    grp_fu_155_ap_start_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            grp_fu_155_ap_start <= ap_const_logic_1;
        else 
            grp_fu_155_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_155_p1 <= ap_const_lv32_3(3 - 1 downto 0);
    grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_ap_start <= grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_ap_start_reg;
    grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TREADY <= (output_stream_TREADY_int_regslice and ap_CS_fsm_state39);
    icmp_ln100_fu_248_p2 <= "1" when (signed(zext_ln100_fu_244_p1) < signed(select_ln97_1_reg_361)) else "0";
    icmp_ln104_fu_259_p2 <= "1" when (zext_ln100_fu_244_p1 = sub3_reg_371) else "0";
    icmp_ln98_fu_221_p2 <= "1" when (trunc_ln98_fu_217_p1 = ap_const_lv3_0) else "0";
    last_block_size_fu_227_p3 <= 
        ap_const_lv3_3 when (icmp_ln98_fu_221_p2(0) = '1') else 
        trunc_ln98_fu_217_p1;

    output_stream_TDATA_int_regslice_assign_proc : process(grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TDATA, grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TVALID, ap_CS_fsm_state39, output_stream_TDATA_reg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state39) and (grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TVALID = ap_const_logic_1))) then 
            output_stream_TDATA_int_regslice <= grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TDATA;
        else 
            output_stream_TDATA_int_regslice <= output_stream_TDATA_reg;
        end if; 
    end process;


    output_stream_TKEEP_int_regslice_assign_proc : process(grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TVALID, grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TKEEP, ap_CS_fsm_state39, output_stream_TKEEP_reg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state39) and (grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TVALID = ap_const_logic_1))) then 
            output_stream_TKEEP_int_regslice <= grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TKEEP;
        else 
            output_stream_TKEEP_int_regslice <= output_stream_TKEEP_reg;
        end if; 
    end process;


    output_stream_TLAST_int_regslice_assign_proc : process(grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TVALID, grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TLAST, ap_CS_fsm_state39, output_stream_TLAST_reg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state39) and (grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TVALID = ap_const_logic_1))) then 
            output_stream_TLAST_int_regslice <= grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TLAST;
        else 
            output_stream_TLAST_int_regslice <= output_stream_TLAST_reg;
        end if; 
    end process;


    output_stream_TSTRB_int_regslice_assign_proc : process(grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TVALID, grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TSTRB, ap_CS_fsm_state39, output_stream_TSTRB_reg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state39) and (grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TVALID = ap_const_logic_1))) then 
            output_stream_TSTRB_int_regslice <= grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TSTRB;
        else 
            output_stream_TSTRB_int_regslice <= output_stream_TSTRB_reg;
        end if; 
    end process;

    output_stream_TVALID <= regslice_both_output_stream_V_data_V_U_vld_out;
    output_stream_TVALID_int_regslice <= grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TVALID;
    select_ln97_1_fu_210_p3 <= 
        sub_ln97_1_fu_204_p2 when (tmp_2_reg_335(0) = '1') else 
        zext_ln97_fu_201_p1;
    select_ln97_fu_195_p3 <= 
        tmp_2_cast_fu_185_p4 when (tmp_2_reg_335(0) = '1') else 
        tmp_3_cast_reg_351;
    sub18_fu_311_p2 <= std_logic_vector(unsigned(elements_in_block_fu_304_p3) + unsigned(ap_const_lv3_7));
    sub3_fu_235_p2 <= std_logic_vector(unsigned(select_ln97_1_fu_210_p3) + unsigned(ap_const_lv31_7FFFFFFF));
    sub_ln97_1_fu_204_p2 <= std_logic_vector(unsigned(ap_const_lv31_0) - unsigned(zext_ln97_fu_201_p1));
    sub_ln97_fu_180_p2 <= std_logic_vector(unsigned(ap_const_lv65_0) - unsigned(mul_ln97_reg_346));
    temp_blk_1_fu_286_p1 <= tmp_fu_278_p3;
    temp_blk_2_fu_299_p1 <= tmp_1_fu_291_p3;
    temp_blk_fu_273_p1 <= trunc_ln101_fu_269_p1;
    tmp_1_fu_291_p3 <= blk_stream_TDATA_int_regslice(95 downto 64);
    tmp_2_cast_fu_185_p4 <= sub_ln97_fu_180_p2(63 downto 34);
    tmp_fu_278_p3 <= blk_stream_TDATA_int_regslice(63 downto 32);
    trunc_ln101_fu_269_p1 <= blk_stream_TDATA_int_regslice(32 - 1 downto 0);
    trunc_ln98_fu_217_p1 <= grp_fu_155_p2(3 - 1 downto 0);
    zext_ln100_fu_244_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(blk_count_fu_102),31));
    zext_ln97_fu_201_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln97_reg_356),31));
end behav;
