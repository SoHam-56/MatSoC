// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="unpack_blk_to_stream_unpack_blk_to_stream,hls_ip_2024_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.912000,HLS_SYN_LAT=2147483683,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1087,HLS_SYN_LUT=1114,HLS_VERSION=2024_2}" *)

module unpack_blk_to_stream (
        ap_clk,
        ap_rst_n,
        blk_stream_TDATA,
        blk_stream_TVALID,
        blk_stream_TREADY,
        output_stream_TDATA,
        output_stream_TVALID,
        output_stream_TREADY,
        output_stream_TKEEP,
        output_stream_TSTRB,
        output_stream_TLAST,
        s_axi_CTRL_AWVALID,
        s_axi_CTRL_AWREADY,
        s_axi_CTRL_AWADDR,
        s_axi_CTRL_WVALID,
        s_axi_CTRL_WREADY,
        s_axi_CTRL_WDATA,
        s_axi_CTRL_WSTRB,
        s_axi_CTRL_ARVALID,
        s_axi_CTRL_ARREADY,
        s_axi_CTRL_ARADDR,
        s_axi_CTRL_RVALID,
        s_axi_CTRL_RREADY,
        s_axi_CTRL_RDATA,
        s_axi_CTRL_RRESP,
        s_axi_CTRL_BVALID,
        s_axi_CTRL_BREADY,
        s_axi_CTRL_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 40'd1;
parameter    ap_ST_fsm_state2 = 40'd2;
parameter    ap_ST_fsm_state3 = 40'd4;
parameter    ap_ST_fsm_state4 = 40'd8;
parameter    ap_ST_fsm_state5 = 40'd16;
parameter    ap_ST_fsm_state6 = 40'd32;
parameter    ap_ST_fsm_state7 = 40'd64;
parameter    ap_ST_fsm_state8 = 40'd128;
parameter    ap_ST_fsm_state9 = 40'd256;
parameter    ap_ST_fsm_state10 = 40'd512;
parameter    ap_ST_fsm_state11 = 40'd1024;
parameter    ap_ST_fsm_state12 = 40'd2048;
parameter    ap_ST_fsm_state13 = 40'd4096;
parameter    ap_ST_fsm_state14 = 40'd8192;
parameter    ap_ST_fsm_state15 = 40'd16384;
parameter    ap_ST_fsm_state16 = 40'd32768;
parameter    ap_ST_fsm_state17 = 40'd65536;
parameter    ap_ST_fsm_state18 = 40'd131072;
parameter    ap_ST_fsm_state19 = 40'd262144;
parameter    ap_ST_fsm_state20 = 40'd524288;
parameter    ap_ST_fsm_state21 = 40'd1048576;
parameter    ap_ST_fsm_state22 = 40'd2097152;
parameter    ap_ST_fsm_state23 = 40'd4194304;
parameter    ap_ST_fsm_state24 = 40'd8388608;
parameter    ap_ST_fsm_state25 = 40'd16777216;
parameter    ap_ST_fsm_state26 = 40'd33554432;
parameter    ap_ST_fsm_state27 = 40'd67108864;
parameter    ap_ST_fsm_state28 = 40'd134217728;
parameter    ap_ST_fsm_state29 = 40'd268435456;
parameter    ap_ST_fsm_state30 = 40'd536870912;
parameter    ap_ST_fsm_state31 = 40'd1073741824;
parameter    ap_ST_fsm_state32 = 40'd2147483648;
parameter    ap_ST_fsm_state33 = 40'd4294967296;
parameter    ap_ST_fsm_state34 = 40'd8589934592;
parameter    ap_ST_fsm_state35 = 40'd17179869184;
parameter    ap_ST_fsm_state36 = 40'd34359738368;
parameter    ap_ST_fsm_state37 = 40'd68719476736;
parameter    ap_ST_fsm_state38 = 40'd137438953472;
parameter    ap_ST_fsm_state39 = 40'd274877906944;
parameter    ap_ST_fsm_state40 = 40'd549755813888;
parameter    C_S_AXI_CTRL_DATA_WIDTH = 32;
parameter    C_S_AXI_CTRL_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CTRL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input  [95:0] blk_stream_TDATA;
input   blk_stream_TVALID;
output   blk_stream_TREADY;
output  [31:0] output_stream_TDATA;
output   output_stream_TVALID;
input   output_stream_TREADY;
output  [3:0] output_stream_TKEEP;
output  [3:0] output_stream_TSTRB;
output  [0:0] output_stream_TLAST;
input   s_axi_CTRL_AWVALID;
output   s_axi_CTRL_AWREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_CTRL_AWADDR;
input   s_axi_CTRL_WVALID;
output   s_axi_CTRL_WREADY;
input  [C_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_CTRL_WDATA;
input  [C_S_AXI_CTRL_WSTRB_WIDTH - 1:0] s_axi_CTRL_WSTRB;
input   s_axi_CTRL_ARVALID;
output   s_axi_CTRL_ARREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_CTRL_ARADDR;
output   s_axi_CTRL_RVALID;
input   s_axi_CTRL_RREADY;
output  [C_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_CTRL_RDATA;
output  [1:0] s_axi_CTRL_RRESP;
output   s_axi_CTRL_BVALID;
input   s_axi_CTRL_BREADY;
output  [1:0] s_axi_CTRL_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [39:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [31:0] n;
reg    blk_stream_TDATA_blk_n;
wire    ap_CS_fsm_state38;
wire  signed [31:0] add_ln97_fu_141_p2;
reg  signed [31:0] add_ln97_reg_330;
reg   [0:0] tmp_2_reg_335;
wire    ap_CS_fsm_state2;
wire   [64:0] grp_fu_136_p2;
reg   [64:0] mul_ln97_reg_346;
wire    ap_CS_fsm_state3;
reg   [29:0] tmp_3_cast_reg_351;
wire   [29:0] select_ln97_fu_195_p3;
reg   [29:0] select_ln97_reg_356;
wire    ap_CS_fsm_state4;
wire   [30:0] select_ln97_1_fu_210_p3;
reg   [30:0] select_ln97_1_reg_361;
wire    ap_CS_fsm_state36;
wire   [2:0] last_block_size_fu_227_p3;
reg   [2:0] last_block_size_reg_366;
wire   [30:0] sub3_fu_235_p2;
reg   [30:0] sub3_reg_371;
wire   [0:0] icmp_ln104_fu_259_p2;
reg   [0:0] icmp_ln104_reg_379;
wire    ap_CS_fsm_state37;
wire   [31:0] temp_blk_fu_273_p1;
reg   [31:0] temp_blk_reg_385;
wire   [31:0] temp_blk_1_fu_286_p1;
reg   [31:0] temp_blk_1_reg_390;
wire   [31:0] temp_blk_2_fu_299_p1;
reg   [31:0] temp_blk_2_reg_395;
wire   [2:0] elements_in_block_fu_304_p3;
reg   [2:0] elements_in_block_reg_400;
wire   [2:0] sub18_fu_311_p2;
reg   [2:0] sub18_reg_405;
wire    grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_ap_start;
wire    grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_ap_done;
wire    grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_ap_idle;
wire    grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_ap_ready;
wire    grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TREADY;
wire   [31:0] grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TDATA;
wire    grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TVALID;
wire   [3:0] grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TKEEP;
wire   [3:0] grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TSTRB;
wire   [0:0] grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TLAST;
reg    grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_ap_start_reg;
wire    ap_CS_fsm_state39;
reg   [31:0] output_stream_TDATA_reg;
reg   [3:0] output_stream_TKEEP_reg;
reg   [3:0] output_stream_TSTRB_reg;
reg   [0:0] output_stream_TLAST_reg;
reg   [29:0] blk_count_fu_102;
wire   [29:0] blk_count_2_fu_253_p2;
wire   [0:0] icmp_ln100_fu_248_p2;
wire   [33:0] grp_fu_136_p1;
wire   [2:0] grp_fu_155_p1;
wire   [64:0] sub_ln97_fu_180_p2;
wire   [29:0] tmp_2_cast_fu_185_p4;
wire   [30:0] zext_ln97_fu_201_p1;
wire   [30:0] sub_ln97_1_fu_204_p2;
wire   [2:0] grp_fu_155_p2;
wire   [2:0] trunc_ln98_fu_217_p1;
wire   [0:0] icmp_ln98_fu_221_p2;
wire   [30:0] zext_ln100_fu_244_p1;
wire   [31:0] trunc_ln101_fu_269_p1;
wire   [31:0] tmp_fu_278_p3;
wire   [31:0] tmp_1_fu_291_p3;
reg    grp_fu_155_ap_start;
wire    grp_fu_155_ap_done;
wire    ap_CS_fsm_state40;
wire    regslice_both_output_stream_V_data_V_U_apdone_blk;
reg   [39:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
reg    ap_ST_fsm_state38_blk;
reg    ap_ST_fsm_state39_blk;
reg    ap_ST_fsm_state40_blk;
wire    regslice_both_blk_stream_U_apdone_blk;
wire   [95:0] blk_stream_TDATA_int_regslice;
wire    blk_stream_TVALID_int_regslice;
reg    blk_stream_TREADY_int_regslice;
wire    regslice_both_blk_stream_U_ack_in;
reg   [31:0] output_stream_TDATA_int_regslice;
wire    output_stream_TVALID_int_regslice;
wire    output_stream_TREADY_int_regslice;
wire    regslice_both_output_stream_V_data_V_U_vld_out;
wire    regslice_both_output_stream_V_keep_V_U_apdone_blk;
reg   [3:0] output_stream_TKEEP_int_regslice;
wire    regslice_both_output_stream_V_keep_V_U_ack_in_dummy;
wire    regslice_both_output_stream_V_keep_V_U_vld_out;
wire    regslice_both_output_stream_V_strb_V_U_apdone_blk;
reg   [3:0] output_stream_TSTRB_int_regslice;
wire    regslice_both_output_stream_V_strb_V_U_ack_in_dummy;
wire    regslice_both_output_stream_V_strb_V_U_vld_out;
wire    regslice_both_output_stream_V_last_V_U_apdone_blk;
reg   [0:0] output_stream_TLAST_int_regslice;
wire    regslice_both_output_stream_V_last_V_U_ack_in_dummy;
wire    regslice_both_output_stream_V_last_V_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 40'd1;
#0 grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_ap_start_reg = 1'b0;
#0 blk_count_fu_102 = 30'd0;
end

unpack_blk_to_stream_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2 grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_ap_start),
    .ap_done(grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_ap_done),
    .ap_idle(grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_ap_idle),
    .ap_ready(grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_ap_ready),
    .output_stream_TREADY(grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TREADY),
    .elements_in_block(elements_in_block_reg_400),
    .temp_blk_3(temp_blk_reg_385),
    .temp_blk_4(temp_blk_1_reg_390),
    .temp_blk_5(temp_blk_2_reg_395),
    .sub18(sub18_reg_405),
    .icmp_ln104(icmp_ln104_reg_379),
    .output_stream_TDATA(grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TDATA),
    .output_stream_TVALID(grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TVALID),
    .output_stream_TKEEP(grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TKEEP),
    .output_stream_TSTRB(grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TSTRB),
    .output_stream_TLAST(grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TLAST)
);

unpack_blk_to_stream_CTRL_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CTRL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CTRL_DATA_WIDTH ))
CTRL_s_axi_U(
    .AWVALID(s_axi_CTRL_AWVALID),
    .AWREADY(s_axi_CTRL_AWREADY),
    .AWADDR(s_axi_CTRL_AWADDR),
    .WVALID(s_axi_CTRL_WVALID),
    .WREADY(s_axi_CTRL_WREADY),
    .WDATA(s_axi_CTRL_WDATA),
    .WSTRB(s_axi_CTRL_WSTRB),
    .ARVALID(s_axi_CTRL_ARVALID),
    .ARREADY(s_axi_CTRL_ARREADY),
    .ARADDR(s_axi_CTRL_ARADDR),
    .RVALID(s_axi_CTRL_RVALID),
    .RREADY(s_axi_CTRL_RREADY),
    .RDATA(s_axi_CTRL_RDATA),
    .RRESP(s_axi_CTRL_RRESP),
    .BVALID(s_axi_CTRL_BVALID),
    .BREADY(s_axi_CTRL_BREADY),
    .BRESP(s_axi_CTRL_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .n(n),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

unpack_blk_to_stream_mul_32s_34ns_65_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 34 ),
    .dout_WIDTH( 65 ))
mul_32s_34ns_65_2_1_U13(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(add_ln97_reg_330),
    .din1(grp_fu_136_p1),
    .ce(1'b1),
    .dout(grp_fu_136_p2)
);

unpack_blk_to_stream_srem_32ns_3ns_3_36_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 3 ))
srem_32ns_3ns_3_36_seq_1_U14(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .start(grp_fu_155_ap_start),
    .done(grp_fu_155_ap_done),
    .din0(n),
    .din1(grp_fu_155_p1),
    .ce(1'b1),
    .dout(grp_fu_155_p2)
);

unpack_blk_to_stream_regslice_both #(
    .DataWidth( 96 ))
regslice_both_blk_stream_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(blk_stream_TDATA),
    .vld_in(blk_stream_TVALID),
    .ack_in(regslice_both_blk_stream_U_ack_in),
    .data_out(blk_stream_TDATA_int_regslice),
    .vld_out(blk_stream_TVALID_int_regslice),
    .ack_out(blk_stream_TREADY_int_regslice),
    .apdone_blk(regslice_both_blk_stream_U_apdone_blk)
);

unpack_blk_to_stream_regslice_both #(
    .DataWidth( 32 ))
regslice_both_output_stream_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(output_stream_TDATA_int_regslice),
    .vld_in(grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TVALID),
    .ack_in(output_stream_TREADY_int_regslice),
    .data_out(output_stream_TDATA),
    .vld_out(regslice_both_output_stream_V_data_V_U_vld_out),
    .ack_out(output_stream_TREADY),
    .apdone_blk(regslice_both_output_stream_V_data_V_U_apdone_blk)
);

unpack_blk_to_stream_regslice_both #(
    .DataWidth( 4 ))
regslice_both_output_stream_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(output_stream_TKEEP_int_regslice),
    .vld_in(grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TVALID),
    .ack_in(regslice_both_output_stream_V_keep_V_U_ack_in_dummy),
    .data_out(output_stream_TKEEP),
    .vld_out(regslice_both_output_stream_V_keep_V_U_vld_out),
    .ack_out(output_stream_TREADY),
    .apdone_blk(regslice_both_output_stream_V_keep_V_U_apdone_blk)
);

unpack_blk_to_stream_regslice_both #(
    .DataWidth( 4 ))
regslice_both_output_stream_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(output_stream_TSTRB_int_regslice),
    .vld_in(grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TVALID),
    .ack_in(regslice_both_output_stream_V_strb_V_U_ack_in_dummy),
    .data_out(output_stream_TSTRB),
    .vld_out(regslice_both_output_stream_V_strb_V_U_vld_out),
    .ack_out(output_stream_TREADY),
    .apdone_blk(regslice_both_output_stream_V_strb_V_U_apdone_blk)
);

unpack_blk_to_stream_regslice_both #(
    .DataWidth( 1 ))
regslice_both_output_stream_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(output_stream_TLAST_int_regslice),
    .vld_in(grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TVALID),
    .ack_in(regslice_both_output_stream_V_last_V_U_ack_in_dummy),
    .data_out(output_stream_TLAST),
    .vld_out(regslice_both_output_stream_V_last_V_U_vld_out),
    .ack_out(output_stream_TREADY),
    .apdone_blk(regslice_both_output_stream_V_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_ap_start_reg <= 1'b0;
    end else begin
        if (((blk_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state38))) begin
            grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_ap_start_reg <= 1'b1;
        end else if ((grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_ap_ready == 1'b1)) begin
            grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        blk_count_fu_102 <= 30'd0;
    end else if (((icmp_ln100_fu_248_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state37))) begin
        blk_count_fu_102 <= blk_count_2_fu_253_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        add_ln97_reg_330 <= add_ln97_fu_141_p2;
        tmp_2_reg_335 <= add_ln97_fu_141_p2[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        elements_in_block_reg_400 <= elements_in_block_fu_304_p3;
        sub18_reg_405 <= sub18_fu_311_p2;
        temp_blk_1_reg_390 <= temp_blk_1_fu_286_p1;
        temp_blk_2_reg_395 <= temp_blk_2_fu_299_p1;
        temp_blk_reg_385 <= temp_blk_fu_273_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        icmp_ln104_reg_379 <= icmp_ln104_fu_259_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        last_block_size_reg_366 <= last_block_size_fu_227_p3;
        select_ln97_1_reg_361 <= select_ln97_1_fu_210_p3;
        sub3_reg_371 <= sub3_fu_235_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        mul_ln97_reg_346 <= grp_fu_136_p2;
        tmp_3_cast_reg_351 <= {{grp_fu_136_p2[63:34]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state39) & (grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TVALID == 1'b1))) begin
        output_stream_TDATA_reg <= grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TDATA;
        output_stream_TKEEP_reg <= grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TKEEP;
        output_stream_TLAST_reg <= grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TLAST;
        output_stream_TSTRB_reg <= grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TSTRB;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        select_ln97_reg_356 <= select_ln97_fu_195_p3;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

always @ (*) begin
    if ((blk_stream_TVALID_int_regslice == 1'b0)) begin
        ap_ST_fsm_state38_blk = 1'b1;
    end else begin
        ap_ST_fsm_state38_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_ap_done == 1'b0)) begin
        ap_ST_fsm_state39_blk = 1'b1;
    end else begin
        ap_ST_fsm_state39_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if ((regslice_both_output_stream_V_data_V_U_apdone_blk == 1'b1)) begin
        ap_ST_fsm_state40_blk = 1'b1;
    end else begin
        ap_ST_fsm_state40_blk = 1'b0;
    end
end

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((regslice_both_output_stream_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state40))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((regslice_both_output_stream_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state40))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        blk_stream_TDATA_blk_n = blk_stream_TVALID_int_regslice;
    end else begin
        blk_stream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((blk_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state38))) begin
        blk_stream_TREADY_int_regslice = 1'b1;
    end else begin
        blk_stream_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        grp_fu_155_ap_start = 1'b1;
    end else begin
        grp_fu_155_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) & (grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TVALID == 1'b1))) begin
        output_stream_TDATA_int_regslice = grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TDATA;
    end else begin
        output_stream_TDATA_int_regslice = output_stream_TDATA_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) & (grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TVALID == 1'b1))) begin
        output_stream_TKEEP_int_regslice = grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TKEEP;
    end else begin
        output_stream_TKEEP_int_regslice = output_stream_TKEEP_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) & (grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TVALID == 1'b1))) begin
        output_stream_TLAST_int_regslice = grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TLAST;
    end else begin
        output_stream_TLAST_int_regslice = output_stream_TLAST_reg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) & (grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TVALID == 1'b1))) begin
        output_stream_TSTRB_int_regslice = grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TSTRB;
    end else begin
        output_stream_TSTRB_int_regslice = output_stream_TSTRB_reg;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            if (((icmp_ln100_fu_248_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state37))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state38 : begin
            if (((blk_stream_TVALID_int_regslice == 1'b1) & (1'b1 == ap_CS_fsm_state38))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state39 : begin
            if (((1'b1 == ap_CS_fsm_state39) & (grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end
        end
        ap_ST_fsm_state40 : begin
            if (((regslice_both_output_stream_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state40))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln97_fu_141_p2 = (n + 32'd2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign blk_count_2_fu_253_p2 = (blk_count_fu_102 + 30'd1);

assign blk_stream_TREADY = regslice_both_blk_stream_U_ack_in;

assign elements_in_block_fu_304_p3 = ((icmp_ln104_reg_379[0:0] == 1'b1) ? last_block_size_reg_366 : 3'd3);

assign grp_fu_136_p1 = 65'd5726623062;

assign grp_fu_155_p1 = 32'd3;

assign grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_ap_start = grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_ap_start_reg;

assign grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TREADY = (output_stream_TREADY_int_regslice & ap_CS_fsm_state39);

assign icmp_ln100_fu_248_p2 = (($signed(zext_ln100_fu_244_p1) < $signed(select_ln97_1_reg_361)) ? 1'b1 : 1'b0);

assign icmp_ln104_fu_259_p2 = ((zext_ln100_fu_244_p1 == sub3_reg_371) ? 1'b1 : 1'b0);

assign icmp_ln98_fu_221_p2 = ((trunc_ln98_fu_217_p1 == 3'd0) ? 1'b1 : 1'b0);

assign last_block_size_fu_227_p3 = ((icmp_ln98_fu_221_p2[0:0] == 1'b1) ? 3'd3 : trunc_ln98_fu_217_p1);

assign output_stream_TVALID = regslice_both_output_stream_V_data_V_U_vld_out;

assign output_stream_TVALID_int_regslice = grp_unpack_blk_to_stream_Pipeline_VITIS_LOOP_106_2_fu_118_output_stream_TVALID;

assign select_ln97_1_fu_210_p3 = ((tmp_2_reg_335[0:0] == 1'b1) ? sub_ln97_1_fu_204_p2 : zext_ln97_fu_201_p1);

assign select_ln97_fu_195_p3 = ((tmp_2_reg_335[0:0] == 1'b1) ? tmp_2_cast_fu_185_p4 : tmp_3_cast_reg_351);

assign sub18_fu_311_p2 = ($signed(elements_in_block_fu_304_p3) + $signed(3'd7));

assign sub3_fu_235_p2 = ($signed(select_ln97_1_fu_210_p3) + $signed(31'd2147483647));

assign sub_ln97_1_fu_204_p2 = (31'd0 - zext_ln97_fu_201_p1);

assign sub_ln97_fu_180_p2 = (65'd0 - mul_ln97_reg_346);

assign temp_blk_1_fu_286_p1 = tmp_fu_278_p3;

assign temp_blk_2_fu_299_p1 = tmp_1_fu_291_p3;

assign temp_blk_fu_273_p1 = trunc_ln101_fu_269_p1;

assign tmp_1_fu_291_p3 = {{blk_stream_TDATA_int_regslice[95:64]}};

assign tmp_2_cast_fu_185_p4 = {{sub_ln97_fu_180_p2[63:34]}};

assign tmp_fu_278_p3 = {{blk_stream_TDATA_int_regslice[63:32]}};

assign trunc_ln101_fu_269_p1 = blk_stream_TDATA_int_regslice[31:0];

assign trunc_ln98_fu_217_p1 = grp_fu_155_p2[2:0];

assign zext_ln100_fu_244_p1 = blk_count_fu_102;

assign zext_ln97_fu_201_p1 = select_ln97_reg_356;


reg find_kernel_block = 0;
// synthesis translate_off
`include "unpack_blk_to_stream_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on

endmodule //unpack_blk_to_stream

