-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity complex_mag_stream is
generic (
    C_S_AXI_CTRL_ADDR_WIDTH : INTEGER := 5;
    C_S_AXI_CTRL_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    input_stream_id_TDATA : IN STD_LOGIC_VECTOR (95 downto 0);
    input_stream_id_TVALID : IN STD_LOGIC;
    input_stream_id_TREADY : OUT STD_LOGIC;
    input_stream_iq_TDATA : IN STD_LOGIC_VECTOR (95 downto 0);
    input_stream_iq_TVALID : IN STD_LOGIC;
    input_stream_iq_TREADY : OUT STD_LOGIC;
    output_stream_TDATA : OUT STD_LOGIC_VECTOR (95 downto 0);
    output_stream_TVALID : OUT STD_LOGIC;
    output_stream_TREADY : IN STD_LOGIC;
    s_axi_CTRL_AWVALID : IN STD_LOGIC;
    s_axi_CTRL_AWREADY : OUT STD_LOGIC;
    s_axi_CTRL_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_ADDR_WIDTH-1 downto 0);
    s_axi_CTRL_WVALID : IN STD_LOGIC;
    s_axi_CTRL_WREADY : OUT STD_LOGIC;
    s_axi_CTRL_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH-1 downto 0);
    s_axi_CTRL_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH/8-1 downto 0);
    s_axi_CTRL_ARVALID : IN STD_LOGIC;
    s_axi_CTRL_ARREADY : OUT STD_LOGIC;
    s_axi_CTRL_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_ADDR_WIDTH-1 downto 0);
    s_axi_CTRL_RVALID : OUT STD_LOGIC;
    s_axi_CTRL_RREADY : IN STD_LOGIC;
    s_axi_CTRL_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH-1 downto 0);
    s_axi_CTRL_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_CTRL_BVALID : OUT STD_LOGIC;
    s_axi_CTRL_BREADY : IN STD_LOGIC;
    s_axi_CTRL_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of complex_mag_stream is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "complex_mag_stream_complex_mag_stream,hls_ip_2024_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.282800,HLS_SYN_LAT=21474836497,HLS_SYN_TPT=none,HLS_SYN_MEM=14,HLS_SYN_DSP=0,HLS_SYN_FF=9640,HLS_SYN_LUT=6969,HLS_VERSION=2024_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (43 downto 0) := "00000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (43 downto 0) := "00000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (43 downto 0) := "00000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (43 downto 0) := "00000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (43 downto 0) := "00000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (43 downto 0) := "00000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (43 downto 0) := "00000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (43 downto 0) := "00001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (43 downto 0) := "00010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (43 downto 0) := "00100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (43 downto 0) := "01000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (43 downto 0) := "10000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant C_S_AXI_DATA_WIDTH : INTEGER := 32;
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv30_0 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000000";
    constant ap_const_lv65_155555556 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000101010101010101010101010101010110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv65_0 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv31_7FFFFFFF : STD_LOGIC_VECTOR (30 downto 0) := "1111111111111111111111111111111";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv30_1 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000001";
    constant ap_const_lv96_20 : STD_LOGIC_VECTOR (95 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_const_lv96_40 : STD_LOGIC_VECTOR (95 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (43 downto 0) := "00000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal n : STD_LOGIC_VECTOR (31 downto 0);
    signal input_stream_id_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal input_stream_iq_TDATA_blk_n : STD_LOGIC;
    signal output_stream_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal add_ln126_fu_239_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln126_reg_561 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_reg_566 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_fu_234_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal mul_ln126_reg_577 : STD_LOGIC_VECTOR (64 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_21_cast_reg_582 : STD_LOGIC_VECTOR (29 downto 0);
    signal select_ln126_fu_293_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal select_ln126_reg_587 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_fu_253_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal srem_ln127_reg_592 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal select_ln126_1_fu_308_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal select_ln126_1_reg_597 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal last_block_size_fu_324_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal last_block_size_reg_602 : STD_LOGIC_VECTOR (2 downto 0);
    signal sub3_fu_332_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal sub3_reg_608 : STD_LOGIC_VECTOR (30 downto 0);
    signal cmp24_fu_338_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal cmp24_reg_613 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln152_fu_350_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln152_reg_618 : STD_LOGIC_VECTOR (2 downto 0);
    signal blk_count_2_fu_370_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal blk_count_2_reg_626 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal icmp_ln136_fu_376_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln136_reg_631 : STD_LOGIC_VECTOR (0 downto 0);
    signal id_blk_fu_385_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal id_blk_reg_637 : STD_LOGIC_VECTOR (31 downto 0);
    signal id_blk_1_fu_398_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal id_blk_1_reg_642 : STD_LOGIC_VECTOR (31 downto 0);
    signal id_blk_2_fu_411_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal id_blk_2_reg_647 : STD_LOGIC_VECTOR (31 downto 0);
    signal iq_blk_fu_420_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal iq_blk_reg_652 : STD_LOGIC_VECTOR (31 downto 0);
    signal iq_blk_1_fu_433_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal iq_blk_1_reg_657 : STD_LOGIC_VECTOR (31 downto 0);
    signal iq_blk_2_fu_446_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal iq_blk_2_reg_662 : STD_LOGIC_VECTOR (31 downto 0);
    signal elements_in_block_fu_451_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal elements_in_block_reg_667 : STD_LOGIC_VECTOR (2 downto 0);
    signal and_ln151_fu_458_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln151_reg_672 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_complex_mag_stream_Pipeline_VITIS_LOOP_139_2_fu_194_ap_start : STD_LOGIC;
    signal grp_complex_mag_stream_Pipeline_VITIS_LOOP_139_2_fu_194_ap_done : STD_LOGIC;
    signal grp_complex_mag_stream_Pipeline_VITIS_LOOP_139_2_fu_194_ap_idle : STD_LOGIC;
    signal grp_complex_mag_stream_Pipeline_VITIS_LOOP_139_2_fu_194_ap_ready : STD_LOGIC;
    signal grp_complex_mag_stream_Pipeline_VITIS_LOOP_139_2_fu_194_out_blk_0_2_load52_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_complex_mag_stream_Pipeline_VITIS_LOOP_139_2_fu_194_out_blk_0_2_load52_out_ap_vld : STD_LOGIC;
    signal grp_complex_mag_stream_Pipeline_VITIS_LOOP_139_2_fu_194_out_blk_0_1_load45_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_complex_mag_stream_Pipeline_VITIS_LOOP_139_2_fu_194_out_blk_0_1_load45_out_ap_vld : STD_LOGIC;
    signal grp_complex_mag_stream_Pipeline_VITIS_LOOP_139_2_fu_194_out_blk_0_0_load38_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_complex_mag_stream_Pipeline_VITIS_LOOP_139_2_fu_194_out_blk_0_0_load38_out_ap_vld : STD_LOGIC;
    signal grp_complex_mag_stream_Pipeline_VITIS_LOOP_152_3_fu_222_ap_start : STD_LOGIC;
    signal grp_complex_mag_stream_Pipeline_VITIS_LOOP_152_3_fu_222_ap_done : STD_LOGIC;
    signal grp_complex_mag_stream_Pipeline_VITIS_LOOP_152_3_fu_222_ap_idle : STD_LOGIC;
    signal grp_complex_mag_stream_Pipeline_VITIS_LOOP_152_3_fu_222_ap_ready : STD_LOGIC;
    signal grp_complex_mag_stream_Pipeline_VITIS_LOOP_152_3_fu_222_out_blk_0_2_load48_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_complex_mag_stream_Pipeline_VITIS_LOOP_152_3_fu_222_out_blk_0_2_load48_out_ap_vld : STD_LOGIC;
    signal grp_complex_mag_stream_Pipeline_VITIS_LOOP_152_3_fu_222_out_blk_0_1_load41_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_complex_mag_stream_Pipeline_VITIS_LOOP_152_3_fu_222_out_blk_0_1_load41_out_ap_vld : STD_LOGIC;
    signal grp_complex_mag_stream_Pipeline_VITIS_LOOP_152_3_fu_222_out_blk_0_0_load34_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_complex_mag_stream_Pipeline_VITIS_LOOP_152_3_fu_222_out_blk_0_0_load34_out_ap_vld : STD_LOGIC;
    signal ap_phi_mux_out_blk_0_2_load_phi_fu_170_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_blk_0_2_load_reg_167 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal ap_phi_mux_out_blk_0_1_load_phi_fu_179_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_blk_0_1_load_reg_176 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_phi_mux_out_blk_0_0_load_phi_fu_188_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal out_blk_0_0_load_reg_185 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_complex_mag_stream_Pipeline_VITIS_LOOP_139_2_fu_194_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state39_ignore_call18 : BOOLEAN;
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal grp_complex_mag_stream_Pipeline_VITIS_LOOP_152_3_fu_222_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal blk_count_fu_114 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000000";
    signal ap_block_state39 : BOOLEAN;
    signal grp_fu_234_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal grp_fu_253_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal sub_ln126_fu_278_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal tmp_20_cast_fu_283_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal zext_ln126_fu_299_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal sub_ln126_1_fu_302_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln127_fu_315_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln127_fu_318_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln152_fu_344_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln129_fu_361_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln131_fu_381_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_fu_390_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_fu_403_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln132_fu_416_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_425_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_438_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln158_2_fu_494_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln158_1_fu_490_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln158_fu_486_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_253_ap_start : STD_LOGIC;
    signal grp_fu_253_ap_done : STD_LOGIC;
    signal icmp_ln129_fu_365_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_output_stream_U_apdone_blk : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (43 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal ap_ST_fsm_state40_blk : STD_LOGIC;
    signal ap_ST_fsm_state41_blk : STD_LOGIC;
    signal ap_ST_fsm_state42_blk : STD_LOGIC;
    signal ap_ST_fsm_state43_blk : STD_LOGIC;
    signal ap_ST_fsm_state44_blk : STD_LOGIC;
    signal regslice_both_input_stream_id_U_apdone_blk : STD_LOGIC;
    signal input_stream_id_TDATA_int_regslice : STD_LOGIC_VECTOR (95 downto 0);
    signal input_stream_id_TVALID_int_regslice : STD_LOGIC;
    signal input_stream_id_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_input_stream_id_U_ack_in : STD_LOGIC;
    signal regslice_both_input_stream_iq_U_apdone_blk : STD_LOGIC;
    signal input_stream_iq_TDATA_int_regslice : STD_LOGIC_VECTOR (95 downto 0);
    signal input_stream_iq_TVALID_int_regslice : STD_LOGIC;
    signal input_stream_iq_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_input_stream_iq_U_ack_in : STD_LOGIC;
    signal output_stream_TDATA_int_regslice : STD_LOGIC_VECTOR (95 downto 0);
    signal output_stream_TVALID_int_regslice : STD_LOGIC;
    signal output_stream_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_output_stream_U_vld_out : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component complex_mag_stream_complex_mag_stream_Pipeline_VITIS_LOOP_139_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        elements_in_block : IN STD_LOGIC_VECTOR (2 downto 0);
        id_blk_3 : IN STD_LOGIC_VECTOR (31 downto 0);
        id_blk_4 : IN STD_LOGIC_VECTOR (31 downto 0);
        id_blk_5 : IN STD_LOGIC_VECTOR (31 downto 0);
        iq_blk_3 : IN STD_LOGIC_VECTOR (31 downto 0);
        iq_blk_4 : IN STD_LOGIC_VECTOR (31 downto 0);
        iq_blk_5 : IN STD_LOGIC_VECTOR (31 downto 0);
        out_blk_0_2_load52_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_blk_0_2_load52_out_ap_vld : OUT STD_LOGIC;
        out_blk_0_1_load45_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_blk_0_1_load45_out_ap_vld : OUT STD_LOGIC;
        out_blk_0_0_load38_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_blk_0_0_load38_out_ap_vld : OUT STD_LOGIC );
    end component;


    component complex_mag_stream_complex_mag_stream_Pipeline_VITIS_LOOP_152_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        out_blk_0_2_load52_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        out_blk_0_1_load45_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        out_blk_0_0_load38_reload : IN STD_LOGIC_VECTOR (31 downto 0);
        last_block_size : IN STD_LOGIC_VECTOR (2 downto 0);
        zext_ln129 : IN STD_LOGIC_VECTOR (2 downto 0);
        out_blk_0_2_load48_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_blk_0_2_load48_out_ap_vld : OUT STD_LOGIC;
        out_blk_0_1_load41_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_blk_0_1_load41_out_ap_vld : OUT STD_LOGIC;
        out_blk_0_0_load34_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        out_blk_0_0_load34_out_ap_vld : OUT STD_LOGIC );
    end component;


    component complex_mag_stream_mul_32s_34ns_65_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (33 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (64 downto 0) );
    end component;


    component complex_mag_stream_srem_32ns_3ns_3_36_seq_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        start : IN STD_LOGIC;
        done : OUT STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component complex_mag_stream_CTRL_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        n : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component complex_mag_stream_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    grp_complex_mag_stream_Pipeline_VITIS_LOOP_139_2_fu_194 : component complex_mag_stream_complex_mag_stream_Pipeline_VITIS_LOOP_139_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_complex_mag_stream_Pipeline_VITIS_LOOP_139_2_fu_194_ap_start,
        ap_done => grp_complex_mag_stream_Pipeline_VITIS_LOOP_139_2_fu_194_ap_done,
        ap_idle => grp_complex_mag_stream_Pipeline_VITIS_LOOP_139_2_fu_194_ap_idle,
        ap_ready => grp_complex_mag_stream_Pipeline_VITIS_LOOP_139_2_fu_194_ap_ready,
        elements_in_block => elements_in_block_reg_667,
        id_blk_3 => id_blk_reg_637,
        id_blk_4 => id_blk_1_reg_642,
        id_blk_5 => id_blk_2_reg_647,
        iq_blk_3 => iq_blk_reg_652,
        iq_blk_4 => iq_blk_1_reg_657,
        iq_blk_5 => iq_blk_2_reg_662,
        out_blk_0_2_load52_out => grp_complex_mag_stream_Pipeline_VITIS_LOOP_139_2_fu_194_out_blk_0_2_load52_out,
        out_blk_0_2_load52_out_ap_vld => grp_complex_mag_stream_Pipeline_VITIS_LOOP_139_2_fu_194_out_blk_0_2_load52_out_ap_vld,
        out_blk_0_1_load45_out => grp_complex_mag_stream_Pipeline_VITIS_LOOP_139_2_fu_194_out_blk_0_1_load45_out,
        out_blk_0_1_load45_out_ap_vld => grp_complex_mag_stream_Pipeline_VITIS_LOOP_139_2_fu_194_out_blk_0_1_load45_out_ap_vld,
        out_blk_0_0_load38_out => grp_complex_mag_stream_Pipeline_VITIS_LOOP_139_2_fu_194_out_blk_0_0_load38_out,
        out_blk_0_0_load38_out_ap_vld => grp_complex_mag_stream_Pipeline_VITIS_LOOP_139_2_fu_194_out_blk_0_0_load38_out_ap_vld);

    grp_complex_mag_stream_Pipeline_VITIS_LOOP_152_3_fu_222 : component complex_mag_stream_complex_mag_stream_Pipeline_VITIS_LOOP_152_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_complex_mag_stream_Pipeline_VITIS_LOOP_152_3_fu_222_ap_start,
        ap_done => grp_complex_mag_stream_Pipeline_VITIS_LOOP_152_3_fu_222_ap_done,
        ap_idle => grp_complex_mag_stream_Pipeline_VITIS_LOOP_152_3_fu_222_ap_idle,
        ap_ready => grp_complex_mag_stream_Pipeline_VITIS_LOOP_152_3_fu_222_ap_ready,
        out_blk_0_2_load52_reload => grp_complex_mag_stream_Pipeline_VITIS_LOOP_139_2_fu_194_out_blk_0_2_load52_out,
        out_blk_0_1_load45_reload => grp_complex_mag_stream_Pipeline_VITIS_LOOP_139_2_fu_194_out_blk_0_1_load45_out,
        out_blk_0_0_load38_reload => grp_complex_mag_stream_Pipeline_VITIS_LOOP_139_2_fu_194_out_blk_0_0_load38_out,
        last_block_size => last_block_size_reg_602,
        zext_ln129 => select_ln152_reg_618,
        out_blk_0_2_load48_out => grp_complex_mag_stream_Pipeline_VITIS_LOOP_152_3_fu_222_out_blk_0_2_load48_out,
        out_blk_0_2_load48_out_ap_vld => grp_complex_mag_stream_Pipeline_VITIS_LOOP_152_3_fu_222_out_blk_0_2_load48_out_ap_vld,
        out_blk_0_1_load41_out => grp_complex_mag_stream_Pipeline_VITIS_LOOP_152_3_fu_222_out_blk_0_1_load41_out,
        out_blk_0_1_load41_out_ap_vld => grp_complex_mag_stream_Pipeline_VITIS_LOOP_152_3_fu_222_out_blk_0_1_load41_out_ap_vld,
        out_blk_0_0_load34_out => grp_complex_mag_stream_Pipeline_VITIS_LOOP_152_3_fu_222_out_blk_0_0_load34_out,
        out_blk_0_0_load34_out_ap_vld => grp_complex_mag_stream_Pipeline_VITIS_LOOP_152_3_fu_222_out_blk_0_0_load34_out_ap_vld);

    CTRL_s_axi_U : component complex_mag_stream_CTRL_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CTRL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CTRL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_CTRL_AWVALID,
        AWREADY => s_axi_CTRL_AWREADY,
        AWADDR => s_axi_CTRL_AWADDR,
        WVALID => s_axi_CTRL_WVALID,
        WREADY => s_axi_CTRL_WREADY,
        WDATA => s_axi_CTRL_WDATA,
        WSTRB => s_axi_CTRL_WSTRB,
        ARVALID => s_axi_CTRL_ARVALID,
        ARREADY => s_axi_CTRL_ARREADY,
        ARADDR => s_axi_CTRL_ARADDR,
        RVALID => s_axi_CTRL_RVALID,
        RREADY => s_axi_CTRL_RREADY,
        RDATA => s_axi_CTRL_RDATA,
        RRESP => s_axi_CTRL_RRESP,
        BVALID => s_axi_CTRL_BVALID,
        BREADY => s_axi_CTRL_BREADY,
        BRESP => s_axi_CTRL_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        n => n,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    mul_32s_34ns_65_2_1_U54 : component complex_mag_stream_mul_32s_34ns_65_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 34,
        dout_WIDTH => 65)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => add_ln126_reg_561,
        din1 => grp_fu_234_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_234_p2);

    srem_32ns_3ns_3_36_seq_1_U55 : component complex_mag_stream_srem_32ns_3ns_3_36_seq_1
    generic map (
        ID => 1,
        NUM_STAGE => 36,
        din0_WIDTH => 32,
        din1_WIDTH => 3,
        dout_WIDTH => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        start => grp_fu_253_ap_start,
        done => grp_fu_253_ap_done,
        din0 => n,
        din1 => grp_fu_253_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_253_p2);

    regslice_both_input_stream_id_U : component complex_mag_stream_regslice_both
    generic map (
        DataWidth => 96)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => input_stream_id_TDATA,
        vld_in => input_stream_id_TVALID,
        ack_in => regslice_both_input_stream_id_U_ack_in,
        data_out => input_stream_id_TDATA_int_regslice,
        vld_out => input_stream_id_TVALID_int_regslice,
        ack_out => input_stream_id_TREADY_int_regslice,
        apdone_blk => regslice_both_input_stream_id_U_apdone_blk);

    regslice_both_input_stream_iq_U : component complex_mag_stream_regslice_both
    generic map (
        DataWidth => 96)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => input_stream_iq_TDATA,
        vld_in => input_stream_iq_TVALID,
        ack_in => regslice_both_input_stream_iq_U_ack_in,
        data_out => input_stream_iq_TDATA_int_regslice,
        vld_out => input_stream_iq_TVALID_int_regslice,
        ack_out => input_stream_iq_TREADY_int_regslice,
        apdone_blk => regslice_both_input_stream_iq_U_apdone_blk);

    regslice_both_output_stream_U : component complex_mag_stream_regslice_both
    generic map (
        DataWidth => 96)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => output_stream_TDATA_int_regslice,
        vld_in => output_stream_TVALID_int_regslice,
        ack_in => output_stream_TREADY_int_regslice,
        data_out => output_stream_TDATA,
        vld_out => regslice_both_output_stream_U_vld_out,
        ack_out => output_stream_TREADY,
        apdone_blk => regslice_both_output_stream_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_complex_mag_stream_Pipeline_VITIS_LOOP_139_2_fu_194_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_complex_mag_stream_Pipeline_VITIS_LOOP_139_2_fu_194_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_state39_ignore_call18) and (ap_const_logic_1 = ap_CS_fsm_state39))) then 
                    grp_complex_mag_stream_Pipeline_VITIS_LOOP_139_2_fu_194_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_complex_mag_stream_Pipeline_VITIS_LOOP_139_2_fu_194_ap_ready = ap_const_logic_1)) then 
                    grp_complex_mag_stream_Pipeline_VITIS_LOOP_139_2_fu_194_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_complex_mag_stream_Pipeline_VITIS_LOOP_152_3_fu_222_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_complex_mag_stream_Pipeline_VITIS_LOOP_152_3_fu_222_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_lv1_1 = and_ln151_reg_672) and (ap_const_logic_1 = ap_CS_fsm_state41))) then 
                    grp_complex_mag_stream_Pipeline_VITIS_LOOP_152_3_fu_222_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_complex_mag_stream_Pipeline_VITIS_LOOP_152_3_fu_222_ap_ready = ap_const_logic_1)) then 
                    grp_complex_mag_stream_Pipeline_VITIS_LOOP_152_3_fu_222_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    blk_count_fu_114_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                blk_count_fu_114 <= ap_const_lv30_0;
            elsif (((output_stream_TREADY_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state43))) then 
                blk_count_fu_114 <= blk_count_2_reg_626;
            end if; 
        end if;
    end process;

    out_blk_0_0_load_reg_185_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((output_stream_TREADY_int_regslice = ap_const_logic_1) and (ap_const_lv1_1 = and_ln151_reg_672) and (ap_const_logic_1 = ap_CS_fsm_state43))) then 
                out_blk_0_0_load_reg_185 <= grp_complex_mag_stream_Pipeline_VITIS_LOOP_152_3_fu_222_out_blk_0_0_load34_out;
            elsif (((ap_const_lv1_0 = and_ln151_reg_672) and (ap_const_logic_1 = ap_CS_fsm_state41))) then 
                out_blk_0_0_load_reg_185 <= grp_complex_mag_stream_Pipeline_VITIS_LOOP_139_2_fu_194_out_blk_0_0_load38_out;
            end if; 
        end if;
    end process;

    out_blk_0_1_load_reg_176_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((output_stream_TREADY_int_regslice = ap_const_logic_1) and (ap_const_lv1_1 = and_ln151_reg_672) and (ap_const_logic_1 = ap_CS_fsm_state43))) then 
                out_blk_0_1_load_reg_176 <= grp_complex_mag_stream_Pipeline_VITIS_LOOP_152_3_fu_222_out_blk_0_1_load41_out;
            elsif (((ap_const_lv1_0 = and_ln151_reg_672) and (ap_const_logic_1 = ap_CS_fsm_state41))) then 
                out_blk_0_1_load_reg_176 <= grp_complex_mag_stream_Pipeline_VITIS_LOOP_139_2_fu_194_out_blk_0_1_load45_out;
            end if; 
        end if;
    end process;

    out_blk_0_2_load_reg_167_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((output_stream_TREADY_int_regslice = ap_const_logic_1) and (ap_const_lv1_1 = and_ln151_reg_672) and (ap_const_logic_1 = ap_CS_fsm_state43))) then 
                out_blk_0_2_load_reg_167 <= grp_complex_mag_stream_Pipeline_VITIS_LOOP_152_3_fu_222_out_blk_0_2_load48_out;
            elsif (((ap_const_lv1_0 = and_ln151_reg_672) and (ap_const_logic_1 = ap_CS_fsm_state41))) then 
                out_blk_0_2_load_reg_167 <= grp_complex_mag_stream_Pipeline_VITIS_LOOP_139_2_fu_194_out_blk_0_2_load52_out;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                add_ln126_reg_561 <= add_ln126_fu_239_p2;
                tmp_15_reg_566 <= add_ln126_fu_239_p2(31 downto 31);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state39)) then
                and_ln151_reg_672 <= and_ln151_fu_458_p2;
                elements_in_block_reg_667 <= elements_in_block_fu_451_p3;
                id_blk_1_reg_642 <= id_blk_1_fu_398_p1;
                id_blk_2_reg_647 <= id_blk_2_fu_411_p1;
                id_blk_reg_637 <= id_blk_fu_385_p1;
                iq_blk_1_reg_657 <= iq_blk_1_fu_433_p1;
                iq_blk_2_reg_662 <= iq_blk_2_fu_446_p1;
                iq_blk_reg_652 <= iq_blk_fu_420_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state38)) then
                blk_count_2_reg_626 <= blk_count_2_fu_370_p2;
                icmp_ln136_reg_631 <= icmp_ln136_fu_376_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state37)) then
                cmp24_reg_613 <= cmp24_fu_338_p2;
                last_block_size_reg_602 <= last_block_size_fu_324_p3;
                select_ln126_1_reg_597 <= select_ln126_1_fu_308_p3;
                select_ln152_reg_618 <= select_ln152_fu_350_p3;
                sub3_reg_608 <= sub3_fu_332_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                mul_ln126_reg_577 <= grp_fu_234_p2;
                tmp_21_cast_reg_582 <= grp_fu_234_p2(63 downto 34);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                select_ln126_reg_587 <= select_ln126_fu_293_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state36)) then
                srem_ln127_reg_592 <= grp_fu_253_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state39, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state38, and_ln151_reg_672, grp_complex_mag_stream_Pipeline_VITIS_LOOP_139_2_fu_194_ap_done, grp_complex_mag_stream_Pipeline_VITIS_LOOP_152_3_fu_222_ap_done, ap_CS_fsm_state41, ap_CS_fsm_state40, ap_CS_fsm_state42, ap_block_state39, icmp_ln129_fu_365_p2, regslice_both_output_stream_U_apdone_blk, output_stream_TREADY_int_regslice)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                if (((regslice_both_output_stream_U_apdone_blk = ap_const_logic_0) and (icmp_ln129_fu_365_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state38))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif (((regslice_both_output_stream_U_apdone_blk = ap_const_logic_0) and (icmp_ln129_fu_365_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state38))) then
                    ap_NS_fsm <= ap_ST_fsm_state39;
                else
                    ap_NS_fsm <= ap_ST_fsm_state38;
                end if;
            when ap_ST_fsm_state39 => 
                if (((ap_const_boolean_0 = ap_block_state39) and (ap_const_logic_1 = ap_CS_fsm_state39))) then
                    ap_NS_fsm <= ap_ST_fsm_state40;
                else
                    ap_NS_fsm <= ap_ST_fsm_state39;
                end if;
            when ap_ST_fsm_state40 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state40) and (grp_complex_mag_stream_Pipeline_VITIS_LOOP_139_2_fu_194_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state41;
                else
                    ap_NS_fsm <= ap_ST_fsm_state40;
                end if;
            when ap_ST_fsm_state41 => 
                if (((ap_const_lv1_0 = and_ln151_reg_672) and (ap_const_logic_1 = ap_CS_fsm_state41))) then
                    ap_NS_fsm <= ap_ST_fsm_state43;
                else
                    ap_NS_fsm <= ap_ST_fsm_state42;
                end if;
            when ap_ST_fsm_state42 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state42) and (grp_complex_mag_stream_Pipeline_VITIS_LOOP_152_3_fu_222_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state43;
                else
                    ap_NS_fsm <= ap_ST_fsm_state42;
                end if;
            when ap_ST_fsm_state43 => 
                if (((output_stream_TREADY_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state43))) then
                    ap_NS_fsm <= ap_ST_fsm_state44;
                else
                    ap_NS_fsm <= ap_ST_fsm_state43;
                end if;
            when ap_ST_fsm_state44 => 
                if (((output_stream_TREADY_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state44))) then
                    ap_NS_fsm <= ap_ST_fsm_state38;
                else
                    ap_NS_fsm <= ap_ST_fsm_state44;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln126_fu_239_p2 <= std_logic_vector(unsigned(n) + unsigned(ap_const_lv32_2));
    add_ln152_fu_344_p2 <= std_logic_vector(unsigned(last_block_size_fu_324_p3) + unsigned(ap_const_lv3_1));
    and_ln151_fu_458_p2 <= (icmp_ln136_reg_631 and cmp24_reg_613);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state40 <= ap_CS_fsm(39);
    ap_CS_fsm_state41 <= ap_CS_fsm(40);
    ap_CS_fsm_state42 <= ap_CS_fsm(41);
    ap_CS_fsm_state43 <= ap_CS_fsm(42);
    ap_CS_fsm_state44 <= ap_CS_fsm(43);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;
    ap_ST_fsm_state27_blk <= ap_const_logic_0;
    ap_ST_fsm_state28_blk <= ap_const_logic_0;
    ap_ST_fsm_state29_blk <= ap_const_logic_0;
    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_fsm_state33_blk <= ap_const_logic_0;
    ap_ST_fsm_state34_blk <= ap_const_logic_0;
    ap_ST_fsm_state35_blk <= ap_const_logic_0;
    ap_ST_fsm_state36_blk <= ap_const_logic_0;
    ap_ST_fsm_state37_blk <= ap_const_logic_0;

    ap_ST_fsm_state38_blk_assign_proc : process(regslice_both_output_stream_U_apdone_blk)
    begin
        if ((regslice_both_output_stream_U_apdone_blk = ap_const_logic_1)) then 
            ap_ST_fsm_state38_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state38_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state39_blk_assign_proc : process(ap_block_state39)
    begin
        if ((ap_const_boolean_1 = ap_block_state39)) then 
            ap_ST_fsm_state39_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state39_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state3_blk <= ap_const_logic_0;

    ap_ST_fsm_state40_blk_assign_proc : process(grp_complex_mag_stream_Pipeline_VITIS_LOOP_139_2_fu_194_ap_done)
    begin
        if ((grp_complex_mag_stream_Pipeline_VITIS_LOOP_139_2_fu_194_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state40_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state40_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state41_blk <= ap_const_logic_0;

    ap_ST_fsm_state42_blk_assign_proc : process(grp_complex_mag_stream_Pipeline_VITIS_LOOP_152_3_fu_222_ap_done)
    begin
        if ((grp_complex_mag_stream_Pipeline_VITIS_LOOP_152_3_fu_222_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state42_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state42_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state43_blk_assign_proc : process(output_stream_TREADY_int_regslice)
    begin
        if ((output_stream_TREADY_int_regslice = ap_const_logic_0)) then 
            ap_ST_fsm_state43_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state43_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state44_blk_assign_proc : process(output_stream_TREADY_int_regslice)
    begin
        if ((output_stream_TREADY_int_regslice = ap_const_logic_0)) then 
            ap_ST_fsm_state44_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state44_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state39_assign_proc : process(input_stream_id_TVALID_int_regslice, input_stream_iq_TVALID_int_regslice)
    begin
                ap_block_state39 <= ((input_stream_iq_TVALID_int_regslice = ap_const_logic_0) or (input_stream_id_TVALID_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state39_ignore_call18_assign_proc : process(input_stream_id_TVALID_int_regslice, input_stream_iq_TVALID_int_regslice)
    begin
                ap_block_state39_ignore_call18 <= ((input_stream_iq_TVALID_int_regslice = ap_const_logic_0) or (input_stream_id_TVALID_int_regslice = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state38, icmp_ln129_fu_365_p2, regslice_both_output_stream_U_apdone_blk)
    begin
        if (((regslice_both_output_stream_U_apdone_blk = ap_const_logic_0) and (icmp_ln129_fu_365_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state38))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_out_blk_0_0_load_phi_fu_188_p4_assign_proc : process(ap_CS_fsm_state43, and_ln151_reg_672, grp_complex_mag_stream_Pipeline_VITIS_LOOP_152_3_fu_222_out_blk_0_0_load34_out, out_blk_0_0_load_reg_185)
    begin
        if (((ap_const_lv1_1 = and_ln151_reg_672) and (ap_const_logic_1 = ap_CS_fsm_state43))) then 
            ap_phi_mux_out_blk_0_0_load_phi_fu_188_p4 <= grp_complex_mag_stream_Pipeline_VITIS_LOOP_152_3_fu_222_out_blk_0_0_load34_out;
        else 
            ap_phi_mux_out_blk_0_0_load_phi_fu_188_p4 <= out_blk_0_0_load_reg_185;
        end if; 
    end process;


    ap_phi_mux_out_blk_0_1_load_phi_fu_179_p4_assign_proc : process(ap_CS_fsm_state43, and_ln151_reg_672, grp_complex_mag_stream_Pipeline_VITIS_LOOP_152_3_fu_222_out_blk_0_1_load41_out, out_blk_0_1_load_reg_176)
    begin
        if (((ap_const_lv1_1 = and_ln151_reg_672) and (ap_const_logic_1 = ap_CS_fsm_state43))) then 
            ap_phi_mux_out_blk_0_1_load_phi_fu_179_p4 <= grp_complex_mag_stream_Pipeline_VITIS_LOOP_152_3_fu_222_out_blk_0_1_load41_out;
        else 
            ap_phi_mux_out_blk_0_1_load_phi_fu_179_p4 <= out_blk_0_1_load_reg_176;
        end if; 
    end process;


    ap_phi_mux_out_blk_0_2_load_phi_fu_170_p4_assign_proc : process(ap_CS_fsm_state43, and_ln151_reg_672, grp_complex_mag_stream_Pipeline_VITIS_LOOP_152_3_fu_222_out_blk_0_2_load48_out, out_blk_0_2_load_reg_167)
    begin
        if (((ap_const_lv1_1 = and_ln151_reg_672) and (ap_const_logic_1 = ap_CS_fsm_state43))) then 
            ap_phi_mux_out_blk_0_2_load_phi_fu_170_p4 <= grp_complex_mag_stream_Pipeline_VITIS_LOOP_152_3_fu_222_out_blk_0_2_load48_out;
        else 
            ap_phi_mux_out_blk_0_2_load_phi_fu_170_p4 <= out_blk_0_2_load_reg_167;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state38, icmp_ln129_fu_365_p2, regslice_both_output_stream_U_apdone_blk)
    begin
        if (((regslice_both_output_stream_U_apdone_blk = ap_const_logic_0) and (icmp_ln129_fu_365_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state38))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    bitcast_ln158_1_fu_490_p1 <= ap_phi_mux_out_blk_0_1_load_phi_fu_179_p4;
    bitcast_ln158_2_fu_494_p1 <= ap_phi_mux_out_blk_0_2_load_phi_fu_170_p4;
    bitcast_ln158_fu_486_p1 <= ap_phi_mux_out_blk_0_0_load_phi_fu_188_p4;
    blk_count_2_fu_370_p2 <= std_logic_vector(unsigned(blk_count_fu_114) + unsigned(ap_const_lv30_1));
    cmp24_fu_338_p2 <= "0" when (last_block_size_fu_324_p3 = ap_const_lv3_3) else "1";
    elements_in_block_fu_451_p3 <= 
        last_block_size_reg_602 when (icmp_ln136_reg_631(0) = '1') else 
        ap_const_lv3_3;
    grp_complex_mag_stream_Pipeline_VITIS_LOOP_139_2_fu_194_ap_start <= grp_complex_mag_stream_Pipeline_VITIS_LOOP_139_2_fu_194_ap_start_reg;
    grp_complex_mag_stream_Pipeline_VITIS_LOOP_152_3_fu_222_ap_start <= grp_complex_mag_stream_Pipeline_VITIS_LOOP_152_3_fu_222_ap_start_reg;
    grp_fu_234_p1 <= ap_const_lv65_155555556(34 - 1 downto 0);

    grp_fu_253_ap_start_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            grp_fu_253_ap_start <= ap_const_logic_1;
        else 
            grp_fu_253_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_253_p1 <= ap_const_lv32_3(3 - 1 downto 0);
    icmp_ln127_fu_318_p2 <= "1" when (trunc_ln127_fu_315_p1 = ap_const_lv3_0) else "0";
    icmp_ln129_fu_365_p2 <= "1" when (signed(zext_ln129_fu_361_p1) < signed(select_ln126_1_reg_597)) else "0";
    icmp_ln136_fu_376_p2 <= "1" when (zext_ln129_fu_361_p1 = sub3_reg_608) else "0";
    id_blk_1_fu_398_p1 <= tmp_fu_390_p3;
    id_blk_2_fu_411_p1 <= tmp_s_fu_403_p3;
    id_blk_fu_385_p1 <= trunc_ln131_fu_381_p1;

    input_stream_id_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state39, input_stream_id_TVALID_int_regslice)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            input_stream_id_TDATA_blk_n <= input_stream_id_TVALID_int_regslice;
        else 
            input_stream_id_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    input_stream_id_TREADY <= regslice_both_input_stream_id_U_ack_in;

    input_stream_id_TREADY_int_regslice_assign_proc : process(ap_CS_fsm_state39, ap_block_state39)
    begin
        if (((ap_const_boolean_0 = ap_block_state39) and (ap_const_logic_1 = ap_CS_fsm_state39))) then 
            input_stream_id_TREADY_int_regslice <= ap_const_logic_1;
        else 
            input_stream_id_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    input_stream_iq_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state39, input_stream_iq_TVALID_int_regslice)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            input_stream_iq_TDATA_blk_n <= input_stream_iq_TVALID_int_regslice;
        else 
            input_stream_iq_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    input_stream_iq_TREADY <= regslice_both_input_stream_iq_U_ack_in;

    input_stream_iq_TREADY_int_regslice_assign_proc : process(ap_CS_fsm_state39, ap_block_state39)
    begin
        if (((ap_const_boolean_0 = ap_block_state39) and (ap_const_logic_1 = ap_CS_fsm_state39))) then 
            input_stream_iq_TREADY_int_regslice <= ap_const_logic_1;
        else 
            input_stream_iq_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    iq_blk_1_fu_433_p1 <= tmp_1_fu_425_p3;
    iq_blk_2_fu_446_p1 <= tmp_2_fu_438_p3;
    iq_blk_fu_420_p1 <= trunc_ln132_fu_416_p1;
    last_block_size_fu_324_p3 <= 
        ap_const_lv3_3 when (icmp_ln127_fu_318_p2(0) = '1') else 
        trunc_ln127_fu_315_p1;

    output_stream_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state43, ap_CS_fsm_state44, output_stream_TREADY_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43))) then 
            output_stream_TDATA_blk_n <= output_stream_TREADY_int_regslice;
        else 
            output_stream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    output_stream_TDATA_int_regslice <= ((bitcast_ln158_2_fu_494_p1 & bitcast_ln158_1_fu_490_p1) & bitcast_ln158_fu_486_p1);
    output_stream_TVALID <= regslice_both_output_stream_U_vld_out;

    output_stream_TVALID_int_regslice_assign_proc : process(ap_CS_fsm_state43, output_stream_TREADY_int_regslice)
    begin
        if (((output_stream_TREADY_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state43))) then 
            output_stream_TVALID_int_regslice <= ap_const_logic_1;
        else 
            output_stream_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    select_ln126_1_fu_308_p3 <= 
        sub_ln126_1_fu_302_p2 when (tmp_15_reg_566(0) = '1') else 
        zext_ln126_fu_299_p1;
    select_ln126_fu_293_p3 <= 
        tmp_20_cast_fu_283_p4 when (tmp_15_reg_566(0) = '1') else 
        tmp_21_cast_reg_582;
    select_ln152_fu_350_p3 <= 
        ap_const_lv3_3 when (cmp24_fu_338_p2(0) = '1') else 
        add_ln152_fu_344_p2;
    sub3_fu_332_p2 <= std_logic_vector(unsigned(select_ln126_1_fu_308_p3) + unsigned(ap_const_lv31_7FFFFFFF));
    sub_ln126_1_fu_302_p2 <= std_logic_vector(unsigned(ap_const_lv31_0) - unsigned(zext_ln126_fu_299_p1));
    sub_ln126_fu_278_p2 <= std_logic_vector(unsigned(ap_const_lv65_0) - unsigned(mul_ln126_reg_577));
    tmp_1_fu_425_p3 <= input_stream_iq_TDATA_int_regslice(63 downto 32);
    tmp_20_cast_fu_283_p4 <= sub_ln126_fu_278_p2(63 downto 34);
    tmp_2_fu_438_p3 <= input_stream_iq_TDATA_int_regslice(95 downto 64);
    tmp_fu_390_p3 <= input_stream_id_TDATA_int_regslice(63 downto 32);
    tmp_s_fu_403_p3 <= input_stream_id_TDATA_int_regslice(95 downto 64);
    trunc_ln127_fu_315_p1 <= srem_ln127_reg_592(3 - 1 downto 0);
    trunc_ln131_fu_381_p1 <= input_stream_id_TDATA_int_regslice(32 - 1 downto 0);
    trunc_ln132_fu_416_p1 <= input_stream_iq_TDATA_int_regslice(32 - 1 downto 0);
    zext_ln126_fu_299_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln126_reg_587),31));
    zext_ln129_fu_361_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(blk_count_fu_114),31));
end behav;
