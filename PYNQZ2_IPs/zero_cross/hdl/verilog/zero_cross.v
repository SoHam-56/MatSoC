// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="zero_cross_zero_cross,hls_ip_2024_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.912000,HLS_SYN_LAT=5637144614,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=2412,HLS_SYN_LUT=3419,HLS_VERSION=2024_2}" *)

module zero_cross (
        ap_clk,
        ap_rst_n,
        blk_stream_TDATA,
        blk_stream_TVALID,
        blk_stream_TREADY,
        segment_length_stream_TDATA,
        segment_length_stream_TVALID,
        segment_length_stream_TREADY,
        segment_length_stream_TKEEP,
        segment_length_stream_TSTRB,
        segment_length_stream_TLAST,
        s_axi_CTRL_AWVALID,
        s_axi_CTRL_AWREADY,
        s_axi_CTRL_AWADDR,
        s_axi_CTRL_WVALID,
        s_axi_CTRL_WREADY,
        s_axi_CTRL_WDATA,
        s_axi_CTRL_WSTRB,
        s_axi_CTRL_ARVALID,
        s_axi_CTRL_ARREADY,
        s_axi_CTRL_ARADDR,
        s_axi_CTRL_RVALID,
        s_axi_CTRL_RREADY,
        s_axi_CTRL_RDATA,
        s_axi_CTRL_RRESP,
        s_axi_CTRL_BVALID,
        s_axi_CTRL_BREADY,
        s_axi_CTRL_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 52'd1;
parameter    ap_ST_fsm_state2 = 52'd2;
parameter    ap_ST_fsm_state3 = 52'd4;
parameter    ap_ST_fsm_state4 = 52'd8;
parameter    ap_ST_fsm_state5 = 52'd16;
parameter    ap_ST_fsm_state6 = 52'd32;
parameter    ap_ST_fsm_state7 = 52'd64;
parameter    ap_ST_fsm_state8 = 52'd128;
parameter    ap_ST_fsm_state9 = 52'd256;
parameter    ap_ST_fsm_state10 = 52'd512;
parameter    ap_ST_fsm_state11 = 52'd1024;
parameter    ap_ST_fsm_state12 = 52'd2048;
parameter    ap_ST_fsm_state13 = 52'd4096;
parameter    ap_ST_fsm_state14 = 52'd8192;
parameter    ap_ST_fsm_state15 = 52'd16384;
parameter    ap_ST_fsm_state16 = 52'd32768;
parameter    ap_ST_fsm_state17 = 52'd65536;
parameter    ap_ST_fsm_state18 = 52'd131072;
parameter    ap_ST_fsm_state19 = 52'd262144;
parameter    ap_ST_fsm_state20 = 52'd524288;
parameter    ap_ST_fsm_state21 = 52'd1048576;
parameter    ap_ST_fsm_state22 = 52'd2097152;
parameter    ap_ST_fsm_state23 = 52'd4194304;
parameter    ap_ST_fsm_state24 = 52'd8388608;
parameter    ap_ST_fsm_state25 = 52'd16777216;
parameter    ap_ST_fsm_state26 = 52'd33554432;
parameter    ap_ST_fsm_state27 = 52'd67108864;
parameter    ap_ST_fsm_state28 = 52'd134217728;
parameter    ap_ST_fsm_state29 = 52'd268435456;
parameter    ap_ST_fsm_state30 = 52'd536870912;
parameter    ap_ST_fsm_state31 = 52'd1073741824;
parameter    ap_ST_fsm_state32 = 52'd2147483648;
parameter    ap_ST_fsm_state33 = 52'd4294967296;
parameter    ap_ST_fsm_state34 = 52'd8589934592;
parameter    ap_ST_fsm_state35 = 52'd17179869184;
parameter    ap_ST_fsm_state36 = 52'd34359738368;
parameter    ap_ST_fsm_state37 = 52'd68719476736;
parameter    ap_ST_fsm_state38 = 52'd137438953472;
parameter    ap_ST_fsm_state39 = 52'd274877906944;
parameter    ap_ST_fsm_state40 = 52'd549755813888;
parameter    ap_ST_fsm_state41 = 52'd1099511627776;
parameter    ap_ST_fsm_state42 = 52'd2199023255552;
parameter    ap_ST_fsm_state43 = 52'd4398046511104;
parameter    ap_ST_fsm_state44 = 52'd8796093022208;
parameter    ap_ST_fsm_state45 = 52'd17592186044416;
parameter    ap_ST_fsm_state46 = 52'd35184372088832;
parameter    ap_ST_fsm_state47 = 52'd70368744177664;
parameter    ap_ST_fsm_state48 = 52'd140737488355328;
parameter    ap_ST_fsm_state49 = 52'd281474976710656;
parameter    ap_ST_fsm_state50 = 52'd562949953421312;
parameter    ap_ST_fsm_state51 = 52'd1125899906842624;
parameter    ap_ST_fsm_state52 = 52'd2251799813685248;
parameter    C_S_AXI_CTRL_DATA_WIDTH = 32;
parameter    C_S_AXI_CTRL_ADDR_WIDTH = 5;
parameter    C_S_AXI_DATA_WIDTH = 32;

parameter C_S_AXI_CTRL_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
input  [95:0] blk_stream_TDATA;
input   blk_stream_TVALID;
output   blk_stream_TREADY;
output  [31:0] segment_length_stream_TDATA;
output   segment_length_stream_TVALID;
input   segment_length_stream_TREADY;
output  [3:0] segment_length_stream_TKEEP;
output  [3:0] segment_length_stream_TSTRB;
output  [0:0] segment_length_stream_TLAST;
input   s_axi_CTRL_AWVALID;
output   s_axi_CTRL_AWREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_CTRL_AWADDR;
input   s_axi_CTRL_WVALID;
output   s_axi_CTRL_WREADY;
input  [C_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_CTRL_WDATA;
input  [C_S_AXI_CTRL_WSTRB_WIDTH - 1:0] s_axi_CTRL_WSTRB;
input   s_axi_CTRL_ARVALID;
output   s_axi_CTRL_ARREADY;
input  [C_S_AXI_CTRL_ADDR_WIDTH - 1:0] s_axi_CTRL_ARADDR;
output   s_axi_CTRL_RVALID;
input   s_axi_CTRL_RREADY;
output  [C_S_AXI_CTRL_DATA_WIDTH - 1:0] s_axi_CTRL_RDATA;
output  [1:0] s_axi_CTRL_RRESP;
output   s_axi_CTRL_BVALID;
input   s_axi_CTRL_BREADY;
output  [1:0] s_axi_CTRL_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [51:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [31:0] n;
wire   [31:0] Tms;
reg    blk_stream_TDATA_blk_n;
wire    ap_CS_fsm_state38;
reg   [0:0] icmp_ln20_reg_938;
reg   [0:0] icmp_ln20_1_reg_1058;
reg    segment_length_stream_TDATA_blk_n;
wire    ap_CS_fsm_state45;
reg   [0:0] and_ln25_reg_1114;
reg   [0:0] icmp_ln27_reg_1123;
reg   [0:0] icmp_ln29_reg_1133;
wire   [0:0] icmp_ln33_fu_772_p2;
wire    ap_CS_fsm_state46;
wire    ap_CS_fsm_state49;
wire    ap_CS_fsm_state50;
reg   [0:0] icmp_ln33_reg_1147;
wire    ap_CS_fsm_state52;
reg   [31:0] Tms_read_reg_879;
reg   [31:0] n_read_reg_884;
wire  signed [31:0] add_ln16_fu_355_p2;
reg  signed [31:0] add_ln16_reg_927;
wire    ap_CS_fsm_state32;
reg   [0:0] tmp_5_reg_932;
wire   [0:0] icmp_ln20_fu_368_p2;
wire   [31:0] grp_fu_326_p2;
reg   [31:0] dc_reg_942;
wire    ap_CS_fsm_state33;
reg   [0:0] xs_sign_reg_952;
wire    ap_CS_fsm_state34;
wire   [22:0] trunc_ln342_fu_396_p1;
reg   [22:0] trunc_ln342_reg_957;
wire   [0:0] tmp_fu_410_p3;
reg   [0:0] tmp_reg_962;
wire   [8:0] select_ln18_fu_428_p3;
reg   [8:0] select_ln18_reg_967;
wire   [64:0] grp_fu_336_p2;
reg   [64:0] mul_ln16_reg_972;
reg   [29:0] tmp_10_cast_reg_977;
wire   [31:0] val_fu_498_p3;
reg   [31:0] val_reg_982;
wire    ap_CS_fsm_state35;
wire   [29:0] select_ln16_fu_520_p3;
reg   [29:0] select_ln16_reg_988;
wire   [31:0] result_fu_531_p3;
reg   [31:0] result_reg_993;
wire    ap_CS_fsm_state36;
wire   [30:0] select_ln16_1_fu_546_p3;
reg   [30:0] select_ln16_1_reg_1000;
wire   [30:0] sub2_fu_553_p2;
reg   [30:0] sub2_reg_1005;
wire   [1:0] cond_fu_573_p3;
reg   [1:0] cond_reg_1045;
wire   [30:0] zext_ln20_1_fu_609_p1;
reg   [30:0] zext_ln20_1_reg_1053;
wire    ap_CS_fsm_state37;
wire   [0:0] icmp_ln20_1_fu_613_p2;
wire   [31:0] zext_ln20_fu_627_p1;
reg   [31:0] zext_ln20_reg_1071;
wire   [29:0] blk_count_2_fu_631_p2;
reg   [29:0] blk_count_2_reg_1077;
wire   [31:0] temp_blk_3_fu_644_p1;
reg   [31:0] temp_blk_3_reg_1085;
wire   [1:0] elements_in_block_fu_692_p3;
reg   [1:0] elements_in_block_reg_1091;
wire   [31:0] grp_fu_322_p2;
reg   [31:0] mul_reg_1098;
wire    ap_CS_fsm_state41;
wire   [0:0] icmp_ln26_fu_716_p2;
reg   [0:0] icmp_ln26_reg_1104;
wire    ap_CS_fsm_state42;
wire   [0:0] icmp_ln26_1_fu_722_p2;
reg   [0:0] icmp_ln26_1_reg_1109;
wire   [0:0] and_ln25_fu_738_p2;
wire    ap_CS_fsm_state43;
wire   [30:0] zext_ln22_fu_744_p1;
reg   [30:0] zext_ln22_reg_1118;
wire    ap_CS_fsm_state44;
wire   [0:0] icmp_ln27_fu_747_p2;
wire   [31:0] third_crossing_fu_752_p2;
reg   [31:0] third_crossing_reg_1127;
wire   [0:0] icmp_ln29_fu_757_p2;
wire   [31:0] sub_ln33_fu_762_p2;
reg   [31:0] sub_ln33_reg_1137;
wire   [31:0] sub_ln30_fu_767_p2;
reg   [31:0] sub_ln30_reg_1142;
wire   [31:0] segment_length_fu_776_p2;
wire   [1:0] sub42_fu_785_p2;
reg   [1:0] sub42_reg_1159;
wire   [0:0] icmp_ln49_fu_791_p2;
reg   [0:0] icmp_ln49_reg_1164;
reg   [31:0] temp_blk_1_load_reg_1168;
reg   [31:0] temp_blk_2_load_reg_1173;
wire   [0:0] grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_ap_return;
reg   [0:0] targetBlock_reg_1178;
wire    ap_CS_fsm_state47;
wire   [30:0] third_crossing_2_fu_806_p2;
reg   [30:0] third_crossing_2_reg_1191;
wire    ap_CS_fsm_state48;
wire   [31:0] segment_length_1_fu_862_p2;
wire    grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_ap_start;
wire    grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_ap_done;
wire    grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_ap_idle;
wire    grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_ap_ready;
wire   [0:0] grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_j_out;
wire    grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_j_out_ap_vld;
wire   [31:0] grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_first_crossing_2_out;
wire    grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_first_crossing_2_out_ap_vld;
wire   [31:0] grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_second_crossing_2_out;
wire    grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_second_crossing_2_out_ap_vld;
wire   [31:0] grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_grp_fu_322_p_din0;
wire   [31:0] grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_grp_fu_322_p_din1;
wire    grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_grp_fu_322_p_ce;
wire   [31:0] grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_grp_fu_331_p_din0;
wire   [31:0] grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_grp_fu_331_p_din1;
wire   [4:0] grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_grp_fu_331_p_opcode;
wire    grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_grp_fu_331_p_ce;
reg   [0:0] first_block_0227_reg_242;
wire    ap_CS_fsm_state51;
reg   [31:0] ap_phi_mux_second_crossing_1_phi_fu_259_p8;
reg   [31:0] second_crossing_1_reg_256;
reg    ap_predicate_op233_write_state45;
reg    ap_block_state45;
wire   [0:0] icmp_ln30_fu_781_p2;
reg   [31:0] ap_phi_mux_first_crossing_1_phi_fu_273_p8;
reg   [31:0] first_crossing_1_reg_270;
reg   [31:0] second_crossing_3_reg_284;
reg   [31:0] first_crossing_3_reg_294;
reg    grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_ap_start_reg;
reg    ap_block_state45_ignore_call2;
reg   [0:0] j_loc_fu_168;
reg   [31:0] first_crossing_2_loc_fu_164;
reg   [31:0] second_crossing_2_loc_fu_160;
reg   [31:0] temp_blk_fu_172;
reg    ap_predicate_op191_read_state38;
reg    ap_predicate_op205_write_state38;
reg    ap_block_state38;
reg   [31:0] temp_blk_1_fu_176;
wire   [31:0] temp_blk_4_fu_657_p1;
reg   [31:0] temp_blk_2_fu_180;
wire   [31:0] temp_blk_5_fu_669_p1;
reg   [30:0] element_idx_fu_184;
wire   [30:0] element_idx_3_fu_833_p2;
reg   [31:0] prev_element_fu_188;
wire   [31:0] prev_element_1_fu_814_p9;
reg   [29:0] blk_count_fu_192;
reg   [31:0] second_crossing_fu_196;
reg   [31:0] first_crossing_fu_200;
reg   [31:0] grp_fu_322_p0;
reg   [31:0] grp_fu_322_p1;
wire    ap_CS_fsm_state18;
reg   [31:0] grp_fu_331_p0;
reg   [31:0] grp_fu_331_p1;
wire   [33:0] grp_fu_336_p1;
wire   [2:0] grp_fu_349_p1;
wire   [31:0] data_fu_377_p1;
wire   [7:0] xs_exp_fu_388_p3;
wire   [8:0] zext_ln317_fu_400_p1;
wire   [8:0] add_ln317_fu_404_p2;
wire   [7:0] sub_ln18_fu_418_p2;
wire  signed [8:0] sext_ln18_fu_424_p1;
wire   [24:0] mantissa_fu_446_p4;
wire  signed [31:0] sext_ln18_1_fu_459_p1;
wire   [78:0] zext_ln15_fu_455_p1;
wire   [78:0] zext_ln18_fu_462_p1;
wire   [78:0] lshr_ln18_fu_466_p2;
wire   [78:0] shl_ln18_fu_472_p2;
wire   [31:0] tmp_7_fu_478_p4;
wire   [31:0] tmp_8_fu_488_p4;
wire   [64:0] sub_ln16_fu_505_p2;
wire   [29:0] tmp_9_cast_fu_510_p4;
wire   [31:0] result_2_fu_526_p2;
wire   [30:0] zext_ln16_fu_537_p1;
wire   [30:0] sub_ln16_1_fu_540_p2;
wire   [2:0] grp_fu_349_p2;
wire   [2:0] empty_22_fu_563_p1;
wire   [0:0] cmp4_fu_567_p2;
wire   [1:0] empty_fu_559_p1;
wire   [31:0] trunc_ln21_fu_640_p1;
wire   [31:0] tmp_3_fu_649_p3;
wire   [31:0] tmp_4_fu_661_p3;
wire   [0:0] icmp_ln22_fu_688_p2;
wire   [31:0] bitcast_ln26_fu_699_p1;
wire   [7:0] tmp_1_fu_702_p4;
wire   [22:0] trunc_ln26_fu_712_p1;
wire   [0:0] or_ln26_fu_728_p2;
wire   [0:0] grp_fu_331_p2;
wire   [0:0] and_ln26_fu_732_p2;
wire   [31:0] prev_element_1_fu_814_p7;
wire   [31:0] zext_ln59_fu_854_p1;
wire   [31:0] sub_ln59_fu_857_p2;
wire   [31:0] zext_ln12_fu_851_p1;
reg    grp_fu_322_ce;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state40;
reg    grp_fu_331_ce;
reg   [4:0] grp_fu_331_opcode;
reg    grp_fu_349_ap_start;
wire    grp_fu_349_ap_done;
reg    ap_predicate_op266_write_state50;
wire    regslice_both_segment_length_stream_V_data_V_U_apdone_blk;
reg    ap_block_state50;
reg   [51:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
reg    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
reg    ap_ST_fsm_state45_blk;
reg    ap_ST_fsm_state46_blk;
reg    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
reg    ap_ST_fsm_state49_blk;
reg    ap_ST_fsm_state50_blk;
wire    ap_ST_fsm_state51_blk;
reg    ap_ST_fsm_state52_blk;
wire    regslice_both_blk_stream_U_apdone_blk;
wire   [95:0] blk_stream_TDATA_int_regslice;
wire    blk_stream_TVALID_int_regslice;
reg    blk_stream_TREADY_int_regslice;
wire    regslice_both_blk_stream_U_ack_in;
reg   [31:0] segment_length_stream_TDATA_int_regslice;
reg    segment_length_stream_TVALID_int_regslice;
wire    segment_length_stream_TREADY_int_regslice;
wire    regslice_both_segment_length_stream_V_data_V_U_vld_out;
wire    regslice_both_segment_length_stream_V_keep_V_U_apdone_blk;
wire    regslice_both_segment_length_stream_V_keep_V_U_ack_in_dummy;
wire    regslice_both_segment_length_stream_V_keep_V_U_vld_out;
wire    regslice_both_segment_length_stream_V_strb_V_U_apdone_blk;
wire    regslice_both_segment_length_stream_V_strb_V_U_ack_in_dummy;
wire    regslice_both_segment_length_stream_V_strb_V_U_vld_out;
wire    regslice_both_segment_length_stream_V_last_V_U_apdone_blk;
wire    regslice_both_segment_length_stream_V_last_V_U_ack_in_dummy;
wire    regslice_both_segment_length_stream_V_last_V_U_vld_out;
reg    ap_condition_394;
reg    ap_condition_404;
wire   [1:0] prev_element_1_fu_814_p1;
wire  signed [1:0] prev_element_1_fu_814_p3;
wire  signed [1:0] prev_element_1_fu_814_p5;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 52'd1;
#0 grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_ap_start_reg = 1'b0;
#0 temp_blk_fu_172 = 32'd0;
#0 temp_blk_1_fu_176 = 32'd0;
#0 temp_blk_2_fu_180 = 32'd0;
#0 element_idx_fu_184 = 31'd0;
#0 prev_element_fu_188 = 32'd0;
#0 blk_count_fu_192 = 30'd0;
#0 second_crossing_fu_196 = 32'd0;
#0 first_crossing_fu_200 = 32'd0;
end

zero_cross_zero_cross_Pipeline_VITIS_LOOP_49_2 grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_ap_start),
    .ap_done(grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_ap_done),
    .ap_idle(grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_ap_idle),
    .ap_ready(grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_ap_ready),
    .temp_blk_3(temp_blk_3_reg_1085),
    .first_crossing_1(first_crossing_1_reg_270),
    .second_crossing_1(second_crossing_1_reg_256),
    .sub42(sub42_reg_1159),
    .temp_blk_2_load(temp_blk_2_load_reg_1173),
    .temp_blk_1_load(temp_blk_1_load_reg_1168),
    .element_idx(element_idx_fu_184),
    .result(result_reg_993),
    .zext_ln20(element_idx_fu_184),
    .j_out(grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_j_out),
    .j_out_ap_vld(grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_j_out_ap_vld),
    .first_crossing_2_out(grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_first_crossing_2_out),
    .first_crossing_2_out_ap_vld(grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_first_crossing_2_out_ap_vld),
    .second_crossing_2_out(grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_second_crossing_2_out),
    .second_crossing_2_out_ap_vld(grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_second_crossing_2_out_ap_vld),
    .ap_return(grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_ap_return),
    .grp_fu_322_p_din0(grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_grp_fu_322_p_din0),
    .grp_fu_322_p_din1(grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_grp_fu_322_p_din1),
    .grp_fu_322_p_dout0(grp_fu_322_p2),
    .grp_fu_322_p_ce(grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_grp_fu_322_p_ce),
    .grp_fu_331_p_din0(grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_grp_fu_331_p_din0),
    .grp_fu_331_p_din1(grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_grp_fu_331_p_din1),
    .grp_fu_331_p_opcode(grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_grp_fu_331_p_opcode),
    .grp_fu_331_p_dout0(grp_fu_331_p2),
    .grp_fu_331_p_ce(grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_grp_fu_331_p_ce)
);

zero_cross_CTRL_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CTRL_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CTRL_DATA_WIDTH ))
CTRL_s_axi_U(
    .AWVALID(s_axi_CTRL_AWVALID),
    .AWREADY(s_axi_CTRL_AWREADY),
    .AWADDR(s_axi_CTRL_AWADDR),
    .WVALID(s_axi_CTRL_WVALID),
    .WREADY(s_axi_CTRL_WREADY),
    .WDATA(s_axi_CTRL_WDATA),
    .WSTRB(s_axi_CTRL_WSTRB),
    .ARVALID(s_axi_CTRL_ARVALID),
    .ARREADY(s_axi_CTRL_ARREADY),
    .ARADDR(s_axi_CTRL_ARADDR),
    .RVALID(s_axi_CTRL_RVALID),
    .RREADY(s_axi_CTRL_RREADY),
    .RDATA(s_axi_CTRL_RDATA),
    .RRESP(s_axi_CTRL_RRESP),
    .BVALID(s_axi_CTRL_BVALID),
    .BREADY(s_axi_CTRL_BREADY),
    .BRESP(s_axi_CTRL_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .n(n),
    .Tms(Tms),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle)
);

zero_cross_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U15(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_322_p0),
    .din1(grp_fu_322_p1),
    .ce(grp_fu_322_ce),
    .dout(grp_fu_322_p2)
);

zero_cross_fdiv_32ns_32ns_32_16_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fdiv_32ns_32ns_32_16_no_dsp_1_U16(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(32'd1148846080),
    .din1(Tms_read_reg_879),
    .ce(1'b1),
    .dout(grp_fu_326_p2)
);

zero_cross_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U17(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(grp_fu_331_p0),
    .din1(grp_fu_331_p1),
    .ce(grp_fu_331_ce),
    .opcode(grp_fu_331_opcode),
    .dout(grp_fu_331_p2)
);

zero_cross_mul_32s_34ns_65_2_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 34 ),
    .dout_WIDTH( 65 ))
mul_32s_34ns_65_2_1_U18(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .din0(add_ln16_reg_927),
    .din1(grp_fu_336_p1),
    .ce(1'b1),
    .dout(grp_fu_336_p2)
);

zero_cross_srem_32ns_3ns_3_36_seq_1 #(
    .ID( 1 ),
    .NUM_STAGE( 36 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 3 ),
    .dout_WIDTH( 3 ))
srem_32ns_3ns_3_36_seq_1_U19(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .start(grp_fu_349_ap_start),
    .done(grp_fu_349_ap_done),
    .din0(n),
    .din1(grp_fu_349_p1),
    .ce(1'b1),
    .dout(grp_fu_349_p2)
);

(* dissolve_hierarchy = "yes" *) zero_cross_sparsemux_7_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h1 ),
    .din0_WIDTH( 32 ),
    .CASE1( 2'h2 ),
    .din1_WIDTH( 32 ),
    .CASE2( 2'h3 ),
    .din2_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
sparsemux_7_2_32_1_1_U20(
    .din0(temp_blk_fu_172),
    .din1(temp_blk_1_fu_176),
    .din2(temp_blk_2_fu_180),
    .def(prev_element_1_fu_814_p7),
    .sel(elements_in_block_reg_1091),
    .dout(prev_element_1_fu_814_p9)
);

zero_cross_regslice_both #(
    .DataWidth( 96 ))
regslice_both_blk_stream_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(blk_stream_TDATA),
    .vld_in(blk_stream_TVALID),
    .ack_in(regslice_both_blk_stream_U_ack_in),
    .data_out(blk_stream_TDATA_int_regslice),
    .vld_out(blk_stream_TVALID_int_regslice),
    .ack_out(blk_stream_TREADY_int_regslice),
    .apdone_blk(regslice_both_blk_stream_U_apdone_blk)
);

zero_cross_regslice_both #(
    .DataWidth( 32 ))
regslice_both_segment_length_stream_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(segment_length_stream_TDATA_int_regslice),
    .vld_in(segment_length_stream_TVALID_int_regslice),
    .ack_in(segment_length_stream_TREADY_int_regslice),
    .data_out(segment_length_stream_TDATA),
    .vld_out(regslice_both_segment_length_stream_V_data_V_U_vld_out),
    .ack_out(segment_length_stream_TREADY),
    .apdone_blk(regslice_both_segment_length_stream_V_data_V_U_apdone_blk)
);

zero_cross_regslice_both #(
    .DataWidth( 4 ))
regslice_both_segment_length_stream_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(4'd15),
    .vld_in(segment_length_stream_TVALID_int_regslice),
    .ack_in(regslice_both_segment_length_stream_V_keep_V_U_ack_in_dummy),
    .data_out(segment_length_stream_TKEEP),
    .vld_out(regslice_both_segment_length_stream_V_keep_V_U_vld_out),
    .ack_out(segment_length_stream_TREADY),
    .apdone_blk(regslice_both_segment_length_stream_V_keep_V_U_apdone_blk)
);

zero_cross_regslice_both #(
    .DataWidth( 4 ))
regslice_both_segment_length_stream_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(4'd15),
    .vld_in(segment_length_stream_TVALID_int_regslice),
    .ack_in(regslice_both_segment_length_stream_V_strb_V_U_ack_in_dummy),
    .data_out(segment_length_stream_TSTRB),
    .vld_out(regslice_both_segment_length_stream_V_strb_V_U_vld_out),
    .ack_out(segment_length_stream_TREADY),
    .apdone_blk(regslice_both_segment_length_stream_V_strb_V_U_apdone_blk)
);

zero_cross_regslice_both #(
    .DataWidth( 1 ))
regslice_both_segment_length_stream_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(1'd1),
    .vld_in(segment_length_stream_TVALID_int_regslice),
    .ack_in(regslice_both_segment_length_stream_V_last_V_U_ack_in_dummy),
    .data_out(segment_length_stream_TLAST),
    .vld_out(regslice_both_segment_length_stream_V_last_V_U_vld_out),
    .ack_out(segment_length_stream_TREADY),
    .apdone_blk(regslice_both_segment_length_stream_V_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state45_ignore_call2) & (1'b1 == ap_CS_fsm_state45) & (((((icmp_ln49_fu_791_p2 == 1'd0) & (icmp_ln33_fu_772_p2 == 1'd1)) | ((icmp_ln49_fu_791_p2 == 1'd0) & (icmp_ln29_reg_1133 == 1'd1))) | ((icmp_ln49_fu_791_p2 == 1'd0) & (icmp_ln27_reg_1123 == 1'd1))) | ((icmp_ln49_fu_791_p2 == 1'd0) & (1'd0 == and_ln25_reg_1114))))) begin
            grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_ap_start_reg <= 1'b1;
        end else if ((grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_ap_ready == 1'b1)) begin
            grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln20_reg_938 == 1'd1) & (1'b1 == ap_CS_fsm_state36))) begin
        blk_count_fu_192 <= 30'd0;
    end else if (((1'b1 == ap_CS_fsm_state48) & ((targetBlock_reg_1178 == 1'd1) | (icmp_ln49_reg_1164 == 1'd1)))) begin
        blk_count_fu_192 <= blk_count_2_reg_1077;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln20_reg_938 == 1'd1) & (1'b1 == ap_CS_fsm_state36))) begin
        element_idx_fu_184 <= 31'd0;
    end else if (((1'b1 == ap_CS_fsm_state48) & ((targetBlock_reg_1178 == 1'd1) | (icmp_ln49_reg_1164 == 1'd1)))) begin
        element_idx_fu_184 <= element_idx_3_fu_833_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state51)) begin
        first_block_0227_reg_242 <= 1'd1;
    end else if (((icmp_ln20_reg_938 == 1'd1) & (1'b1 == ap_CS_fsm_state36))) begin
        first_block_0227_reg_242 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln25_reg_1114) & (icmp_ln27_fu_747_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state44))) begin
        first_crossing_1_reg_270 <= third_crossing_fu_752_p2;
    end else if ((((1'b0 == ap_block_state45) & (1'b1 == ap_CS_fsm_state45) & (((1'd1 == and_ln25_reg_1114) & (icmp_ln33_fu_772_p2 == 1'd1) & (icmp_ln29_reg_1133 == 1'd0) & (icmp_ln27_reg_1123 == 1'd0)) | ((1'd1 == and_ln25_reg_1114) & (icmp_ln30_fu_781_p2 == 1'd1) & (icmp_ln29_reg_1133 == 1'd1) & (icmp_ln27_reg_1123 == 1'd0)))) | ((1'b1 == ap_CS_fsm_state44) & (1'd0 == and_ln25_reg_1114)) | ((1'd1 == and_ln25_reg_1114) & (icmp_ln30_fu_781_p2 == 1'd0) & (1'b0 == ap_block_state45) & (1'b1 == ap_CS_fsm_state45) & (icmp_ln29_reg_1133 == 1'd1) & (icmp_ln27_reg_1123 == 1'd0)))) begin
        first_crossing_1_reg_270 <= first_crossing_fu_200;
    end
end

always @ (posedge ap_clk) begin
    if (((targetBlock_reg_1178 == 1'd1) & (icmp_ln49_reg_1164 == 1'd0) & (1'b1 == ap_CS_fsm_state48))) begin
        first_crossing_3_reg_294 <= first_crossing_2_loc_fu_164;
    end else if (((1'b0 == ap_block_state45) & (1'b1 == ap_CS_fsm_state45) & (((((icmp_ln49_fu_791_p2 == 1'd1) & (icmp_ln33_fu_772_p2 == 1'd1)) | ((icmp_ln49_fu_791_p2 == 1'd1) & (icmp_ln29_reg_1133 == 1'd1))) | ((icmp_ln49_fu_791_p2 == 1'd1) & (icmp_ln27_reg_1123 == 1'd1))) | ((icmp_ln49_fu_791_p2 == 1'd1) & (1'd0 == and_ln25_reg_1114))))) begin
        first_crossing_3_reg_294 <= ap_phi_mux_first_crossing_1_phi_fu_273_p8;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln20_reg_938 == 1'd1) & (1'b1 == ap_CS_fsm_state36))) begin
        first_crossing_fu_200 <= 32'd4294967295;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        first_crossing_fu_200 <= first_crossing_3_reg_294;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln20_reg_938 == 1'd1) & (1'b1 == ap_CS_fsm_state36))) begin
        prev_element_fu_188 <= 32'd0;
    end else if (((1'b1 == ap_CS_fsm_state48) & ((targetBlock_reg_1178 == 1'd1) | (icmp_ln49_reg_1164 == 1'd1)))) begin
        prev_element_fu_188 <= prev_element_1_fu_814_p9;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln25_reg_1114) & (icmp_ln30_fu_781_p2 == 1'd0) & (1'b0 == ap_block_state45) & (1'b1 == ap_CS_fsm_state45) & (icmp_ln29_reg_1133 == 1'd1) & (icmp_ln27_reg_1123 == 1'd0))) begin
        second_crossing_1_reg_256 <= third_crossing_reg_1127;
    end else if ((((1'b0 == ap_block_state45) & (1'b1 == ap_CS_fsm_state45) & (((1'd1 == and_ln25_reg_1114) & (icmp_ln33_fu_772_p2 == 1'd1) & (icmp_ln29_reg_1133 == 1'd0) & (icmp_ln27_reg_1123 == 1'd0)) | ((1'd1 == and_ln25_reg_1114) & (icmp_ln30_fu_781_p2 == 1'd1) & (icmp_ln29_reg_1133 == 1'd1) & (icmp_ln27_reg_1123 == 1'd0)))) | ((1'b1 == ap_CS_fsm_state44) & (1'd0 == and_ln25_reg_1114)) | ((1'd1 == and_ln25_reg_1114) & (icmp_ln27_fu_747_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state44)))) begin
        second_crossing_1_reg_256 <= second_crossing_fu_196;
    end
end

always @ (posedge ap_clk) begin
    if (((targetBlock_reg_1178 == 1'd1) & (icmp_ln49_reg_1164 == 1'd0) & (1'b1 == ap_CS_fsm_state48))) begin
        second_crossing_3_reg_284 <= second_crossing_2_loc_fu_160;
    end else if (((1'b0 == ap_block_state45) & (1'b1 == ap_CS_fsm_state45) & (((((icmp_ln49_fu_791_p2 == 1'd1) & (icmp_ln33_fu_772_p2 == 1'd1)) | ((icmp_ln49_fu_791_p2 == 1'd1) & (icmp_ln29_reg_1133 == 1'd1))) | ((icmp_ln49_fu_791_p2 == 1'd1) & (icmp_ln27_reg_1123 == 1'd1))) | ((icmp_ln49_fu_791_p2 == 1'd1) & (1'd0 == and_ln25_reg_1114))))) begin
        second_crossing_3_reg_284 <= ap_phi_mux_second_crossing_1_phi_fu_259_p8;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln20_reg_938 == 1'd1) & (1'b1 == ap_CS_fsm_state36))) begin
        second_crossing_fu_196 <= 32'd4294967295;
    end else if ((1'b1 == ap_CS_fsm_state51)) begin
        second_crossing_fu_196 <= second_crossing_3_reg_284;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        Tms_read_reg_879 <= Tms;
        n_read_reg_884 <= n;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state32)) begin
        add_ln16_reg_927 <= add_ln16_fu_355_p2;
        icmp_ln20_reg_938 <= icmp_ln20_fu_368_p2;
        tmp_5_reg_932 <= add_ln16_fu_355_p2[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state43)) begin
        and_ln25_reg_1114 <= and_ln25_fu_738_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        blk_count_2_reg_1077 <= blk_count_2_fu_631_p2;
        elements_in_block_reg_1091 <= elements_in_block_fu_692_p3;
        temp_blk_3_reg_1085 <= temp_blk_3_fu_644_p1;
        zext_ln20_reg_1071[30 : 0] <= zext_ln20_fu_627_p1[30 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        cond_reg_1045 <= cond_fu_573_p3;
        result_reg_993 <= result_fu_531_p3;
        select_ln16_1_reg_1000 <= select_ln16_1_fu_546_p3;
        sub2_reg_1005 <= sub2_fu_553_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state33)) begin
        dc_reg_942 <= grp_fu_326_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_first_crossing_2_out_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state47))) begin
        first_crossing_2_loc_fu_164 <= grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_first_crossing_2_out;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state37)) begin
        icmp_ln20_1_reg_1058 <= icmp_ln20_1_fu_613_p2;
        zext_ln20_1_reg_1053[29 : 0] <= zext_ln20_1_fu_609_p1[29 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        icmp_ln26_1_reg_1109 <= icmp_ln26_1_fu_722_p2;
        icmp_ln26_reg_1104 <= icmp_ln26_fu_716_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        icmp_ln27_reg_1123 <= icmp_ln27_fu_747_p2;
        icmp_ln29_reg_1133 <= icmp_ln29_fu_757_p2;
        sub_ln30_reg_1142 <= sub_ln30_fu_767_p2;
        sub_ln33_reg_1137 <= sub_ln33_fu_762_p2;
        third_crossing_reg_1127 <= third_crossing_fu_752_p2;
        zext_ln22_reg_1118[1 : 0] <= zext_ln22_fu_744_p1[1 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        icmp_ln33_reg_1147 <= icmp_ln33_fu_772_p2;
        icmp_ln49_reg_1164 <= icmp_ln49_fu_791_p2;
        sub42_reg_1159 <= sub42_fu_785_p2;
        temp_blk_1_load_reg_1168 <= temp_blk_1_fu_176;
        temp_blk_2_load_reg_1173 <= temp_blk_2_fu_180;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_j_out_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state47))) begin
        j_loc_fu_168 <= grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_j_out;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        mul_ln16_reg_972 <= grp_fu_336_p2;
        select_ln18_reg_967 <= select_ln18_fu_428_p3;
        tmp_10_cast_reg_977 <= {{grp_fu_336_p2[63:34]}};
        tmp_reg_962 <= add_ln317_fu_404_p2[32'd8];
        trunc_ln342_reg_957 <= trunc_ln342_fu_396_p1;
        xs_sign_reg_952 <= data_fu_377_p1[32'd31];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        mul_reg_1098 <= grp_fu_322_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_second_crossing_2_out_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state47))) begin
        second_crossing_2_loc_fu_160 <= grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_second_crossing_2_out;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state35)) begin
        select_ln16_reg_988 <= select_ln16_fu_520_p3;
        val_reg_982 <= val_fu_498_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        targetBlock_reg_1178 <= grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln20_1_reg_1058 == 1'd1) & (icmp_ln20_reg_938 == 1'd1) & (1'b0 == ap_block_state38) & (1'b1 == ap_CS_fsm_state38))) begin
        temp_blk_1_fu_176 <= temp_blk_4_fu_657_p1;
        temp_blk_2_fu_180 <= temp_blk_5_fu_669_p1;
        temp_blk_fu_172 <= temp_blk_3_fu_644_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state48)) begin
        third_crossing_2_reg_1191 <= third_crossing_2_fu_806_p2;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state38)) begin
        ap_ST_fsm_state38_blk = 1'b1;
    end else begin
        ap_ST_fsm_state38_blk = 1'b0;
    end
end

assign ap_ST_fsm_state39_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state45)) begin
        ap_ST_fsm_state45_blk = 1'b1;
    end else begin
        ap_ST_fsm_state45_blk = 1'b0;
    end
end

always @ (*) begin
    if ((segment_length_stream_TREADY_int_regslice == 1'b0)) begin
        ap_ST_fsm_state46_blk = 1'b1;
    end else begin
        ap_ST_fsm_state46_blk = 1'b0;
    end
end

always @ (*) begin
    if ((grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_ap_done == 1'b0)) begin
        ap_ST_fsm_state47_blk = 1'b1;
    end else begin
        ap_ST_fsm_state47_blk = 1'b0;
    end
end

assign ap_ST_fsm_state48_blk = 1'b0;

always @ (*) begin
    if ((segment_length_stream_TREADY_int_regslice == 1'b0)) begin
        ap_ST_fsm_state49_blk = 1'b1;
    end else begin
        ap_ST_fsm_state49_blk = 1'b0;
    end
end

assign ap_ST_fsm_state4_blk = 1'b0;

always @ (*) begin
    if ((1'b1 == ap_block_state50)) begin
        ap_ST_fsm_state50_blk = 1'b1;
    end else begin
        ap_ST_fsm_state50_blk = 1'b0;
    end
end

assign ap_ST_fsm_state51_blk = 1'b0;

always @ (*) begin
    if ((segment_length_stream_TREADY_int_regslice == 1'b0)) begin
        ap_ST_fsm_state52_blk = 1'b1;
    end else begin
        ap_ST_fsm_state52_blk = 1'b0;
    end
end

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((1'b0 == ap_block_state50) & (1'b1 == ap_CS_fsm_state50))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((((1'd1 == and_ln25_reg_1114) & (icmp_ln30_fu_781_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state45) & (icmp_ln29_reg_1133 == 1'd1) & (icmp_ln27_reg_1123 == 1'd0)) | ((1'b1 == ap_CS_fsm_state45) & (((1'd1 == and_ln25_reg_1114) & (icmp_ln33_fu_772_p2 == 1'd1) & (icmp_ln29_reg_1133 == 1'd0) & (icmp_ln27_reg_1123 == 1'd0)) | ((1'd1 == and_ln25_reg_1114) & (icmp_ln30_fu_781_p2 == 1'd1) & (icmp_ln29_reg_1133 == 1'd1) & (icmp_ln27_reg_1123 == 1'd0)))))) begin
        ap_phi_mux_first_crossing_1_phi_fu_273_p8 = first_crossing_fu_200;
    end else begin
        ap_phi_mux_first_crossing_1_phi_fu_273_p8 = first_crossing_1_reg_270;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state45)) begin
        if ((1'b1 == ap_condition_404)) begin
            ap_phi_mux_second_crossing_1_phi_fu_259_p8 = third_crossing_reg_1127;
        end else if ((1'b1 == ap_condition_394)) begin
            ap_phi_mux_second_crossing_1_phi_fu_259_p8 = second_crossing_fu_196;
        end else begin
            ap_phi_mux_second_crossing_1_phi_fu_259_p8 = second_crossing_1_reg_256;
        end
    end else begin
        ap_phi_mux_second_crossing_1_phi_fu_259_p8 = second_crossing_1_reg_256;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state50) & (1'b1 == ap_CS_fsm_state50))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln20_1_reg_1058 == 1'd1) & (icmp_ln20_reg_938 == 1'd1) & (1'b1 == ap_CS_fsm_state38))) begin
        blk_stream_TDATA_blk_n = blk_stream_TVALID_int_regslice;
    end else begin
        blk_stream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_predicate_op191_read_state38 == 1'b1) & (1'b0 == ap_block_state38) & (1'b1 == ap_CS_fsm_state38))) begin
        blk_stream_TREADY_int_regslice = 1'b1;
    end else begin
        blk_stream_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_fu_322_ce = grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_grp_fu_322_p_ce;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state41) | ((1'b0 == ap_block_state38) & (1'b1 == ap_CS_fsm_state38)))) begin
        grp_fu_322_ce = 1'b1;
    end else begin
        grp_fu_322_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_fu_322_p0 = grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_grp_fu_322_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_fu_322_p0 = prev_element_fu_188;
    end else begin
        grp_fu_322_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_fu_322_p1 = grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_grp_fu_322_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        grp_fu_322_p1 = temp_blk_3_fu_644_p1;
    end else begin
        grp_fu_322_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_fu_331_ce = grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_grp_fu_331_p_ce;
    end else begin
        grp_fu_331_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_fu_331_opcode = grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_grp_fu_331_p_opcode;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_331_opcode = 5'd5;
    end else begin
        grp_fu_331_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_fu_331_p0 = grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_grp_fu_331_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_331_p0 = mul_reg_1098;
    end else begin
        grp_fu_331_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        grp_fu_331_p1 = grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_grp_fu_331_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state42)) begin
        grp_fu_331_p1 = 32'd0;
    end else begin
        grp_fu_331_p1 = 'bx;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        grp_fu_349_ap_start = 1'b1;
    end else begin
        grp_fu_349_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state52) | (1'b1 == ap_CS_fsm_state49) | (1'b1 == ap_CS_fsm_state46) | ((1'b1 == ap_CS_fsm_state38) & ((icmp_ln20_1_reg_1058 == 1'd0) | (icmp_ln20_reg_938 == 1'd0))) | ((1'b1 == ap_CS_fsm_state50) & (((((icmp_ln20_1_reg_1058 == 1'd1) & (icmp_ln20_reg_938 == 1'd1) & (icmp_ln29_reg_1133 == 1'd1)) | ((icmp_ln20_1_reg_1058 == 1'd1) & (icmp_ln20_reg_938 == 1'd1) & (icmp_ln33_reg_1147 == 1'd1))) | ((icmp_ln20_1_reg_1058 == 1'd1) & (icmp_ln20_reg_938 == 1'd1) & (icmp_ln27_reg_1123 == 1'd1))) | ((icmp_ln20_1_reg_1058 == 1'd1) & (icmp_ln20_reg_938 == 1'd1) & (1'd0 == and_ln25_reg_1114)))) | ((1'd1 == and_ln25_reg_1114) & (1'b1 == ap_CS_fsm_state45) & (icmp_ln33_fu_772_p2 == 1'd0) & (icmp_ln29_reg_1133 == 1'd0) & (icmp_ln27_reg_1123 == 1'd0)))) begin
        segment_length_stream_TDATA_blk_n = segment_length_stream_TREADY_int_regslice;
    end else begin
        segment_length_stream_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state49) & (segment_length_stream_TREADY_int_regslice == 1'b1))) begin
        segment_length_stream_TDATA_int_regslice = segment_length_1_fu_862_p2;
    end else if (((1'b0 == ap_block_state45) & (ap_predicate_op233_write_state45 == 1'b1) & (1'b1 == ap_CS_fsm_state45))) begin
        segment_length_stream_TDATA_int_regslice = segment_length_fu_776_p2;
    end else if (((ap_predicate_op205_write_state38 == 1'b1) & (1'b0 == ap_block_state38) & (1'b1 == ap_CS_fsm_state38))) begin
        segment_length_stream_TDATA_int_regslice = 32'd4294967295;
    end else begin
        segment_length_stream_TDATA_int_regslice = 'bx;
    end
end

always @ (*) begin
    if ((((ap_predicate_op205_write_state38 == 1'b1) & (1'b0 == ap_block_state38) & (1'b1 == ap_CS_fsm_state38)) | ((1'b0 == ap_block_state45) & (ap_predicate_op233_write_state45 == 1'b1) & (1'b1 == ap_CS_fsm_state45)) | ((1'b1 == ap_CS_fsm_state49) & (segment_length_stream_TREADY_int_regslice == 1'b1)))) begin
        segment_length_stream_TVALID_int_regslice = 1'b1;
    end else begin
        segment_length_stream_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            if (((icmp_ln20_reg_938 == 1'd1) & (1'b1 == ap_CS_fsm_state36))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            if (((1'b0 == ap_block_state38) & (1'b1 == ap_CS_fsm_state38) & ((icmp_ln20_1_reg_1058 == 1'd0) | (icmp_ln20_reg_938 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end else if (((icmp_ln20_1_reg_1058 == 1'd1) & (icmp_ln20_reg_938 == 1'd1) & (1'b0 == ap_block_state38) & (1'b1 == ap_CS_fsm_state38))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            if (((1'b0 == ap_block_state45) & (1'b1 == ap_CS_fsm_state45) & (((((icmp_ln49_fu_791_p2 == 1'd1) & (icmp_ln33_fu_772_p2 == 1'd1)) | ((icmp_ln49_fu_791_p2 == 1'd1) & (icmp_ln29_reg_1133 == 1'd1))) | ((icmp_ln49_fu_791_p2 == 1'd1) & (icmp_ln27_reg_1123 == 1'd1))) | ((icmp_ln49_fu_791_p2 == 1'd1) & (1'd0 == and_ln25_reg_1114))))) begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end else if (((1'b0 == ap_block_state45) & (1'b1 == ap_CS_fsm_state45) & (((((icmp_ln49_fu_791_p2 == 1'd0) & (icmp_ln33_fu_772_p2 == 1'd1)) | ((icmp_ln49_fu_791_p2 == 1'd0) & (icmp_ln29_reg_1133 == 1'd1))) | ((icmp_ln49_fu_791_p2 == 1'd0) & (icmp_ln27_reg_1123 == 1'd1))) | ((icmp_ln49_fu_791_p2 == 1'd0) & (1'd0 == and_ln25_reg_1114))))) begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end else if (((1'd1 == and_ln25_reg_1114) & (1'b0 == ap_block_state45) & (1'b1 == ap_CS_fsm_state45) & (icmp_ln33_fu_772_p2 == 1'd0) & (icmp_ln29_reg_1133 == 1'd0) & (icmp_ln27_reg_1123 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end
        end
        ap_ST_fsm_state46 : begin
            if (((1'b1 == ap_CS_fsm_state46) & (segment_length_stream_TREADY_int_regslice == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end
        end
        ap_ST_fsm_state47 : begin
            if (((grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state47))) begin
                ap_NS_fsm = ap_ST_fsm_state48;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end
        end
        ap_ST_fsm_state48 : begin
            if (((1'b1 == ap_CS_fsm_state48) & ((targetBlock_reg_1178 == 1'd1) | (icmp_ln49_reg_1164 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end
        end
        ap_ST_fsm_state49 : begin
            if (((1'b1 == ap_CS_fsm_state49) & (segment_length_stream_TREADY_int_regslice == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end
        end
        ap_ST_fsm_state50 : begin
            if (((1'b0 == ap_block_state50) & (1'b1 == ap_CS_fsm_state50))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state52 : begin
            if (((1'b1 == ap_CS_fsm_state52) & (segment_length_stream_TREADY_int_regslice == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state52;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln16_fu_355_p2 = (n_read_reg_884 + 32'd2);

assign add_ln317_fu_404_p2 = ($signed(zext_ln317_fu_400_p1) + $signed(9'd385));

assign and_ln25_fu_738_p2 = (first_block_0227_reg_242 & and_ln26_fu_732_p2);

assign and_ln26_fu_732_p2 = (or_ln26_fu_728_p2 & grp_fu_331_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state48 = ap_CS_fsm[32'd47];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state52 = ap_CS_fsm[32'd51];

always @ (*) begin
    ap_block_state38 = (((ap_predicate_op205_write_state38 == 1'b1) & (segment_length_stream_TREADY_int_regslice == 1'b0)) | ((ap_predicate_op191_read_state38 == 1'b1) & (blk_stream_TVALID_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_block_state45 = ((ap_predicate_op233_write_state45 == 1'b1) & (segment_length_stream_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state45_ignore_call2 = ((ap_predicate_op233_write_state45 == 1'b1) & (segment_length_stream_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state50 = ((regslice_both_segment_length_stream_V_data_V_U_apdone_blk == 1'b1) | ((ap_predicate_op266_write_state50 == 1'b1) & (segment_length_stream_TREADY_int_regslice == 1'b0)));
end

always @ (*) begin
    ap_condition_394 = (((1'd1 == and_ln25_reg_1114) & (icmp_ln33_fu_772_p2 == 1'd1) & (icmp_ln29_reg_1133 == 1'd0) & (icmp_ln27_reg_1123 == 1'd0)) | ((1'd1 == and_ln25_reg_1114) & (icmp_ln30_fu_781_p2 == 1'd1) & (icmp_ln29_reg_1133 == 1'd1) & (icmp_ln27_reg_1123 == 1'd0)));
end

always @ (*) begin
    ap_condition_404 = ((1'd1 == and_ln25_reg_1114) & (icmp_ln30_fu_781_p2 == 1'd0) & (icmp_ln29_reg_1133 == 1'd1) & (icmp_ln27_reg_1123 == 1'd0));
end

always @ (*) begin
    ap_predicate_op191_read_state38 = ((icmp_ln20_1_reg_1058 == 1'd1) & (icmp_ln20_reg_938 == 1'd1));
end

always @ (*) begin
    ap_predicate_op205_write_state38 = ((icmp_ln20_1_reg_1058 == 1'd0) | (icmp_ln20_reg_938 == 1'd0));
end

always @ (*) begin
    ap_predicate_op233_write_state45 = ((1'd1 == and_ln25_reg_1114) & (icmp_ln33_fu_772_p2 == 1'd0) & (icmp_ln29_reg_1133 == 1'd0) & (icmp_ln27_reg_1123 == 1'd0));
end

always @ (*) begin
    ap_predicate_op266_write_state50 = (((((icmp_ln20_1_reg_1058 == 1'd1) & (icmp_ln20_reg_938 == 1'd1) & (icmp_ln29_reg_1133 == 1'd1)) | ((icmp_ln20_1_reg_1058 == 1'd1) & (icmp_ln20_reg_938 == 1'd1) & (icmp_ln33_reg_1147 == 1'd1))) | ((icmp_ln20_1_reg_1058 == 1'd1) & (icmp_ln20_reg_938 == 1'd1) & (icmp_ln27_reg_1123 == 1'd1))) | ((icmp_ln20_1_reg_1058 == 1'd1) & (icmp_ln20_reg_938 == 1'd1) & (1'd0 == and_ln25_reg_1114)));
end

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign bitcast_ln26_fu_699_p1 = mul_reg_1098;

assign blk_count_2_fu_631_p2 = (blk_count_fu_192 + 30'd1);

assign blk_stream_TREADY = regslice_both_blk_stream_U_ack_in;

assign cmp4_fu_567_p2 = ((empty_22_fu_563_p1 == 3'd0) ? 1'b1 : 1'b0);

assign cond_fu_573_p3 = ((cmp4_fu_567_p2[0:0] == 1'b1) ? 2'd3 : empty_fu_559_p1);

assign data_fu_377_p1 = dc_reg_942;

assign element_idx_3_fu_833_p2 = (zext_ln22_reg_1118 + element_idx_fu_184);

assign elements_in_block_fu_692_p3 = ((icmp_ln22_fu_688_p2[0:0] == 1'b1) ? cond_reg_1045 : 2'd3);

assign empty_22_fu_563_p1 = grp_fu_349_p2[2:0];

assign empty_fu_559_p1 = grp_fu_349_p2[1:0];

assign grp_fu_336_p1 = 65'd5726623062;

assign grp_fu_349_p1 = 32'd3;

assign grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_ap_start = grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_ap_start_reg;

assign icmp_ln20_1_fu_613_p2 = (($signed(zext_ln20_1_fu_609_p1) < $signed(select_ln16_1_reg_1000)) ? 1'b1 : 1'b0);

assign icmp_ln20_fu_368_p2 = (($signed(n_read_reg_884) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign icmp_ln22_fu_688_p2 = ((zext_ln20_1_reg_1053 == sub2_reg_1005) ? 1'b1 : 1'b0);

assign icmp_ln26_1_fu_722_p2 = ((trunc_ln26_fu_712_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln26_fu_716_p2 = ((tmp_1_fu_702_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln27_fu_747_p2 = ((first_crossing_fu_200 == 32'd4294967295) ? 1'b1 : 1'b0);

assign icmp_ln29_fu_757_p2 = ((second_crossing_fu_196 == 32'd4294967295) ? 1'b1 : 1'b0);

assign icmp_ln30_fu_781_p2 = (($signed(sub_ln30_reg_1142) < $signed(result_reg_993)) ? 1'b1 : 1'b0);

assign icmp_ln33_fu_772_p2 = (($signed(sub_ln33_reg_1137) < $signed(result_reg_993)) ? 1'b1 : 1'b0);

assign icmp_ln49_fu_791_p2 = ((sub42_fu_785_p2 == 2'd0) ? 1'b1 : 1'b0);

assign lshr_ln18_fu_466_p2 = zext_ln15_fu_455_p1 >> zext_ln18_fu_462_p1;

assign mantissa_fu_446_p4 = {{{{1'd1}, {trunc_ln342_reg_957}}}, {1'd0}};

assign or_ln26_fu_728_p2 = (icmp_ln26_reg_1104 | icmp_ln26_1_reg_1109);

assign prev_element_1_fu_814_p7 = 'bx;

assign result_2_fu_526_p2 = (32'd0 - val_reg_982);

assign result_fu_531_p3 = ((xs_sign_reg_952[0:0] == 1'b1) ? result_2_fu_526_p2 : val_reg_982);

assign segment_length_1_fu_862_p2 = (sub_ln59_fu_857_p2 + zext_ln12_fu_851_p1);

assign segment_length_fu_776_p2 = (zext_ln20_reg_1071 - first_crossing_fu_200);

assign segment_length_stream_TVALID = regslice_both_segment_length_stream_V_data_V_U_vld_out;

assign select_ln16_1_fu_546_p3 = ((tmp_5_reg_932[0:0] == 1'b1) ? sub_ln16_1_fu_540_p2 : zext_ln16_fu_537_p1);

assign select_ln16_fu_520_p3 = ((tmp_5_reg_932[0:0] == 1'b1) ? tmp_9_cast_fu_510_p4 : tmp_10_cast_reg_977);

assign select_ln18_fu_428_p3 = ((tmp_fu_410_p3[0:0] == 1'b1) ? sext_ln18_fu_424_p1 : add_ln317_fu_404_p2);

assign sext_ln18_1_fu_459_p1 = $signed(select_ln18_reg_967);

assign sext_ln18_fu_424_p1 = $signed(sub_ln18_fu_418_p2);

assign shl_ln18_fu_472_p2 = zext_ln15_fu_455_p1 << zext_ln18_fu_462_p1;

assign sub2_fu_553_p2 = ($signed(select_ln16_1_fu_546_p3) + $signed(31'd2147483647));

assign sub42_fu_785_p2 = (elements_in_block_reg_1091 + 2'd3);

assign sub_ln16_1_fu_540_p2 = (31'd0 - zext_ln16_fu_537_p1);

assign sub_ln16_fu_505_p2 = (65'd0 - mul_ln16_reg_972);

assign sub_ln18_fu_418_p2 = (8'd127 - xs_exp_fu_388_p3);

assign sub_ln30_fu_767_p2 = (third_crossing_fu_752_p2 - first_crossing_fu_200);

assign sub_ln33_fu_762_p2 = (third_crossing_fu_752_p2 - second_crossing_fu_196);

assign sub_ln59_fu_857_p2 = (zext_ln59_fu_854_p1 - first_crossing_2_loc_fu_164);

assign temp_blk_3_fu_644_p1 = trunc_ln21_fu_640_p1;

assign temp_blk_4_fu_657_p1 = tmp_3_fu_649_p3;

assign temp_blk_5_fu_669_p1 = tmp_4_fu_661_p3;

assign third_crossing_2_fu_806_p2 = (element_idx_fu_184 + 31'd1);

assign third_crossing_fu_752_p2 = ($signed(zext_ln20_reg_1071) + $signed(32'd4294967295));

assign tmp_1_fu_702_p4 = {{bitcast_ln26_fu_699_p1[30:23]}};

assign tmp_3_fu_649_p3 = {{blk_stream_TDATA_int_regslice[63:32]}};

assign tmp_4_fu_661_p3 = {{blk_stream_TDATA_int_regslice[95:64]}};

assign tmp_7_fu_478_p4 = {{lshr_ln18_fu_466_p2[55:24]}};

assign tmp_8_fu_488_p4 = {{shl_ln18_fu_472_p2[55:24]}};

assign tmp_9_cast_fu_510_p4 = {{sub_ln16_fu_505_p2[63:34]}};

assign tmp_fu_410_p3 = add_ln317_fu_404_p2[32'd8];

assign trunc_ln21_fu_640_p1 = blk_stream_TDATA_int_regslice[31:0];

assign trunc_ln26_fu_712_p1 = bitcast_ln26_fu_699_p1[22:0];

assign trunc_ln342_fu_396_p1 = data_fu_377_p1[22:0];

assign val_fu_498_p3 = ((tmp_reg_962[0:0] == 1'b1) ? tmp_7_fu_478_p4 : tmp_8_fu_488_p4);

assign xs_exp_fu_388_p3 = {{data_fu_377_p1[30:23]}};

assign zext_ln12_fu_851_p1 = j_loc_fu_168;

assign zext_ln15_fu_455_p1 = mantissa_fu_446_p4;

assign zext_ln16_fu_537_p1 = select_ln16_reg_988;

assign zext_ln18_fu_462_p1 = $unsigned(sext_ln18_1_fu_459_p1);

assign zext_ln20_1_fu_609_p1 = blk_count_fu_192;

assign zext_ln20_fu_627_p1 = element_idx_fu_184;

assign zext_ln22_fu_744_p1 = elements_in_block_reg_1091;

assign zext_ln317_fu_400_p1 = xs_exp_fu_388_p3;

assign zext_ln59_fu_854_p1 = third_crossing_2_reg_1191;

always @ (posedge ap_clk) begin
    zext_ln20_1_reg_1053[30] <= 1'b0;
    zext_ln20_reg_1071[31] <= 1'b0;
    zext_ln22_reg_1118[30:2] <= 29'b00000000000000000000000000000;
end


reg find_kernel_block = 0;
// synthesis translate_off
`include "zero_cross_hls_deadlock_kernel_monitor_top.vh"
// synthesis translate_on

endmodule //zero_cross

