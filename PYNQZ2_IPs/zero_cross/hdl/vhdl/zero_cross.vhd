-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity zero_cross is
generic (
    C_S_AXI_CTRL_ADDR_WIDTH : INTEGER := 5;
    C_S_AXI_CTRL_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    blk_stream_TDATA : IN STD_LOGIC_VECTOR (95 downto 0);
    blk_stream_TVALID : IN STD_LOGIC;
    blk_stream_TREADY : OUT STD_LOGIC;
    segment_length_stream_TDATA : OUT STD_LOGIC_VECTOR (31 downto 0);
    segment_length_stream_TVALID : OUT STD_LOGIC;
    segment_length_stream_TREADY : IN STD_LOGIC;
    segment_length_stream_TKEEP : OUT STD_LOGIC_VECTOR (3 downto 0);
    segment_length_stream_TSTRB : OUT STD_LOGIC_VECTOR (3 downto 0);
    segment_length_stream_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    s_axi_CTRL_AWVALID : IN STD_LOGIC;
    s_axi_CTRL_AWREADY : OUT STD_LOGIC;
    s_axi_CTRL_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_ADDR_WIDTH-1 downto 0);
    s_axi_CTRL_WVALID : IN STD_LOGIC;
    s_axi_CTRL_WREADY : OUT STD_LOGIC;
    s_axi_CTRL_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH-1 downto 0);
    s_axi_CTRL_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH/8-1 downto 0);
    s_axi_CTRL_ARVALID : IN STD_LOGIC;
    s_axi_CTRL_ARREADY : OUT STD_LOGIC;
    s_axi_CTRL_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_ADDR_WIDTH-1 downto 0);
    s_axi_CTRL_RVALID : OUT STD_LOGIC;
    s_axi_CTRL_RREADY : IN STD_LOGIC;
    s_axi_CTRL_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH-1 downto 0);
    s_axi_CTRL_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_CTRL_BVALID : OUT STD_LOGIC;
    s_axi_CTRL_BREADY : IN STD_LOGIC;
    s_axi_CTRL_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of zero_cross is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "zero_cross_zero_cross,hls_ip_2024_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.912000,HLS_SYN_LAT=5637144614,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=2412,HLS_SYN_LUT=3419,HLS_VERSION=2024_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (51 downto 0) := "0000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (51 downto 0) := "0000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (51 downto 0) := "0000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (51 downto 0) := "0000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (51 downto 0) := "0000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (51 downto 0) := "0000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (51 downto 0) := "0000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (51 downto 0) := "0001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (51 downto 0) := "0010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (51 downto 0) := "0100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (51 downto 0) := "1000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant C_S_AXI_DATA_WIDTH : INTEGER := 32;
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv30_0 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000000";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv32_447A0000 : STD_LOGIC_VECTOR (31 downto 0) := "01000100011110100000000000000000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv65_155555556 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000101010101010101010101010101010110";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv9_181 : STD_LOGIC_VECTOR (8 downto 0) := "110000001";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv8_7F : STD_LOGIC_VECTOR (7 downto 0) := "01111111";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv65_0 : STD_LOGIC_VECTOR (64 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv31_7FFFFFFF : STD_LOGIC_VECTOR (30 downto 0) := "1111111111111111111111111111111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv30_1 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000001";
    constant ap_const_lv96_20 : STD_LOGIC_VECTOR (95 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_const_lv96_40 : STD_LOGIC_VECTOR (95 downto 0) := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (51 downto 0) := "0000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal n : STD_LOGIC_VECTOR (31 downto 0);
    signal Tms : STD_LOGIC_VECTOR (31 downto 0);
    signal blk_stream_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal icmp_ln20_reg_938 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln20_1_reg_1058 : STD_LOGIC_VECTOR (0 downto 0);
    signal segment_length_stream_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal and_ln25_reg_1114 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln27_reg_1123 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln29_reg_1133 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln33_fu_772_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal ap_CS_fsm_state49 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state49 : signal is "none";
    signal ap_CS_fsm_state50 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal icmp_ln33_reg_1147 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal Tms_read_reg_879 : STD_LOGIC_VECTOR (31 downto 0);
    signal n_read_reg_884 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln16_fu_355_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln16_reg_927 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal tmp_5_reg_932 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln20_fu_368_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_326_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal dc_reg_942 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal xs_sign_reg_952 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal trunc_ln342_fu_396_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln342_reg_957 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_fu_410_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_962 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln18_fu_428_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln18_reg_967 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_336_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal mul_ln16_reg_972 : STD_LOGIC_VECTOR (64 downto 0);
    signal tmp_10_cast_reg_977 : STD_LOGIC_VECTOR (29 downto 0);
    signal val_fu_498_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal val_reg_982 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal select_ln16_fu_520_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal select_ln16_reg_988 : STD_LOGIC_VECTOR (29 downto 0);
    signal result_fu_531_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal result_reg_993 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal select_ln16_1_fu_546_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal select_ln16_1_reg_1000 : STD_LOGIC_VECTOR (30 downto 0);
    signal sub2_fu_553_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal sub2_reg_1005 : STD_LOGIC_VECTOR (30 downto 0);
    signal cond_fu_573_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal cond_reg_1045 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln20_1_fu_609_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln20_1_reg_1053 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal icmp_ln20_1_fu_613_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln20_fu_627_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln20_reg_1071 : STD_LOGIC_VECTOR (31 downto 0);
    signal blk_count_2_fu_631_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal blk_count_2_reg_1077 : STD_LOGIC_VECTOR (29 downto 0);
    signal temp_blk_3_fu_644_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_blk_3_reg_1085 : STD_LOGIC_VECTOR (31 downto 0);
    signal elements_in_block_fu_692_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal elements_in_block_reg_1091 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_322_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_reg_1098 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal icmp_ln26_fu_716_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln26_reg_1104 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal icmp_ln26_1_fu_722_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln26_1_reg_1109 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln25_fu_738_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal zext_ln22_fu_744_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln22_reg_1118 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal icmp_ln27_fu_747_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal third_crossing_fu_752_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal third_crossing_reg_1127 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln29_fu_757_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln33_fu_762_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln33_reg_1137 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln30_fu_767_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln30_reg_1142 : STD_LOGIC_VECTOR (31 downto 0);
    signal segment_length_fu_776_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub42_fu_785_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal sub42_reg_1159 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln49_fu_791_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln49_reg_1164 : STD_LOGIC_VECTOR (0 downto 0);
    signal temp_blk_1_load_reg_1168 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_blk_2_load_reg_1173 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_ap_return : STD_LOGIC_VECTOR (0 downto 0);
    signal targetBlock_reg_1178 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal third_crossing_2_fu_806_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal third_crossing_2_reg_1191 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state48 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state48 : signal is "none";
    signal segment_length_1_fu_862_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_ap_start : STD_LOGIC;
    signal grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_ap_done : STD_LOGIC;
    signal grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_ap_idle : STD_LOGIC;
    signal grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_ap_ready : STD_LOGIC;
    signal grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_j_out : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_j_out_ap_vld : STD_LOGIC;
    signal grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_first_crossing_2_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_first_crossing_2_out_ap_vld : STD_LOGIC;
    signal grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_second_crossing_2_out : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_second_crossing_2_out_ap_vld : STD_LOGIC;
    signal grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_grp_fu_322_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_grp_fu_322_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_grp_fu_322_p_ce : STD_LOGIC;
    signal grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_grp_fu_331_p_din0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_grp_fu_331_p_din1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_grp_fu_331_p_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_grp_fu_331_p_ce : STD_LOGIC;
    signal first_block_0227_reg_242 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal ap_phi_mux_second_crossing_1_phi_fu_259_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal second_crossing_1_reg_256 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_predicate_op233_write_state45 : BOOLEAN;
    signal ap_block_state45 : BOOLEAN;
    signal icmp_ln30_fu_781_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_first_crossing_1_phi_fu_273_p8 : STD_LOGIC_VECTOR (31 downto 0);
    signal first_crossing_1_reg_270 : STD_LOGIC_VECTOR (31 downto 0);
    signal second_crossing_3_reg_284 : STD_LOGIC_VECTOR (31 downto 0);
    signal first_crossing_3_reg_294 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state45_ignore_call2 : BOOLEAN;
    signal j_loc_fu_168 : STD_LOGIC_VECTOR (0 downto 0);
    signal first_crossing_2_loc_fu_164 : STD_LOGIC_VECTOR (31 downto 0);
    signal second_crossing_2_loc_fu_160 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_blk_fu_172 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_predicate_op191_read_state38 : BOOLEAN;
    signal ap_predicate_op205_write_state38 : BOOLEAN;
    signal ap_block_state38 : BOOLEAN;
    signal temp_blk_1_fu_176 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_blk_4_fu_657_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal temp_blk_2_fu_180 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal temp_blk_5_fu_669_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal element_idx_fu_184 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    signal element_idx_3_fu_833_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal prev_element_fu_188 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal prev_element_1_fu_814_p9 : STD_LOGIC_VECTOR (31 downto 0);
    signal blk_count_fu_192 : STD_LOGIC_VECTOR (29 downto 0) := "000000000000000000000000000000";
    signal second_crossing_fu_196 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal first_crossing_fu_200 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal grp_fu_322_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_322_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal grp_fu_331_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_331_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_336_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal grp_fu_349_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal data_fu_377_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xs_exp_fu_388_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln317_fu_400_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln317_fu_404_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln18_fu_418_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln18_fu_424_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal mantissa_fu_446_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal sext_ln18_1_fu_459_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln15_fu_455_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal zext_ln18_fu_462_p1 : STD_LOGIC_VECTOR (78 downto 0);
    signal lshr_ln18_fu_466_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal shl_ln18_fu_472_p2 : STD_LOGIC_VECTOR (78 downto 0);
    signal tmp_7_fu_478_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_488_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln16_fu_505_p2 : STD_LOGIC_VECTOR (64 downto 0);
    signal tmp_9_cast_fu_510_p4 : STD_LOGIC_VECTOR (29 downto 0);
    signal result_2_fu_526_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln16_fu_537_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal sub_ln16_1_fu_540_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal grp_fu_349_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal empty_22_fu_563_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal cmp4_fu_567_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_fu_559_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln21_fu_640_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_649_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_661_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln22_fu_688_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln26_fu_699_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_702_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln26_fu_712_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal or_ln26_fu_728_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_331_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln26_fu_732_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal prev_element_1_fu_814_p7 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln59_fu_854_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln59_fu_857_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln12_fu_851_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_322_ce : STD_LOGIC;
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal grp_fu_331_ce : STD_LOGIC;
    signal grp_fu_331_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_349_ap_start : STD_LOGIC;
    signal grp_fu_349_ap_done : STD_LOGIC;
    signal ap_predicate_op266_write_state50 : BOOLEAN;
    signal regslice_both_segment_length_stream_V_data_V_U_apdone_blk : STD_LOGIC;
    signal ap_block_state50 : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (51 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal ap_ST_fsm_state40_blk : STD_LOGIC;
    signal ap_ST_fsm_state41_blk : STD_LOGIC;
    signal ap_ST_fsm_state42_blk : STD_LOGIC;
    signal ap_ST_fsm_state43_blk : STD_LOGIC;
    signal ap_ST_fsm_state44_blk : STD_LOGIC;
    signal ap_ST_fsm_state45_blk : STD_LOGIC;
    signal ap_ST_fsm_state46_blk : STD_LOGIC;
    signal ap_ST_fsm_state47_blk : STD_LOGIC;
    signal ap_ST_fsm_state48_blk : STD_LOGIC;
    signal ap_ST_fsm_state49_blk : STD_LOGIC;
    signal ap_ST_fsm_state50_blk : STD_LOGIC;
    signal ap_ST_fsm_state51_blk : STD_LOGIC;
    signal ap_ST_fsm_state52_blk : STD_LOGIC;
    signal regslice_both_blk_stream_U_apdone_blk : STD_LOGIC;
    signal blk_stream_TDATA_int_regslice : STD_LOGIC_VECTOR (95 downto 0);
    signal blk_stream_TVALID_int_regslice : STD_LOGIC;
    signal blk_stream_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_blk_stream_U_ack_in : STD_LOGIC;
    signal segment_length_stream_TDATA_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal segment_length_stream_TVALID_int_regslice : STD_LOGIC;
    signal segment_length_stream_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_segment_length_stream_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_segment_length_stream_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_segment_length_stream_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_segment_length_stream_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_segment_length_stream_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_segment_length_stream_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_segment_length_stream_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_segment_length_stream_V_last_V_U_apdone_blk : STD_LOGIC;
    signal regslice_both_segment_length_stream_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_segment_length_stream_V_last_V_U_vld_out : STD_LOGIC;
    signal ap_condition_394 : BOOLEAN;
    signal ap_condition_404 : BOOLEAN;
    signal prev_element_1_fu_814_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal prev_element_1_fu_814_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal prev_element_1_fu_814_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component zero_cross_zero_cross_Pipeline_VITIS_LOOP_49_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        temp_blk_3 : IN STD_LOGIC_VECTOR (31 downto 0);
        first_crossing_1 : IN STD_LOGIC_VECTOR (31 downto 0);
        second_crossing_1 : IN STD_LOGIC_VECTOR (31 downto 0);
        sub42 : IN STD_LOGIC_VECTOR (1 downto 0);
        temp_blk_2_load : IN STD_LOGIC_VECTOR (31 downto 0);
        temp_blk_1_load : IN STD_LOGIC_VECTOR (31 downto 0);
        element_idx : IN STD_LOGIC_VECTOR (30 downto 0);
        result : IN STD_LOGIC_VECTOR (31 downto 0);
        zext_ln20 : IN STD_LOGIC_VECTOR (30 downto 0);
        j_out : OUT STD_LOGIC_VECTOR (0 downto 0);
        j_out_ap_vld : OUT STD_LOGIC;
        first_crossing_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        first_crossing_2_out_ap_vld : OUT STD_LOGIC;
        second_crossing_2_out : OUT STD_LOGIC_VECTOR (31 downto 0);
        second_crossing_2_out_ap_vld : OUT STD_LOGIC;
        ap_return : OUT STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_322_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_322_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_322_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_322_p_ce : OUT STD_LOGIC;
        grp_fu_331_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_331_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
        grp_fu_331_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
        grp_fu_331_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
        grp_fu_331_p_ce : OUT STD_LOGIC );
    end component;


    component zero_cross_fmul_32ns_32ns_32_4_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component zero_cross_fdiv_32ns_32ns_32_16_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component zero_cross_fcmp_32ns_32ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component zero_cross_mul_32s_34ns_65_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (33 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (64 downto 0) );
    end component;


    component zero_cross_srem_32ns_3ns_3_36_seq_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        start : IN STD_LOGIC;
        done : OUT STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component zero_cross_sparsemux_7_2_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        CASE0 : STD_LOGIC_VECTOR (1 downto 0);
        din0_WIDTH : INTEGER;
        CASE1 : STD_LOGIC_VECTOR (1 downto 0);
        din1_WIDTH : INTEGER;
        CASE2 : STD_LOGIC_VECTOR (1 downto 0);
        din2_WIDTH : INTEGER;
        def_WIDTH : INTEGER;
        sel_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        def : IN STD_LOGIC_VECTOR (31 downto 0);
        sel : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component zero_cross_CTRL_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        n : OUT STD_LOGIC_VECTOR (31 downto 0);
        Tms : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component zero_cross_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304 : component zero_cross_zero_cross_Pipeline_VITIS_LOOP_49_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_ap_start,
        ap_done => grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_ap_done,
        ap_idle => grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_ap_idle,
        ap_ready => grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_ap_ready,
        temp_blk_3 => temp_blk_3_reg_1085,
        first_crossing_1 => first_crossing_1_reg_270,
        second_crossing_1 => second_crossing_1_reg_256,
        sub42 => sub42_reg_1159,
        temp_blk_2_load => temp_blk_2_load_reg_1173,
        temp_blk_1_load => temp_blk_1_load_reg_1168,
        element_idx => element_idx_fu_184,
        result => result_reg_993,
        zext_ln20 => element_idx_fu_184,
        j_out => grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_j_out,
        j_out_ap_vld => grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_j_out_ap_vld,
        first_crossing_2_out => grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_first_crossing_2_out,
        first_crossing_2_out_ap_vld => grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_first_crossing_2_out_ap_vld,
        second_crossing_2_out => grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_second_crossing_2_out,
        second_crossing_2_out_ap_vld => grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_second_crossing_2_out_ap_vld,
        ap_return => grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_ap_return,
        grp_fu_322_p_din0 => grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_grp_fu_322_p_din0,
        grp_fu_322_p_din1 => grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_grp_fu_322_p_din1,
        grp_fu_322_p_dout0 => grp_fu_322_p2,
        grp_fu_322_p_ce => grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_grp_fu_322_p_ce,
        grp_fu_331_p_din0 => grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_grp_fu_331_p_din0,
        grp_fu_331_p_din1 => grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_grp_fu_331_p_din1,
        grp_fu_331_p_opcode => grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_grp_fu_331_p_opcode,
        grp_fu_331_p_dout0 => grp_fu_331_p2,
        grp_fu_331_p_ce => grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_grp_fu_331_p_ce);

    CTRL_s_axi_U : component zero_cross_CTRL_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CTRL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CTRL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_CTRL_AWVALID,
        AWREADY => s_axi_CTRL_AWREADY,
        AWADDR => s_axi_CTRL_AWADDR,
        WVALID => s_axi_CTRL_WVALID,
        WREADY => s_axi_CTRL_WREADY,
        WDATA => s_axi_CTRL_WDATA,
        WSTRB => s_axi_CTRL_WSTRB,
        ARVALID => s_axi_CTRL_ARVALID,
        ARREADY => s_axi_CTRL_ARREADY,
        ARADDR => s_axi_CTRL_ARADDR,
        RVALID => s_axi_CTRL_RVALID,
        RREADY => s_axi_CTRL_RREADY,
        RDATA => s_axi_CTRL_RDATA,
        RRESP => s_axi_CTRL_RRESP,
        BVALID => s_axi_CTRL_BVALID,
        BREADY => s_axi_CTRL_BREADY,
        BRESP => s_axi_CTRL_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        n => n,
        Tms => Tms,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    fmul_32ns_32ns_32_4_max_dsp_1_U15 : component zero_cross_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_322_p0,
        din1 => grp_fu_322_p1,
        ce => grp_fu_322_ce,
        dout => grp_fu_322_p2);

    fdiv_32ns_32ns_32_16_no_dsp_1_U16 : component zero_cross_fdiv_32ns_32ns_32_16_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 16,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => ap_const_lv32_447A0000,
        din1 => Tms_read_reg_879,
        ce => ap_const_logic_1,
        dout => grp_fu_326_p2);

    fcmp_32ns_32ns_1_2_no_dsp_1_U17 : component zero_cross_fcmp_32ns_32ns_1_2_no_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 1)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_331_p0,
        din1 => grp_fu_331_p1,
        ce => grp_fu_331_ce,
        opcode => grp_fu_331_opcode,
        dout => grp_fu_331_p2);

    mul_32s_34ns_65_2_1_U18 : component zero_cross_mul_32s_34ns_65_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 34,
        dout_WIDTH => 65)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => add_ln16_reg_927,
        din1 => grp_fu_336_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_336_p2);

    srem_32ns_3ns_3_36_seq_1_U19 : component zero_cross_srem_32ns_3ns_3_36_seq_1
    generic map (
        ID => 1,
        NUM_STAGE => 36,
        din0_WIDTH => 32,
        din1_WIDTH => 3,
        dout_WIDTH => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        start => grp_fu_349_ap_start,
        done => grp_fu_349_ap_done,
        din0 => n,
        din1 => grp_fu_349_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_349_p2);

    sparsemux_7_2_32_1_1_U20 : component zero_cross_sparsemux_7_2_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        CASE0 => "01",
        din0_WIDTH => 32,
        CASE1 => "10",
        din1_WIDTH => 32,
        CASE2 => "11",
        din2_WIDTH => 32,
        def_WIDTH => 32,
        sel_WIDTH => 2,
        dout_WIDTH => 32)
    port map (
        din0 => temp_blk_fu_172,
        din1 => temp_blk_1_fu_176,
        din2 => temp_blk_2_fu_180,
        def => prev_element_1_fu_814_p7,
        sel => elements_in_block_reg_1091,
        dout => prev_element_1_fu_814_p9);

    regslice_both_blk_stream_U : component zero_cross_regslice_both
    generic map (
        DataWidth => 96)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => blk_stream_TDATA,
        vld_in => blk_stream_TVALID,
        ack_in => regslice_both_blk_stream_U_ack_in,
        data_out => blk_stream_TDATA_int_regslice,
        vld_out => blk_stream_TVALID_int_regslice,
        ack_out => blk_stream_TREADY_int_regslice,
        apdone_blk => regslice_both_blk_stream_U_apdone_blk);

    regslice_both_segment_length_stream_V_data_V_U : component zero_cross_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => segment_length_stream_TDATA_int_regslice,
        vld_in => segment_length_stream_TVALID_int_regslice,
        ack_in => segment_length_stream_TREADY_int_regslice,
        data_out => segment_length_stream_TDATA,
        vld_out => regslice_both_segment_length_stream_V_data_V_U_vld_out,
        ack_out => segment_length_stream_TREADY,
        apdone_blk => regslice_both_segment_length_stream_V_data_V_U_apdone_blk);

    regslice_both_segment_length_stream_V_keep_V_U : component zero_cross_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv4_F,
        vld_in => segment_length_stream_TVALID_int_regslice,
        ack_in => regslice_both_segment_length_stream_V_keep_V_U_ack_in_dummy,
        data_out => segment_length_stream_TKEEP,
        vld_out => regslice_both_segment_length_stream_V_keep_V_U_vld_out,
        ack_out => segment_length_stream_TREADY,
        apdone_blk => regslice_both_segment_length_stream_V_keep_V_U_apdone_blk);

    regslice_both_segment_length_stream_V_strb_V_U : component zero_cross_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv4_F,
        vld_in => segment_length_stream_TVALID_int_regslice,
        ack_in => regslice_both_segment_length_stream_V_strb_V_U_ack_in_dummy,
        data_out => segment_length_stream_TSTRB,
        vld_out => regslice_both_segment_length_stream_V_strb_V_U_vld_out,
        ack_out => segment_length_stream_TREADY,
        apdone_blk => regslice_both_segment_length_stream_V_strb_V_U_apdone_blk);

    regslice_both_segment_length_stream_V_last_V_U : component zero_cross_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => ap_const_lv1_1,
        vld_in => segment_length_stream_TVALID_int_regslice,
        ack_in => regslice_both_segment_length_stream_V_last_V_U_ack_in_dummy,
        data_out => segment_length_stream_TLAST,
        vld_out => regslice_both_segment_length_stream_V_last_V_U_vld_out,
        ack_out => segment_length_stream_TREADY,
        apdone_blk => regslice_both_segment_length_stream_V_last_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_state45_ignore_call2) and (ap_const_logic_1 = ap_CS_fsm_state45) and (((((icmp_ln49_fu_791_p2 = ap_const_lv1_0) and (icmp_ln33_fu_772_p2 = ap_const_lv1_1)) or ((icmp_ln49_fu_791_p2 = ap_const_lv1_0) and (icmp_ln29_reg_1133 = ap_const_lv1_1))) or ((icmp_ln49_fu_791_p2 = ap_const_lv1_0) and (icmp_ln27_reg_1123 = ap_const_lv1_1))) or ((icmp_ln49_fu_791_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln25_reg_1114))))) then 
                    grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_ap_ready = ap_const_logic_1)) then 
                    grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    blk_count_fu_192_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln20_reg_938 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state36))) then 
                blk_count_fu_192 <= ap_const_lv30_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state48) and ((targetBlock_reg_1178 = ap_const_lv1_1) or (icmp_ln49_reg_1164 = ap_const_lv1_1)))) then 
                blk_count_fu_192 <= blk_count_2_reg_1077;
            end if; 
        end if;
    end process;

    element_idx_fu_184_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln20_reg_938 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state36))) then 
                element_idx_fu_184 <= ap_const_lv31_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state48) and ((targetBlock_reg_1178 = ap_const_lv1_1) or (icmp_ln49_reg_1164 = ap_const_lv1_1)))) then 
                element_idx_fu_184 <= element_idx_3_fu_833_p2;
            end if; 
        end if;
    end process;

    first_block_0227_reg_242_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                first_block_0227_reg_242 <= ap_const_lv1_1;
            elsif (((icmp_ln20_reg_938 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state36))) then 
                first_block_0227_reg_242 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    first_crossing_1_reg_270_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln25_reg_1114) and (icmp_ln27_fu_747_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state44))) then 
                first_crossing_1_reg_270 <= third_crossing_fu_752_p2;
            elsif ((((ap_const_boolean_0 = ap_block_state45) and (ap_const_logic_1 = ap_CS_fsm_state45) and (((ap_const_lv1_1 = and_ln25_reg_1114) and (icmp_ln33_fu_772_p2 = ap_const_lv1_1) and (icmp_ln29_reg_1133 = ap_const_lv1_0) and (icmp_ln27_reg_1123 = ap_const_lv1_0)) or ((ap_const_lv1_1 = and_ln25_reg_1114) and (icmp_ln30_fu_781_p2 = ap_const_lv1_1) and (icmp_ln29_reg_1133 = ap_const_lv1_1) and (icmp_ln27_reg_1123 = ap_const_lv1_0)))) or ((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_const_lv1_0 = and_ln25_reg_1114)) or ((ap_const_lv1_1 = and_ln25_reg_1114) and (icmp_ln30_fu_781_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state45) and (ap_const_logic_1 = ap_CS_fsm_state45) and (icmp_ln29_reg_1133 = ap_const_lv1_1) and (icmp_ln27_reg_1123 = ap_const_lv1_0)))) then 
                first_crossing_1_reg_270 <= first_crossing_fu_200;
            end if; 
        end if;
    end process;

    first_crossing_3_reg_294_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((targetBlock_reg_1178 = ap_const_lv1_1) and (icmp_ln49_reg_1164 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state48))) then 
                first_crossing_3_reg_294 <= first_crossing_2_loc_fu_164;
            elsif (((ap_const_boolean_0 = ap_block_state45) and (ap_const_logic_1 = ap_CS_fsm_state45) and (((((icmp_ln49_fu_791_p2 = ap_const_lv1_1) and (icmp_ln33_fu_772_p2 = ap_const_lv1_1)) or ((icmp_ln49_fu_791_p2 = ap_const_lv1_1) and (icmp_ln29_reg_1133 = ap_const_lv1_1))) or ((icmp_ln49_fu_791_p2 = ap_const_lv1_1) and (icmp_ln27_reg_1123 = ap_const_lv1_1))) or ((icmp_ln49_fu_791_p2 = ap_const_lv1_1) and (ap_const_lv1_0 = and_ln25_reg_1114))))) then 
                first_crossing_3_reg_294 <= ap_phi_mux_first_crossing_1_phi_fu_273_p8;
            end if; 
        end if;
    end process;

    first_crossing_fu_200_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln20_reg_938 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state36))) then 
                first_crossing_fu_200 <= ap_const_lv32_FFFFFFFF;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                first_crossing_fu_200 <= first_crossing_3_reg_294;
            end if; 
        end if;
    end process;

    prev_element_fu_188_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln20_reg_938 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state36))) then 
                prev_element_fu_188 <= ap_const_lv32_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state48) and ((targetBlock_reg_1178 = ap_const_lv1_1) or (icmp_ln49_reg_1164 = ap_const_lv1_1)))) then 
                prev_element_fu_188 <= prev_element_1_fu_814_p9;
            end if; 
        end if;
    end process;

    second_crossing_1_reg_256_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_1 = and_ln25_reg_1114) and (icmp_ln30_fu_781_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_state45) and (ap_const_logic_1 = ap_CS_fsm_state45) and (icmp_ln29_reg_1133 = ap_const_lv1_1) and (icmp_ln27_reg_1123 = ap_const_lv1_0))) then 
                second_crossing_1_reg_256 <= third_crossing_reg_1127;
            elsif ((((ap_const_boolean_0 = ap_block_state45) and (ap_const_logic_1 = ap_CS_fsm_state45) and (((ap_const_lv1_1 = and_ln25_reg_1114) and (icmp_ln33_fu_772_p2 = ap_const_lv1_1) and (icmp_ln29_reg_1133 = ap_const_lv1_0) and (icmp_ln27_reg_1123 = ap_const_lv1_0)) or ((ap_const_lv1_1 = and_ln25_reg_1114) and (icmp_ln30_fu_781_p2 = ap_const_lv1_1) and (icmp_ln29_reg_1133 = ap_const_lv1_1) and (icmp_ln27_reg_1123 = ap_const_lv1_0)))) or ((ap_const_logic_1 = ap_CS_fsm_state44) and (ap_const_lv1_0 = and_ln25_reg_1114)) or ((ap_const_lv1_1 = and_ln25_reg_1114) and (icmp_ln27_fu_747_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state44)))) then 
                second_crossing_1_reg_256 <= second_crossing_fu_196;
            end if; 
        end if;
    end process;

    second_crossing_3_reg_284_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((targetBlock_reg_1178 = ap_const_lv1_1) and (icmp_ln49_reg_1164 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state48))) then 
                second_crossing_3_reg_284 <= second_crossing_2_loc_fu_160;
            elsif (((ap_const_boolean_0 = ap_block_state45) and (ap_const_logic_1 = ap_CS_fsm_state45) and (((((icmp_ln49_fu_791_p2 = ap_const_lv1_1) and (icmp_ln33_fu_772_p2 = ap_const_lv1_1)) or ((icmp_ln49_fu_791_p2 = ap_const_lv1_1) and (icmp_ln29_reg_1133 = ap_const_lv1_1))) or ((icmp_ln49_fu_791_p2 = ap_const_lv1_1) and (icmp_ln27_reg_1123 = ap_const_lv1_1))) or ((icmp_ln49_fu_791_p2 = ap_const_lv1_1) and (ap_const_lv1_0 = and_ln25_reg_1114))))) then 
                second_crossing_3_reg_284 <= ap_phi_mux_second_crossing_1_phi_fu_259_p8;
            end if; 
        end if;
    end process;

    second_crossing_fu_196_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln20_reg_938 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state36))) then 
                second_crossing_fu_196 <= ap_const_lv32_FFFFFFFF;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                second_crossing_fu_196 <= second_crossing_3_reg_284;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                Tms_read_reg_879 <= Tms;
                n_read_reg_884 <= n;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state32)) then
                add_ln16_reg_927 <= add_ln16_fu_355_p2;
                icmp_ln20_reg_938 <= icmp_ln20_fu_368_p2;
                tmp_5_reg_932 <= add_ln16_fu_355_p2(31 downto 31);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state43)) then
                and_ln25_reg_1114 <= and_ln25_fu_738_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state38)) then
                blk_count_2_reg_1077 <= blk_count_2_fu_631_p2;
                elements_in_block_reg_1091 <= elements_in_block_fu_692_p3;
                temp_blk_3_reg_1085 <= temp_blk_3_fu_644_p1;
                    zext_ln20_reg_1071(30 downto 0) <= zext_ln20_fu_627_p1(30 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state36)) then
                cond_reg_1045 <= cond_fu_573_p3;
                result_reg_993 <= result_fu_531_p3;
                select_ln16_1_reg_1000 <= select_ln16_1_fu_546_p3;
                sub2_reg_1005 <= sub2_fu_553_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state33)) then
                dc_reg_942 <= grp_fu_326_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_first_crossing_2_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state47))) then
                first_crossing_2_loc_fu_164 <= grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_first_crossing_2_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state37)) then
                icmp_ln20_1_reg_1058 <= icmp_ln20_1_fu_613_p2;
                    zext_ln20_1_reg_1053(29 downto 0) <= zext_ln20_1_fu_609_p1(29 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state42)) then
                icmp_ln26_1_reg_1109 <= icmp_ln26_1_fu_722_p2;
                icmp_ln26_reg_1104 <= icmp_ln26_fu_716_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state44)) then
                icmp_ln27_reg_1123 <= icmp_ln27_fu_747_p2;
                icmp_ln29_reg_1133 <= icmp_ln29_fu_757_p2;
                sub_ln30_reg_1142 <= sub_ln30_fu_767_p2;
                sub_ln33_reg_1137 <= sub_ln33_fu_762_p2;
                third_crossing_reg_1127 <= third_crossing_fu_752_p2;
                    zext_ln22_reg_1118(1 downto 0) <= zext_ln22_fu_744_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state45)) then
                icmp_ln33_reg_1147 <= icmp_ln33_fu_772_p2;
                icmp_ln49_reg_1164 <= icmp_ln49_fu_791_p2;
                sub42_reg_1159 <= sub42_fu_785_p2;
                temp_blk_1_load_reg_1168 <= temp_blk_1_fu_176;
                temp_blk_2_load_reg_1173 <= temp_blk_2_fu_180;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_j_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state47))) then
                j_loc_fu_168 <= grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_j_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state34)) then
                mul_ln16_reg_972 <= grp_fu_336_p2;
                select_ln18_reg_967 <= select_ln18_fu_428_p3;
                tmp_10_cast_reg_977 <= grp_fu_336_p2(63 downto 34);
                tmp_reg_962 <= add_ln317_fu_404_p2(8 downto 8);
                trunc_ln342_reg_957 <= trunc_ln342_fu_396_p1;
                xs_sign_reg_952 <= data_fu_377_p1(31 downto 31);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state41)) then
                mul_reg_1098 <= grp_fu_322_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_second_crossing_2_out_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state47))) then
                second_crossing_2_loc_fu_160 <= grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_second_crossing_2_out;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state35)) then
                select_ln16_reg_988 <= select_ln16_fu_520_p3;
                val_reg_982 <= val_fu_498_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state47)) then
                targetBlock_reg_1178 <= grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln20_1_reg_1058 = ap_const_lv1_1) and (icmp_ln20_reg_938 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_state38) and (ap_const_logic_1 = ap_CS_fsm_state38))) then
                temp_blk_1_fu_176 <= temp_blk_4_fu_657_p1;
                temp_blk_2_fu_180 <= temp_blk_5_fu_669_p1;
                temp_blk_fu_172 <= temp_blk_3_fu_644_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state48)) then
                third_crossing_2_reg_1191 <= third_crossing_2_fu_806_p2;
            end if;
        end if;
    end process;
    zext_ln20_1_reg_1053(30) <= '0';
    zext_ln20_reg_1071(31) <= '0';
    zext_ln22_reg_1118(30 downto 2) <= "00000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state38, icmp_ln20_reg_938, icmp_ln20_1_reg_1058, ap_CS_fsm_state45, and_ln25_reg_1114, icmp_ln27_reg_1123, icmp_ln29_reg_1133, icmp_ln33_fu_772_p2, ap_CS_fsm_state46, ap_CS_fsm_state49, ap_CS_fsm_state50, ap_CS_fsm_state52, ap_CS_fsm_state36, icmp_ln49_fu_791_p2, icmp_ln49_reg_1164, targetBlock_reg_1178, ap_CS_fsm_state47, ap_CS_fsm_state48, grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_ap_done, ap_block_state45, ap_block_state38, ap_block_state50, segment_length_stream_TREADY_int_regslice)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                ap_NS_fsm <= ap_ST_fsm_state28;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                if (((icmp_ln20_reg_938 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state36))) then
                    ap_NS_fsm <= ap_ST_fsm_state37;
                else
                    ap_NS_fsm <= ap_ST_fsm_state38;
                end if;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                if (((ap_const_boolean_0 = ap_block_state38) and (ap_const_logic_1 = ap_CS_fsm_state38) and ((icmp_ln20_1_reg_1058 = ap_const_lv1_0) or (icmp_ln20_reg_938 = ap_const_lv1_0)))) then
                    ap_NS_fsm <= ap_ST_fsm_state52;
                elsif (((icmp_ln20_1_reg_1058 = ap_const_lv1_1) and (icmp_ln20_reg_938 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_state38) and (ap_const_logic_1 = ap_CS_fsm_state38))) then
                    ap_NS_fsm <= ap_ST_fsm_state39;
                else
                    ap_NS_fsm <= ap_ST_fsm_state38;
                end if;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                if (((ap_const_boolean_0 = ap_block_state45) and (ap_const_logic_1 = ap_CS_fsm_state45) and (((((icmp_ln49_fu_791_p2 = ap_const_lv1_1) and (icmp_ln33_fu_772_p2 = ap_const_lv1_1)) or ((icmp_ln49_fu_791_p2 = ap_const_lv1_1) and (icmp_ln29_reg_1133 = ap_const_lv1_1))) or ((icmp_ln49_fu_791_p2 = ap_const_lv1_1) and (icmp_ln27_reg_1123 = ap_const_lv1_1))) or ((icmp_ln49_fu_791_p2 = ap_const_lv1_1) and (ap_const_lv1_0 = and_ln25_reg_1114))))) then
                    ap_NS_fsm <= ap_ST_fsm_state48;
                elsif (((ap_const_boolean_0 = ap_block_state45) and (ap_const_logic_1 = ap_CS_fsm_state45) and (((((icmp_ln49_fu_791_p2 = ap_const_lv1_0) and (icmp_ln33_fu_772_p2 = ap_const_lv1_1)) or ((icmp_ln49_fu_791_p2 = ap_const_lv1_0) and (icmp_ln29_reg_1133 = ap_const_lv1_1))) or ((icmp_ln49_fu_791_p2 = ap_const_lv1_0) and (icmp_ln27_reg_1123 = ap_const_lv1_1))) or ((icmp_ln49_fu_791_p2 = ap_const_lv1_0) and (ap_const_lv1_0 = and_ln25_reg_1114))))) then
                    ap_NS_fsm <= ap_ST_fsm_state47;
                elsif (((ap_const_lv1_1 = and_ln25_reg_1114) and (ap_const_boolean_0 = ap_block_state45) and (ap_const_logic_1 = ap_CS_fsm_state45) and (icmp_ln33_fu_772_p2 = ap_const_lv1_0) and (icmp_ln29_reg_1133 = ap_const_lv1_0) and (icmp_ln27_reg_1123 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state46;
                else
                    ap_NS_fsm <= ap_ST_fsm_state45;
                end if;
            when ap_ST_fsm_state46 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state46) and (segment_length_stream_TREADY_int_regslice = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state50;
                else
                    ap_NS_fsm <= ap_ST_fsm_state46;
                end if;
            when ap_ST_fsm_state47 => 
                if (((grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state47))) then
                    ap_NS_fsm <= ap_ST_fsm_state48;
                else
                    ap_NS_fsm <= ap_ST_fsm_state47;
                end if;
            when ap_ST_fsm_state48 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state48) and ((targetBlock_reg_1178 = ap_const_lv1_1) or (icmp_ln49_reg_1164 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state51;
                else
                    ap_NS_fsm <= ap_ST_fsm_state49;
                end if;
            when ap_ST_fsm_state49 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state49) and (segment_length_stream_TREADY_int_regslice = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state50;
                else
                    ap_NS_fsm <= ap_ST_fsm_state49;
                end if;
            when ap_ST_fsm_state50 => 
                if (((ap_const_boolean_0 = ap_block_state50) and (ap_const_logic_1 = ap_CS_fsm_state50))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state50;
                end if;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state52 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state52) and (segment_length_stream_TREADY_int_regslice = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state50;
                else
                    ap_NS_fsm <= ap_ST_fsm_state52;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln16_fu_355_p2 <= std_logic_vector(unsigned(n_read_reg_884) + unsigned(ap_const_lv32_2));
    add_ln317_fu_404_p2 <= std_logic_vector(unsigned(zext_ln317_fu_400_p1) + unsigned(ap_const_lv9_181));
    and_ln25_fu_738_p2 <= (first_block_0227_reg_242 and and_ln26_fu_732_p2);
    and_ln26_fu_732_p2 <= (or_ln26_fu_728_p2 and grp_fu_331_p2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_CS_fsm_state40 <= ap_CS_fsm(39);
    ap_CS_fsm_state41 <= ap_CS_fsm(40);
    ap_CS_fsm_state42 <= ap_CS_fsm(41);
    ap_CS_fsm_state43 <= ap_CS_fsm(42);
    ap_CS_fsm_state44 <= ap_CS_fsm(43);
    ap_CS_fsm_state45 <= ap_CS_fsm(44);
    ap_CS_fsm_state46 <= ap_CS_fsm(45);
    ap_CS_fsm_state47 <= ap_CS_fsm(46);
    ap_CS_fsm_state48 <= ap_CS_fsm(47);
    ap_CS_fsm_state49 <= ap_CS_fsm(48);
    ap_CS_fsm_state50 <= ap_CS_fsm(49);
    ap_CS_fsm_state51 <= ap_CS_fsm(50);
    ap_CS_fsm_state52 <= ap_CS_fsm(51);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;
    ap_ST_fsm_state27_blk <= ap_const_logic_0;
    ap_ST_fsm_state28_blk <= ap_const_logic_0;
    ap_ST_fsm_state29_blk <= ap_const_logic_0;
    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_fsm_state33_blk <= ap_const_logic_0;
    ap_ST_fsm_state34_blk <= ap_const_logic_0;
    ap_ST_fsm_state35_blk <= ap_const_logic_0;
    ap_ST_fsm_state36_blk <= ap_const_logic_0;
    ap_ST_fsm_state37_blk <= ap_const_logic_0;

    ap_ST_fsm_state38_blk_assign_proc : process(ap_block_state38)
    begin
        if ((ap_const_boolean_1 = ap_block_state38)) then 
            ap_ST_fsm_state38_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state38_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state39_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state40_blk <= ap_const_logic_0;
    ap_ST_fsm_state41_blk <= ap_const_logic_0;
    ap_ST_fsm_state42_blk <= ap_const_logic_0;
    ap_ST_fsm_state43_blk <= ap_const_logic_0;
    ap_ST_fsm_state44_blk <= ap_const_logic_0;

    ap_ST_fsm_state45_blk_assign_proc : process(ap_block_state45)
    begin
        if ((ap_const_boolean_1 = ap_block_state45)) then 
            ap_ST_fsm_state45_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state45_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state46_blk_assign_proc : process(segment_length_stream_TREADY_int_regslice)
    begin
        if ((segment_length_stream_TREADY_int_regslice = ap_const_logic_0)) then 
            ap_ST_fsm_state46_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state46_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state47_blk_assign_proc : process(grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_ap_done)
    begin
        if ((grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state47_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state47_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state48_blk <= ap_const_logic_0;

    ap_ST_fsm_state49_blk_assign_proc : process(segment_length_stream_TREADY_int_regslice)
    begin
        if ((segment_length_stream_TREADY_int_regslice = ap_const_logic_0)) then 
            ap_ST_fsm_state49_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state49_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state4_blk <= ap_const_logic_0;

    ap_ST_fsm_state50_blk_assign_proc : process(ap_block_state50)
    begin
        if ((ap_const_boolean_1 = ap_block_state50)) then 
            ap_ST_fsm_state50_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state50_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state51_blk <= ap_const_logic_0;

    ap_ST_fsm_state52_blk_assign_proc : process(segment_length_stream_TREADY_int_regslice)
    begin
        if ((segment_length_stream_TREADY_int_regslice = ap_const_logic_0)) then 
            ap_ST_fsm_state52_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state52_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state38_assign_proc : process(ap_predicate_op191_read_state38, ap_predicate_op205_write_state38, blk_stream_TVALID_int_regslice, segment_length_stream_TREADY_int_regslice)
    begin
                ap_block_state38 <= (((ap_predicate_op205_write_state38 = ap_const_boolean_1) and (segment_length_stream_TREADY_int_regslice = ap_const_logic_0)) or ((ap_predicate_op191_read_state38 = ap_const_boolean_1) and (blk_stream_TVALID_int_regslice = ap_const_logic_0)));
    end process;


    ap_block_state45_assign_proc : process(ap_predicate_op233_write_state45, segment_length_stream_TREADY_int_regslice)
    begin
                ap_block_state45 <= ((ap_predicate_op233_write_state45 = ap_const_boolean_1) and (segment_length_stream_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state45_ignore_call2_assign_proc : process(ap_predicate_op233_write_state45, segment_length_stream_TREADY_int_regslice)
    begin
                ap_block_state45_ignore_call2 <= ((ap_predicate_op233_write_state45 = ap_const_boolean_1) and (segment_length_stream_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state50_assign_proc : process(ap_predicate_op266_write_state50, regslice_both_segment_length_stream_V_data_V_U_apdone_blk, segment_length_stream_TREADY_int_regslice)
    begin
                ap_block_state50 <= ((regslice_both_segment_length_stream_V_data_V_U_apdone_blk = ap_const_logic_1) or ((ap_predicate_op266_write_state50 = ap_const_boolean_1) and (segment_length_stream_TREADY_int_regslice = ap_const_logic_0)));
    end process;


    ap_condition_394_assign_proc : process(and_ln25_reg_1114, icmp_ln27_reg_1123, icmp_ln29_reg_1133, icmp_ln33_fu_772_p2, icmp_ln30_fu_781_p2)
    begin
                ap_condition_394 <= (((ap_const_lv1_1 = and_ln25_reg_1114) and (icmp_ln33_fu_772_p2 = ap_const_lv1_1) and (icmp_ln29_reg_1133 = ap_const_lv1_0) and (icmp_ln27_reg_1123 = ap_const_lv1_0)) or ((ap_const_lv1_1 = and_ln25_reg_1114) and (icmp_ln30_fu_781_p2 = ap_const_lv1_1) and (icmp_ln29_reg_1133 = ap_const_lv1_1) and (icmp_ln27_reg_1123 = ap_const_lv1_0)));
    end process;


    ap_condition_404_assign_proc : process(and_ln25_reg_1114, icmp_ln27_reg_1123, icmp_ln29_reg_1133, icmp_ln30_fu_781_p2)
    begin
                ap_condition_404 <= ((ap_const_lv1_1 = and_ln25_reg_1114) and (icmp_ln30_fu_781_p2 = ap_const_lv1_0) and (icmp_ln29_reg_1133 = ap_const_lv1_1) and (icmp_ln27_reg_1123 = ap_const_lv1_0));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state50, ap_block_state50)
    begin
        if (((ap_const_boolean_0 = ap_block_state50) and (ap_const_logic_1 = ap_CS_fsm_state50))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_first_crossing_1_phi_fu_273_p8_assign_proc : process(ap_CS_fsm_state45, and_ln25_reg_1114, icmp_ln27_reg_1123, icmp_ln29_reg_1133, icmp_ln33_fu_772_p2, icmp_ln30_fu_781_p2, first_crossing_1_reg_270, first_crossing_fu_200)
    begin
        if ((((ap_const_lv1_1 = and_ln25_reg_1114) and (icmp_ln30_fu_781_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state45) and (icmp_ln29_reg_1133 = ap_const_lv1_1) and (icmp_ln27_reg_1123 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state45) and (((ap_const_lv1_1 = and_ln25_reg_1114) and (icmp_ln33_fu_772_p2 = ap_const_lv1_1) and (icmp_ln29_reg_1133 = ap_const_lv1_0) and (icmp_ln27_reg_1123 = ap_const_lv1_0)) or ((ap_const_lv1_1 = and_ln25_reg_1114) and (icmp_ln30_fu_781_p2 = ap_const_lv1_1) and (icmp_ln29_reg_1133 = ap_const_lv1_1) and (icmp_ln27_reg_1123 = ap_const_lv1_0)))))) then 
            ap_phi_mux_first_crossing_1_phi_fu_273_p8 <= first_crossing_fu_200;
        else 
            ap_phi_mux_first_crossing_1_phi_fu_273_p8 <= first_crossing_1_reg_270;
        end if; 
    end process;


    ap_phi_mux_second_crossing_1_phi_fu_259_p8_assign_proc : process(ap_CS_fsm_state45, third_crossing_reg_1127, second_crossing_1_reg_256, second_crossing_fu_196, ap_condition_394, ap_condition_404)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state45)) then
            if ((ap_const_boolean_1 = ap_condition_404)) then 
                ap_phi_mux_second_crossing_1_phi_fu_259_p8 <= third_crossing_reg_1127;
            elsif ((ap_const_boolean_1 = ap_condition_394)) then 
                ap_phi_mux_second_crossing_1_phi_fu_259_p8 <= second_crossing_fu_196;
            else 
                ap_phi_mux_second_crossing_1_phi_fu_259_p8 <= second_crossing_1_reg_256;
            end if;
        else 
            ap_phi_mux_second_crossing_1_phi_fu_259_p8 <= second_crossing_1_reg_256;
        end if; 
    end process;


    ap_predicate_op191_read_state38_assign_proc : process(icmp_ln20_reg_938, icmp_ln20_1_reg_1058)
    begin
                ap_predicate_op191_read_state38 <= ((icmp_ln20_1_reg_1058 = ap_const_lv1_1) and (icmp_ln20_reg_938 = ap_const_lv1_1));
    end process;


    ap_predicate_op205_write_state38_assign_proc : process(icmp_ln20_reg_938, icmp_ln20_1_reg_1058)
    begin
                ap_predicate_op205_write_state38 <= ((icmp_ln20_1_reg_1058 = ap_const_lv1_0) or (icmp_ln20_reg_938 = ap_const_lv1_0));
    end process;


    ap_predicate_op233_write_state45_assign_proc : process(and_ln25_reg_1114, icmp_ln27_reg_1123, icmp_ln29_reg_1133, icmp_ln33_fu_772_p2)
    begin
                ap_predicate_op233_write_state45 <= ((ap_const_lv1_1 = and_ln25_reg_1114) and (icmp_ln33_fu_772_p2 = ap_const_lv1_0) and (icmp_ln29_reg_1133 = ap_const_lv1_0) and (icmp_ln27_reg_1123 = ap_const_lv1_0));
    end process;


    ap_predicate_op266_write_state50_assign_proc : process(icmp_ln20_reg_938, icmp_ln20_1_reg_1058, and_ln25_reg_1114, icmp_ln27_reg_1123, icmp_ln29_reg_1133, icmp_ln33_reg_1147)
    begin
                ap_predicate_op266_write_state50 <= (((((icmp_ln20_1_reg_1058 = ap_const_lv1_1) and (icmp_ln20_reg_938 = ap_const_lv1_1) and (icmp_ln29_reg_1133 = ap_const_lv1_1)) or ((icmp_ln20_1_reg_1058 = ap_const_lv1_1) and (icmp_ln20_reg_938 = ap_const_lv1_1) and (icmp_ln33_reg_1147 = ap_const_lv1_1))) or ((icmp_ln20_1_reg_1058 = ap_const_lv1_1) and (icmp_ln20_reg_938 = ap_const_lv1_1) and (icmp_ln27_reg_1123 = ap_const_lv1_1))) or ((icmp_ln20_1_reg_1058 = ap_const_lv1_1) and (icmp_ln20_reg_938 = ap_const_lv1_1) and (ap_const_lv1_0 = and_ln25_reg_1114)));
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state50, ap_block_state50)
    begin
        if (((ap_const_boolean_0 = ap_block_state50) and (ap_const_logic_1 = ap_CS_fsm_state50))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    bitcast_ln26_fu_699_p1 <= mul_reg_1098;
    blk_count_2_fu_631_p2 <= std_logic_vector(unsigned(blk_count_fu_192) + unsigned(ap_const_lv30_1));

    blk_stream_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state38, icmp_ln20_reg_938, icmp_ln20_1_reg_1058, blk_stream_TVALID_int_regslice)
    begin
        if (((icmp_ln20_1_reg_1058 = ap_const_lv1_1) and (icmp_ln20_reg_938 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state38))) then 
            blk_stream_TDATA_blk_n <= blk_stream_TVALID_int_regslice;
        else 
            blk_stream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    blk_stream_TREADY <= regslice_both_blk_stream_U_ack_in;

    blk_stream_TREADY_int_regslice_assign_proc : process(ap_CS_fsm_state38, ap_predicate_op191_read_state38, ap_block_state38)
    begin
        if (((ap_predicate_op191_read_state38 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_state38) and (ap_const_logic_1 = ap_CS_fsm_state38))) then 
            blk_stream_TREADY_int_regslice <= ap_const_logic_1;
        else 
            blk_stream_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    cmp4_fu_567_p2 <= "1" when (empty_22_fu_563_p1 = ap_const_lv3_0) else "0";
    cond_fu_573_p3 <= 
        ap_const_lv2_3 when (cmp4_fu_567_p2(0) = '1') else 
        empty_fu_559_p1;
    data_fu_377_p1 <= dc_reg_942;
    element_idx_3_fu_833_p2 <= std_logic_vector(unsigned(zext_ln22_reg_1118) + unsigned(element_idx_fu_184));
    elements_in_block_fu_692_p3 <= 
        cond_reg_1045 when (icmp_ln22_fu_688_p2(0) = '1') else 
        ap_const_lv2_3;
    empty_22_fu_563_p1 <= grp_fu_349_p2(3 - 1 downto 0);
    empty_fu_559_p1 <= grp_fu_349_p2(2 - 1 downto 0);

    grp_fu_322_ce_assign_proc : process(ap_CS_fsm_state38, ap_CS_fsm_state41, ap_CS_fsm_state47, grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_grp_fu_322_p_ce, ap_block_state38, ap_CS_fsm_state39, ap_CS_fsm_state40)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            grp_fu_322_ce <= grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_grp_fu_322_p_ce;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state41) or ((ap_const_boolean_0 = ap_block_state38) and (ap_const_logic_1 = ap_CS_fsm_state38)))) then 
            grp_fu_322_ce <= ap_const_logic_1;
        else 
            grp_fu_322_ce <= ap_const_logic_0;
        end if; 
    end process;


    grp_fu_322_p0_assign_proc : process(ap_CS_fsm_state38, ap_CS_fsm_state47, grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_grp_fu_322_p_din0, prev_element_fu_188)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            grp_fu_322_p0 <= grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_grp_fu_322_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            grp_fu_322_p0 <= prev_element_fu_188;
        else 
            grp_fu_322_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_322_p1_assign_proc : process(ap_CS_fsm_state38, temp_blk_3_fu_644_p1, ap_CS_fsm_state47, grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_grp_fu_322_p_din1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            grp_fu_322_p1 <= grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_grp_fu_322_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            grp_fu_322_p1 <= temp_blk_3_fu_644_p1;
        else 
            grp_fu_322_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_331_ce_assign_proc : process(ap_CS_fsm_state47, grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_grp_fu_331_p_ce)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            grp_fu_331_ce <= grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_grp_fu_331_p_ce;
        else 
            grp_fu_331_ce <= ap_const_logic_1;
        end if; 
    end process;


    grp_fu_331_opcode_assign_proc : process(ap_CS_fsm_state42, ap_CS_fsm_state47, grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_grp_fu_331_p_opcode)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            grp_fu_331_opcode <= grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_grp_fu_331_p_opcode;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_331_opcode <= ap_const_lv5_5;
        else 
            grp_fu_331_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_331_p0_assign_proc : process(mul_reg_1098, ap_CS_fsm_state42, ap_CS_fsm_state47, grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_grp_fu_331_p_din0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            grp_fu_331_p0 <= grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_grp_fu_331_p_din0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_331_p0 <= mul_reg_1098;
        else 
            grp_fu_331_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_331_p1_assign_proc : process(ap_CS_fsm_state42, ap_CS_fsm_state47, grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_grp_fu_331_p_din1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            grp_fu_331_p1 <= grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_grp_fu_331_p_din1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            grp_fu_331_p1 <= ap_const_lv32_0;
        else 
            grp_fu_331_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_336_p1 <= ap_const_lv65_155555556(34 - 1 downto 0);

    grp_fu_349_ap_start_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            grp_fu_349_ap_start <= ap_const_logic_1;
        else 
            grp_fu_349_ap_start <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_349_p1 <= ap_const_lv32_3(3 - 1 downto 0);
    grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_ap_start <= grp_zero_cross_Pipeline_VITIS_LOOP_49_2_fu_304_ap_start_reg;
    icmp_ln20_1_fu_613_p2 <= "1" when (signed(zext_ln20_1_fu_609_p1) < signed(select_ln16_1_reg_1000)) else "0";
    icmp_ln20_fu_368_p2 <= "1" when (signed(n_read_reg_884) > signed(ap_const_lv32_0)) else "0";
    icmp_ln22_fu_688_p2 <= "1" when (zext_ln20_1_reg_1053 = sub2_reg_1005) else "0";
    icmp_ln26_1_fu_722_p2 <= "1" when (trunc_ln26_fu_712_p1 = ap_const_lv23_0) else "0";
    icmp_ln26_fu_716_p2 <= "0" when (tmp_1_fu_702_p4 = ap_const_lv8_FF) else "1";
    icmp_ln27_fu_747_p2 <= "1" when (first_crossing_fu_200 = ap_const_lv32_FFFFFFFF) else "0";
    icmp_ln29_fu_757_p2 <= "1" when (second_crossing_fu_196 = ap_const_lv32_FFFFFFFF) else "0";
    icmp_ln30_fu_781_p2 <= "1" when (signed(sub_ln30_reg_1142) < signed(result_reg_993)) else "0";
    icmp_ln33_fu_772_p2 <= "1" when (signed(sub_ln33_reg_1137) < signed(result_reg_993)) else "0";
    icmp_ln49_fu_791_p2 <= "1" when (sub42_fu_785_p2 = ap_const_lv2_0) else "0";
    lshr_ln18_fu_466_p2 <= std_logic_vector(shift_right(unsigned(zext_ln15_fu_455_p1),to_integer(unsigned('0' & zext_ln18_fu_462_p1(31-1 downto 0)))));
    mantissa_fu_446_p4 <= ((ap_const_lv1_1 & trunc_ln342_reg_957) & ap_const_lv1_0);
    or_ln26_fu_728_p2 <= (icmp_ln26_reg_1104 or icmp_ln26_1_reg_1109);
    prev_element_1_fu_814_p7 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    result_2_fu_526_p2 <= std_logic_vector(unsigned(ap_const_lv32_0) - unsigned(val_reg_982));
    result_fu_531_p3 <= 
        result_2_fu_526_p2 when (xs_sign_reg_952(0) = '1') else 
        val_reg_982;
    segment_length_1_fu_862_p2 <= std_logic_vector(unsigned(sub_ln59_fu_857_p2) + unsigned(zext_ln12_fu_851_p1));
    segment_length_fu_776_p2 <= std_logic_vector(unsigned(zext_ln20_reg_1071) - unsigned(first_crossing_fu_200));

    segment_length_stream_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state38, icmp_ln20_reg_938, icmp_ln20_1_reg_1058, ap_CS_fsm_state45, and_ln25_reg_1114, icmp_ln27_reg_1123, icmp_ln29_reg_1133, icmp_ln33_fu_772_p2, ap_CS_fsm_state46, ap_CS_fsm_state49, ap_CS_fsm_state50, icmp_ln33_reg_1147, ap_CS_fsm_state52, segment_length_stream_TREADY_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state46) or ((ap_const_logic_1 = ap_CS_fsm_state38) and ((icmp_ln20_1_reg_1058 = ap_const_lv1_0) or (icmp_ln20_reg_938 = ap_const_lv1_0))) or ((ap_const_logic_1 = ap_CS_fsm_state50) and (((((icmp_ln20_1_reg_1058 = ap_const_lv1_1) and (icmp_ln20_reg_938 = ap_const_lv1_1) and (icmp_ln29_reg_1133 = ap_const_lv1_1)) or ((icmp_ln20_1_reg_1058 = ap_const_lv1_1) and (icmp_ln20_reg_938 = ap_const_lv1_1) and (icmp_ln33_reg_1147 = ap_const_lv1_1))) or ((icmp_ln20_1_reg_1058 = ap_const_lv1_1) and (icmp_ln20_reg_938 = ap_const_lv1_1) and (icmp_ln27_reg_1123 = ap_const_lv1_1))) or ((icmp_ln20_1_reg_1058 = ap_const_lv1_1) and (icmp_ln20_reg_938 = ap_const_lv1_1) and (ap_const_lv1_0 = and_ln25_reg_1114)))) or ((ap_const_lv1_1 = and_ln25_reg_1114) and (ap_const_logic_1 = ap_CS_fsm_state45) and (icmp_ln33_fu_772_p2 = ap_const_lv1_0) and (icmp_ln29_reg_1133 = ap_const_lv1_0) and (icmp_ln27_reg_1123 = ap_const_lv1_0)))) then 
            segment_length_stream_TDATA_blk_n <= segment_length_stream_TREADY_int_regslice;
        else 
            segment_length_stream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    segment_length_stream_TDATA_int_regslice_assign_proc : process(ap_CS_fsm_state38, ap_CS_fsm_state45, ap_CS_fsm_state49, segment_length_fu_776_p2, segment_length_1_fu_862_p2, ap_predicate_op233_write_state45, ap_block_state45, ap_predicate_op205_write_state38, ap_block_state38, segment_length_stream_TREADY_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state49) and (segment_length_stream_TREADY_int_regslice = ap_const_logic_1))) then 
            segment_length_stream_TDATA_int_regslice <= segment_length_1_fu_862_p2;
        elsif (((ap_const_boolean_0 = ap_block_state45) and (ap_predicate_op233_write_state45 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state45))) then 
            segment_length_stream_TDATA_int_regslice <= segment_length_fu_776_p2;
        elsif (((ap_predicate_op205_write_state38 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_state38) and (ap_const_logic_1 = ap_CS_fsm_state38))) then 
            segment_length_stream_TDATA_int_regslice <= ap_const_lv32_FFFFFFFF;
        else 
            segment_length_stream_TDATA_int_regslice <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    segment_length_stream_TVALID <= regslice_both_segment_length_stream_V_data_V_U_vld_out;

    segment_length_stream_TVALID_int_regslice_assign_proc : process(ap_CS_fsm_state38, ap_CS_fsm_state45, ap_CS_fsm_state49, ap_predicate_op233_write_state45, ap_block_state45, ap_predicate_op205_write_state38, ap_block_state38, segment_length_stream_TREADY_int_regslice)
    begin
        if ((((ap_predicate_op205_write_state38 = ap_const_boolean_1) and (ap_const_boolean_0 = ap_block_state38) and (ap_const_logic_1 = ap_CS_fsm_state38)) or ((ap_const_boolean_0 = ap_block_state45) and (ap_predicate_op233_write_state45 = ap_const_boolean_1) and (ap_const_logic_1 = ap_CS_fsm_state45)) or ((ap_const_logic_1 = ap_CS_fsm_state49) and (segment_length_stream_TREADY_int_regslice = ap_const_logic_1)))) then 
            segment_length_stream_TVALID_int_regslice <= ap_const_logic_1;
        else 
            segment_length_stream_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    select_ln16_1_fu_546_p3 <= 
        sub_ln16_1_fu_540_p2 when (tmp_5_reg_932(0) = '1') else 
        zext_ln16_fu_537_p1;
    select_ln16_fu_520_p3 <= 
        tmp_9_cast_fu_510_p4 when (tmp_5_reg_932(0) = '1') else 
        tmp_10_cast_reg_977;
    select_ln18_fu_428_p3 <= 
        sext_ln18_fu_424_p1 when (tmp_fu_410_p3(0) = '1') else 
        add_ln317_fu_404_p2;
        sext_ln18_1_fu_459_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(select_ln18_reg_967),32));

        sext_ln18_fu_424_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln18_fu_418_p2),9));

    shl_ln18_fu_472_p2 <= std_logic_vector(shift_left(unsigned(zext_ln15_fu_455_p1),to_integer(unsigned('0' & zext_ln18_fu_462_p1(31-1 downto 0)))));
    sub2_fu_553_p2 <= std_logic_vector(unsigned(select_ln16_1_fu_546_p3) + unsigned(ap_const_lv31_7FFFFFFF));
    sub42_fu_785_p2 <= std_logic_vector(unsigned(elements_in_block_reg_1091) + unsigned(ap_const_lv2_3));
    sub_ln16_1_fu_540_p2 <= std_logic_vector(unsigned(ap_const_lv31_0) - unsigned(zext_ln16_fu_537_p1));
    sub_ln16_fu_505_p2 <= std_logic_vector(unsigned(ap_const_lv65_0) - unsigned(mul_ln16_reg_972));
    sub_ln18_fu_418_p2 <= std_logic_vector(unsigned(ap_const_lv8_7F) - unsigned(xs_exp_fu_388_p3));
    sub_ln30_fu_767_p2 <= std_logic_vector(unsigned(third_crossing_fu_752_p2) - unsigned(first_crossing_fu_200));
    sub_ln33_fu_762_p2 <= std_logic_vector(unsigned(third_crossing_fu_752_p2) - unsigned(second_crossing_fu_196));
    sub_ln59_fu_857_p2 <= std_logic_vector(unsigned(zext_ln59_fu_854_p1) - unsigned(first_crossing_2_loc_fu_164));
    temp_blk_3_fu_644_p1 <= trunc_ln21_fu_640_p1;
    temp_blk_4_fu_657_p1 <= tmp_3_fu_649_p3;
    temp_blk_5_fu_669_p1 <= tmp_4_fu_661_p3;
    third_crossing_2_fu_806_p2 <= std_logic_vector(unsigned(element_idx_fu_184) + unsigned(ap_const_lv31_1));
    third_crossing_fu_752_p2 <= std_logic_vector(unsigned(zext_ln20_reg_1071) + unsigned(ap_const_lv32_FFFFFFFF));
    tmp_1_fu_702_p4 <= bitcast_ln26_fu_699_p1(30 downto 23);
    tmp_3_fu_649_p3 <= blk_stream_TDATA_int_regslice(63 downto 32);
    tmp_4_fu_661_p3 <= blk_stream_TDATA_int_regslice(95 downto 64);
    tmp_7_fu_478_p4 <= lshr_ln18_fu_466_p2(55 downto 24);
    tmp_8_fu_488_p4 <= shl_ln18_fu_472_p2(55 downto 24);
    tmp_9_cast_fu_510_p4 <= sub_ln16_fu_505_p2(63 downto 34);
    tmp_fu_410_p3 <= add_ln317_fu_404_p2(8 downto 8);
    trunc_ln21_fu_640_p1 <= blk_stream_TDATA_int_regslice(32 - 1 downto 0);
    trunc_ln26_fu_712_p1 <= bitcast_ln26_fu_699_p1(23 - 1 downto 0);
    trunc_ln342_fu_396_p1 <= data_fu_377_p1(23 - 1 downto 0);
    val_fu_498_p3 <= 
        tmp_7_fu_478_p4 when (tmp_reg_962(0) = '1') else 
        tmp_8_fu_488_p4;
    xs_exp_fu_388_p3 <= data_fu_377_p1(30 downto 23);
    zext_ln12_fu_851_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_loc_fu_168),32));
    zext_ln15_fu_455_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mantissa_fu_446_p4),79));
    zext_ln16_fu_537_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln16_reg_988),31));
    zext_ln18_fu_462_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln18_1_fu_459_p1),79));
    zext_ln20_1_fu_609_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(blk_count_fu_192),31));
    zext_ln20_fu_627_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(element_idx_fu_184),32));
    zext_ln22_fu_744_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(elements_in_block_reg_1091),31));
    zext_ln317_fu_400_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(xs_exp_fu_388_p3),9));
    zext_ln59_fu_854_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(third_crossing_2_reg_1191),32));
end behav;
