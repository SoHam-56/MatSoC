// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module complex_mag_stream_complex_mag_stream_Pipeline_VITIS_LOOP_120_2 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        elements_in_block,
        id_blk_3,
        id_blk_4,
        id_blk_5,
        iq_blk_3,
        iq_blk_4,
        iq_blk_5,
        out_blk_0_2_load52_out,
        out_blk_0_2_load52_out_ap_vld,
        out_blk_0_1_load45_out,
        out_blk_0_1_load45_out_ap_vld,
        out_blk_0_0_load38_out,
        out_blk_0_0_load38_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [2:0] elements_in_block;
input  [31:0] id_blk_3;
input  [31:0] id_blk_4;
input  [31:0] id_blk_5;
input  [31:0] iq_blk_3;
input  [31:0] iq_blk_4;
input  [31:0] iq_blk_5;
output  [31:0] out_blk_0_2_load52_out;
output   out_blk_0_2_load52_out_ap_vld;
output  [31:0] out_blk_0_1_load45_out;
output   out_blk_0_1_load45_out_ap_vld;
output  [31:0] out_blk_0_0_load38_out;
output   out_blk_0_0_load38_out_ap_vld;

reg ap_idle;
reg out_blk_0_2_load52_out_ap_vld;
reg out_blk_0_1_load45_out_ap_vld;
reg out_blk_0_0_load38_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_enable_reg_pp0_iter12;
reg    ap_enable_reg_pp0_iter13;
reg    ap_enable_reg_pp0_iter14;
reg    ap_enable_reg_pp0_iter15;
reg    ap_enable_reg_pp0_iter16;
reg    ap_enable_reg_pp0_iter17;
reg    ap_enable_reg_pp0_iter18;
reg    ap_enable_reg_pp0_iter19;
reg    ap_enable_reg_pp0_iter20;
reg    ap_enable_reg_pp0_iter21;
reg    ap_enable_reg_pp0_iter22;
reg    ap_enable_reg_pp0_iter23;
reg    ap_enable_reg_pp0_iter24;
reg    ap_enable_reg_pp0_iter25;
reg    ap_enable_reg_pp0_iter26;
reg    ap_enable_reg_pp0_iter27;
reg    ap_enable_reg_pp0_iter28;
reg    ap_enable_reg_pp0_iter29;
reg    ap_enable_reg_pp0_iter30;
reg    ap_enable_reg_pp0_iter31;
reg    ap_enable_reg_pp0_iter32;
reg    ap_enable_reg_pp0_iter33;
reg    ap_enable_reg_pp0_iter34;
reg    ap_enable_reg_pp0_iter35;
reg    ap_enable_reg_pp0_iter36;
reg    ap_enable_reg_pp0_iter37;
reg    ap_enable_reg_pp0_iter38;
reg    ap_enable_reg_pp0_iter39;
reg    ap_enable_reg_pp0_iter40;
reg    ap_enable_reg_pp0_iter41;
reg    ap_enable_reg_pp0_iter42;
reg    ap_enable_reg_pp0_iter43;
reg    ap_enable_reg_pp0_iter44;
reg    ap_enable_reg_pp0_iter45;
reg    ap_enable_reg_pp0_iter46;
reg    ap_enable_reg_pp0_iter47;
reg    ap_enable_reg_pp0_iter48;
reg    ap_enable_reg_pp0_iter49;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln120_fu_214_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_block_pp0_stage0_11001;
reg   [1:0] j_2_reg_325;
reg   [1:0] j_2_reg_325_pp0_iter1_reg;
reg   [1:0] j_2_reg_325_pp0_iter2_reg;
reg   [1:0] j_2_reg_325_pp0_iter3_reg;
reg   [1:0] j_2_reg_325_pp0_iter4_reg;
reg   [1:0] j_2_reg_325_pp0_iter5_reg;
reg   [1:0] j_2_reg_325_pp0_iter6_reg;
reg   [1:0] j_2_reg_325_pp0_iter7_reg;
reg   [1:0] j_2_reg_325_pp0_iter8_reg;
reg   [1:0] j_2_reg_325_pp0_iter9_reg;
reg   [1:0] j_2_reg_325_pp0_iter10_reg;
reg   [1:0] j_2_reg_325_pp0_iter11_reg;
reg   [1:0] j_2_reg_325_pp0_iter12_reg;
reg   [1:0] j_2_reg_325_pp0_iter13_reg;
reg   [1:0] j_2_reg_325_pp0_iter14_reg;
reg   [1:0] j_2_reg_325_pp0_iter15_reg;
reg   [1:0] j_2_reg_325_pp0_iter16_reg;
reg   [1:0] j_2_reg_325_pp0_iter17_reg;
reg   [1:0] j_2_reg_325_pp0_iter18_reg;
reg   [1:0] j_2_reg_325_pp0_iter19_reg;
reg   [1:0] j_2_reg_325_pp0_iter20_reg;
reg   [1:0] j_2_reg_325_pp0_iter21_reg;
reg   [1:0] j_2_reg_325_pp0_iter22_reg;
reg   [1:0] j_2_reg_325_pp0_iter23_reg;
reg   [1:0] j_2_reg_325_pp0_iter24_reg;
reg   [1:0] j_2_reg_325_pp0_iter25_reg;
reg   [1:0] j_2_reg_325_pp0_iter26_reg;
reg   [1:0] j_2_reg_325_pp0_iter27_reg;
reg   [1:0] j_2_reg_325_pp0_iter28_reg;
reg   [1:0] j_2_reg_325_pp0_iter29_reg;
reg   [1:0] j_2_reg_325_pp0_iter30_reg;
reg   [1:0] j_2_reg_325_pp0_iter31_reg;
reg   [1:0] j_2_reg_325_pp0_iter32_reg;
reg   [1:0] j_2_reg_325_pp0_iter33_reg;
reg   [1:0] j_2_reg_325_pp0_iter34_reg;
reg   [1:0] j_2_reg_325_pp0_iter35_reg;
reg   [1:0] j_2_reg_325_pp0_iter36_reg;
reg   [1:0] j_2_reg_325_pp0_iter37_reg;
reg   [1:0] j_2_reg_325_pp0_iter38_reg;
reg   [1:0] j_2_reg_325_pp0_iter39_reg;
reg   [1:0] j_2_reg_325_pp0_iter40_reg;
reg   [1:0] j_2_reg_325_pp0_iter41_reg;
reg   [1:0] j_2_reg_325_pp0_iter42_reg;
reg   [1:0] j_2_reg_325_pp0_iter43_reg;
reg   [1:0] j_2_reg_325_pp0_iter44_reg;
reg   [1:0] j_2_reg_325_pp0_iter45_reg;
reg   [1:0] j_2_reg_325_pp0_iter46_reg;
reg   [1:0] j_2_reg_325_pp0_iter47_reg;
reg   [1:0] j_2_reg_325_pp0_iter48_reg;
reg   [0:0] icmp_ln120_reg_329;
reg   [0:0] icmp_ln120_reg_329_pp0_iter1_reg;
reg   [0:0] icmp_ln120_reg_329_pp0_iter2_reg;
reg   [0:0] icmp_ln120_reg_329_pp0_iter3_reg;
reg   [0:0] icmp_ln120_reg_329_pp0_iter4_reg;
reg   [0:0] icmp_ln120_reg_329_pp0_iter5_reg;
reg   [0:0] icmp_ln120_reg_329_pp0_iter6_reg;
reg   [0:0] icmp_ln120_reg_329_pp0_iter7_reg;
reg   [0:0] icmp_ln120_reg_329_pp0_iter8_reg;
reg   [0:0] icmp_ln120_reg_329_pp0_iter9_reg;
reg   [0:0] icmp_ln120_reg_329_pp0_iter10_reg;
reg   [0:0] icmp_ln120_reg_329_pp0_iter11_reg;
reg   [0:0] icmp_ln120_reg_329_pp0_iter12_reg;
reg   [0:0] icmp_ln120_reg_329_pp0_iter13_reg;
reg   [0:0] icmp_ln120_reg_329_pp0_iter14_reg;
reg   [0:0] icmp_ln120_reg_329_pp0_iter15_reg;
reg   [0:0] icmp_ln120_reg_329_pp0_iter16_reg;
reg   [0:0] icmp_ln120_reg_329_pp0_iter17_reg;
reg   [0:0] icmp_ln120_reg_329_pp0_iter18_reg;
reg   [0:0] icmp_ln120_reg_329_pp0_iter19_reg;
reg   [0:0] icmp_ln120_reg_329_pp0_iter20_reg;
reg   [0:0] icmp_ln120_reg_329_pp0_iter21_reg;
reg   [0:0] icmp_ln120_reg_329_pp0_iter22_reg;
reg   [0:0] icmp_ln120_reg_329_pp0_iter23_reg;
reg   [0:0] icmp_ln120_reg_329_pp0_iter24_reg;
reg   [0:0] icmp_ln120_reg_329_pp0_iter25_reg;
reg   [0:0] icmp_ln120_reg_329_pp0_iter26_reg;
reg   [0:0] icmp_ln120_reg_329_pp0_iter27_reg;
reg   [0:0] icmp_ln120_reg_329_pp0_iter28_reg;
reg   [0:0] icmp_ln120_reg_329_pp0_iter29_reg;
reg   [0:0] icmp_ln120_reg_329_pp0_iter30_reg;
reg   [0:0] icmp_ln120_reg_329_pp0_iter31_reg;
reg   [0:0] icmp_ln120_reg_329_pp0_iter32_reg;
reg   [0:0] icmp_ln120_reg_329_pp0_iter33_reg;
reg   [0:0] icmp_ln120_reg_329_pp0_iter34_reg;
reg   [0:0] icmp_ln120_reg_329_pp0_iter35_reg;
reg   [0:0] icmp_ln120_reg_329_pp0_iter36_reg;
reg   [0:0] icmp_ln120_reg_329_pp0_iter37_reg;
reg   [0:0] icmp_ln120_reg_329_pp0_iter38_reg;
reg   [0:0] icmp_ln120_reg_329_pp0_iter39_reg;
reg   [0:0] icmp_ln120_reg_329_pp0_iter40_reg;
reg   [0:0] icmp_ln120_reg_329_pp0_iter41_reg;
reg   [0:0] icmp_ln120_reg_329_pp0_iter42_reg;
reg   [0:0] icmp_ln120_reg_329_pp0_iter43_reg;
reg   [0:0] icmp_ln120_reg_329_pp0_iter44_reg;
reg   [0:0] icmp_ln120_reg_329_pp0_iter45_reg;
reg   [0:0] icmp_ln120_reg_329_pp0_iter46_reg;
reg   [0:0] icmp_ln120_reg_329_pp0_iter47_reg;
wire   [31:0] id_val_fu_226_p9;
wire   [31:0] iq_val_fu_247_p9;
wire   [31:0] grp_pown_generic_float_s_fu_155_ap_return;
reg   [31:0] tmp_3_reg_343;
wire    ap_block_pp0_stage0_11001_ignoreCallOp132;
wire   [31:0] grp_pown_generic_float_s_fu_174_ap_return;
reg   [31:0] tmp_4_reg_348;
wire    ap_block_pp0_stage0_11001_ignoreCallOp133;
wire   [31:0] grp_fu_193_p2;
reg   [31:0] x_assign_2_reg_353;
wire    ap_block_pp0_stage0_ignoreCallOp73;
wire    ap_block_pp0_stage0_ignoreCallOp74;
reg   [1:0] j_fu_76;
wire   [1:0] add_ln120_fu_220_p2;
wire    ap_loop_init;
reg   [1:0] ap_sig_allocacmp_j_2;
wire    ap_block_pp0_stage0;
reg   [31:0] out_blk_0_0_load38_fu_80;
wire   [31:0] grp_fu_197_p2;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg    ap_loop_exit_ready_pp0_iter12_reg;
reg    ap_loop_exit_ready_pp0_iter13_reg;
reg    ap_loop_exit_ready_pp0_iter14_reg;
reg    ap_loop_exit_ready_pp0_iter15_reg;
reg    ap_loop_exit_ready_pp0_iter16_reg;
reg    ap_loop_exit_ready_pp0_iter17_reg;
reg    ap_loop_exit_ready_pp0_iter18_reg;
reg    ap_loop_exit_ready_pp0_iter19_reg;
reg    ap_loop_exit_ready_pp0_iter20_reg;
reg    ap_loop_exit_ready_pp0_iter21_reg;
reg    ap_loop_exit_ready_pp0_iter22_reg;
reg    ap_loop_exit_ready_pp0_iter23_reg;
reg    ap_loop_exit_ready_pp0_iter24_reg;
reg    ap_loop_exit_ready_pp0_iter25_reg;
reg    ap_loop_exit_ready_pp0_iter26_reg;
reg    ap_loop_exit_ready_pp0_iter27_reg;
reg    ap_loop_exit_ready_pp0_iter28_reg;
reg    ap_loop_exit_ready_pp0_iter29_reg;
reg    ap_loop_exit_ready_pp0_iter30_reg;
reg    ap_loop_exit_ready_pp0_iter31_reg;
reg    ap_loop_exit_ready_pp0_iter32_reg;
reg    ap_loop_exit_ready_pp0_iter33_reg;
reg    ap_loop_exit_ready_pp0_iter34_reg;
reg    ap_loop_exit_ready_pp0_iter35_reg;
reg    ap_loop_exit_ready_pp0_iter36_reg;
reg    ap_loop_exit_ready_pp0_iter37_reg;
reg    ap_loop_exit_ready_pp0_iter38_reg;
reg    ap_loop_exit_ready_pp0_iter39_reg;
reg    ap_loop_exit_ready_pp0_iter40_reg;
reg    ap_loop_exit_ready_pp0_iter41_reg;
reg    ap_loop_exit_ready_pp0_iter42_reg;
reg    ap_loop_exit_ready_pp0_iter43_reg;
reg    ap_loop_exit_ready_pp0_iter44_reg;
reg    ap_loop_exit_ready_pp0_iter45_reg;
reg    ap_loop_exit_ready_pp0_iter46_reg;
reg    ap_loop_exit_ready_pp0_iter47_reg;
reg    ap_loop_exit_ready_pp0_iter48_reg;
reg   [31:0] out_blk_0_1_load45_fu_84;
reg   [31:0] out_blk_0_2_load52_fu_88;
wire    ap_block_pp0_stage0_01001;
wire   [2:0] zext_ln120_fu_210_p1;
wire   [31:0] id_val_fu_226_p7;
wire   [31:0] iq_val_fu_247_p7;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire   [1:0] id_val_fu_226_p1;
wire   [1:0] id_val_fu_226_p3;
wire  signed [1:0] id_val_fu_226_p5;
wire   [1:0] iq_val_fu_247_p1;
wire   [1:0] iq_val_fu_247_p3;
wire  signed [1:0] iq_val_fu_247_p5;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter12 = 1'b0;
#0 ap_enable_reg_pp0_iter13 = 1'b0;
#0 ap_enable_reg_pp0_iter14 = 1'b0;
#0 ap_enable_reg_pp0_iter15 = 1'b0;
#0 ap_enable_reg_pp0_iter16 = 1'b0;
#0 ap_enable_reg_pp0_iter17 = 1'b0;
#0 ap_enable_reg_pp0_iter18 = 1'b0;
#0 ap_enable_reg_pp0_iter19 = 1'b0;
#0 ap_enable_reg_pp0_iter20 = 1'b0;
#0 ap_enable_reg_pp0_iter21 = 1'b0;
#0 ap_enable_reg_pp0_iter22 = 1'b0;
#0 ap_enable_reg_pp0_iter23 = 1'b0;
#0 ap_enable_reg_pp0_iter24 = 1'b0;
#0 ap_enable_reg_pp0_iter25 = 1'b0;
#0 ap_enable_reg_pp0_iter26 = 1'b0;
#0 ap_enable_reg_pp0_iter27 = 1'b0;
#0 ap_enable_reg_pp0_iter28 = 1'b0;
#0 ap_enable_reg_pp0_iter29 = 1'b0;
#0 ap_enable_reg_pp0_iter30 = 1'b0;
#0 ap_enable_reg_pp0_iter31 = 1'b0;
#0 ap_enable_reg_pp0_iter32 = 1'b0;
#0 ap_enable_reg_pp0_iter33 = 1'b0;
#0 ap_enable_reg_pp0_iter34 = 1'b0;
#0 ap_enable_reg_pp0_iter35 = 1'b0;
#0 ap_enable_reg_pp0_iter36 = 1'b0;
#0 ap_enable_reg_pp0_iter37 = 1'b0;
#0 ap_enable_reg_pp0_iter38 = 1'b0;
#0 ap_enable_reg_pp0_iter39 = 1'b0;
#0 ap_enable_reg_pp0_iter40 = 1'b0;
#0 ap_enable_reg_pp0_iter41 = 1'b0;
#0 ap_enable_reg_pp0_iter42 = 1'b0;
#0 ap_enable_reg_pp0_iter43 = 1'b0;
#0 ap_enable_reg_pp0_iter44 = 1'b0;
#0 ap_enable_reg_pp0_iter45 = 1'b0;
#0 ap_enable_reg_pp0_iter46 = 1'b0;
#0 ap_enable_reg_pp0_iter47 = 1'b0;
#0 ap_enable_reg_pp0_iter48 = 1'b0;
#0 ap_enable_reg_pp0_iter49 = 1'b0;
#0 j_fu_76 = 2'd0;
#0 out_blk_0_0_load38_fu_80 = 32'd0;
#0 out_blk_0_1_load45_fu_84 = 32'd0;
#0 out_blk_0_2_load52_fu_88 = 32'd0;
#0 ap_done_reg = 1'b0;
end

complex_mag_stream_pown_generic_float_s grp_pown_generic_float_s_fu_155(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .base_r(id_val_fu_226_p9),
    .ap_return(grp_pown_generic_float_s_fu_155_ap_return)
);

complex_mag_stream_pown_generic_float_s grp_pown_generic_float_s_fu_174(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .base_r(iq_val_fu_247_p9),
    .ap_return(grp_pown_generic_float_s_fu_174_ap_return)
);

complex_mag_stream_fadd_32ns_32ns_32_5_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 5 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fadd_32ns_32ns_32_5_full_dsp_1_U29(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_3_reg_343),
    .din1(tmp_4_reg_348),
    .ce(1'b1),
    .dout(grp_fu_193_p2)
);

complex_mag_stream_fsqrt_32ns_32ns_32_16_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 16 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsqrt_32ns_32ns_32_16_no_dsp_1_U30(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(32'd0),
    .din1(x_assign_2_reg_353),
    .ce(1'b1),
    .dout(grp_fu_197_p2)
);

(* dissolve_hierarchy = "yes" *) complex_mag_stream_sparsemux_7_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h0 ),
    .din0_WIDTH( 32 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 32 ),
    .CASE2( 2'h2 ),
    .din2_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
sparsemux_7_2_32_1_1_U31(
    .din0(id_blk_3),
    .din1(id_blk_4),
    .din2(id_blk_5),
    .def(id_val_fu_226_p7),
    .sel(ap_sig_allocacmp_j_2),
    .dout(id_val_fu_226_p9)
);

(* dissolve_hierarchy = "yes" *) complex_mag_stream_sparsemux_7_2_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .CASE0( 2'h0 ),
    .din0_WIDTH( 32 ),
    .CASE1( 2'h1 ),
    .din1_WIDTH( 32 ),
    .CASE2( 2'h2 ),
    .din2_WIDTH( 32 ),
    .def_WIDTH( 32 ),
    .sel_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
sparsemux_7_2_32_1_1_U32(
    .din0(iq_blk_3),
    .din1(iq_blk_4),
    .din2(iq_blk_5),
    .def(iq_val_fu_247_p7),
    .sel(ap_sig_allocacmp_j_2),
    .dout(iq_val_fu_247_p9)
);

complex_mag_stream_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter48_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage0)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter12 <= ap_enable_reg_pp0_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter13 <= ap_enable_reg_pp0_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter14 <= ap_enable_reg_pp0_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter15 <= ap_enable_reg_pp0_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter16 <= ap_enable_reg_pp0_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter17 <= ap_enable_reg_pp0_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter18 <= ap_enable_reg_pp0_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter19 <= ap_enable_reg_pp0_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter20 <= ap_enable_reg_pp0_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter21 <= ap_enable_reg_pp0_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter22 <= ap_enable_reg_pp0_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter23 <= ap_enable_reg_pp0_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter24 <= ap_enable_reg_pp0_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter25 <= ap_enable_reg_pp0_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter26 <= ap_enable_reg_pp0_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter27 <= ap_enable_reg_pp0_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter28 <= ap_enable_reg_pp0_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter29 <= ap_enable_reg_pp0_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter30 <= ap_enable_reg_pp0_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter31 <= ap_enable_reg_pp0_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter32 <= ap_enable_reg_pp0_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter33 <= ap_enable_reg_pp0_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter34 <= ap_enable_reg_pp0_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter35 <= ap_enable_reg_pp0_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter36 <= ap_enable_reg_pp0_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter37 <= ap_enable_reg_pp0_iter36;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter38 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter38 <= ap_enable_reg_pp0_iter37;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter39 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter39 <= ap_enable_reg_pp0_iter38;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter40 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter40 <= ap_enable_reg_pp0_iter39;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter41 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter41 <= ap_enable_reg_pp0_iter40;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter42 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter42 <= ap_enable_reg_pp0_iter41;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter43 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter43 <= ap_enable_reg_pp0_iter42;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter44 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter44 <= ap_enable_reg_pp0_iter43;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter45 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter45 <= ap_enable_reg_pp0_iter44;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter46 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter46 <= ap_enable_reg_pp0_iter45;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter47 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter47 <= ap_enable_reg_pp0_iter46;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter48 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter48 <= ap_enable_reg_pp0_iter47;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter49 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter49 <= ap_enable_reg_pp0_iter48;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln120_fu_214_p2 == 1'd1))) begin
            j_fu_76 <= add_ln120_fu_220_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            j_fu_76 <= 2'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
        ap_loop_exit_ready_pp0_iter12_reg <= ap_loop_exit_ready_pp0_iter11_reg;
        ap_loop_exit_ready_pp0_iter13_reg <= ap_loop_exit_ready_pp0_iter12_reg;
        ap_loop_exit_ready_pp0_iter14_reg <= ap_loop_exit_ready_pp0_iter13_reg;
        ap_loop_exit_ready_pp0_iter15_reg <= ap_loop_exit_ready_pp0_iter14_reg;
        ap_loop_exit_ready_pp0_iter16_reg <= ap_loop_exit_ready_pp0_iter15_reg;
        ap_loop_exit_ready_pp0_iter17_reg <= ap_loop_exit_ready_pp0_iter16_reg;
        ap_loop_exit_ready_pp0_iter18_reg <= ap_loop_exit_ready_pp0_iter17_reg;
        ap_loop_exit_ready_pp0_iter19_reg <= ap_loop_exit_ready_pp0_iter18_reg;
        ap_loop_exit_ready_pp0_iter20_reg <= ap_loop_exit_ready_pp0_iter19_reg;
        ap_loop_exit_ready_pp0_iter21_reg <= ap_loop_exit_ready_pp0_iter20_reg;
        ap_loop_exit_ready_pp0_iter22_reg <= ap_loop_exit_ready_pp0_iter21_reg;
        ap_loop_exit_ready_pp0_iter23_reg <= ap_loop_exit_ready_pp0_iter22_reg;
        ap_loop_exit_ready_pp0_iter24_reg <= ap_loop_exit_ready_pp0_iter23_reg;
        ap_loop_exit_ready_pp0_iter25_reg <= ap_loop_exit_ready_pp0_iter24_reg;
        ap_loop_exit_ready_pp0_iter26_reg <= ap_loop_exit_ready_pp0_iter25_reg;
        ap_loop_exit_ready_pp0_iter27_reg <= ap_loop_exit_ready_pp0_iter26_reg;
        ap_loop_exit_ready_pp0_iter28_reg <= ap_loop_exit_ready_pp0_iter27_reg;
        ap_loop_exit_ready_pp0_iter29_reg <= ap_loop_exit_ready_pp0_iter28_reg;
        ap_loop_exit_ready_pp0_iter30_reg <= ap_loop_exit_ready_pp0_iter29_reg;
        ap_loop_exit_ready_pp0_iter31_reg <= ap_loop_exit_ready_pp0_iter30_reg;
        ap_loop_exit_ready_pp0_iter32_reg <= ap_loop_exit_ready_pp0_iter31_reg;
        ap_loop_exit_ready_pp0_iter33_reg <= ap_loop_exit_ready_pp0_iter32_reg;
        ap_loop_exit_ready_pp0_iter34_reg <= ap_loop_exit_ready_pp0_iter33_reg;
        ap_loop_exit_ready_pp0_iter35_reg <= ap_loop_exit_ready_pp0_iter34_reg;
        ap_loop_exit_ready_pp0_iter36_reg <= ap_loop_exit_ready_pp0_iter35_reg;
        ap_loop_exit_ready_pp0_iter37_reg <= ap_loop_exit_ready_pp0_iter36_reg;
        ap_loop_exit_ready_pp0_iter38_reg <= ap_loop_exit_ready_pp0_iter37_reg;
        ap_loop_exit_ready_pp0_iter39_reg <= ap_loop_exit_ready_pp0_iter38_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter40_reg <= ap_loop_exit_ready_pp0_iter39_reg;
        ap_loop_exit_ready_pp0_iter41_reg <= ap_loop_exit_ready_pp0_iter40_reg;
        ap_loop_exit_ready_pp0_iter42_reg <= ap_loop_exit_ready_pp0_iter41_reg;
        ap_loop_exit_ready_pp0_iter43_reg <= ap_loop_exit_ready_pp0_iter42_reg;
        ap_loop_exit_ready_pp0_iter44_reg <= ap_loop_exit_ready_pp0_iter43_reg;
        ap_loop_exit_ready_pp0_iter45_reg <= ap_loop_exit_ready_pp0_iter44_reg;
        ap_loop_exit_ready_pp0_iter46_reg <= ap_loop_exit_ready_pp0_iter45_reg;
        ap_loop_exit_ready_pp0_iter47_reg <= ap_loop_exit_ready_pp0_iter46_reg;
        ap_loop_exit_ready_pp0_iter48_reg <= ap_loop_exit_ready_pp0_iter47_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
        icmp_ln120_reg_329_pp0_iter10_reg <= icmp_ln120_reg_329_pp0_iter9_reg;
        icmp_ln120_reg_329_pp0_iter11_reg <= icmp_ln120_reg_329_pp0_iter10_reg;
        icmp_ln120_reg_329_pp0_iter12_reg <= icmp_ln120_reg_329_pp0_iter11_reg;
        icmp_ln120_reg_329_pp0_iter13_reg <= icmp_ln120_reg_329_pp0_iter12_reg;
        icmp_ln120_reg_329_pp0_iter14_reg <= icmp_ln120_reg_329_pp0_iter13_reg;
        icmp_ln120_reg_329_pp0_iter15_reg <= icmp_ln120_reg_329_pp0_iter14_reg;
        icmp_ln120_reg_329_pp0_iter16_reg <= icmp_ln120_reg_329_pp0_iter15_reg;
        icmp_ln120_reg_329_pp0_iter17_reg <= icmp_ln120_reg_329_pp0_iter16_reg;
        icmp_ln120_reg_329_pp0_iter18_reg <= icmp_ln120_reg_329_pp0_iter17_reg;
        icmp_ln120_reg_329_pp0_iter19_reg <= icmp_ln120_reg_329_pp0_iter18_reg;
        icmp_ln120_reg_329_pp0_iter20_reg <= icmp_ln120_reg_329_pp0_iter19_reg;
        icmp_ln120_reg_329_pp0_iter21_reg <= icmp_ln120_reg_329_pp0_iter20_reg;
        icmp_ln120_reg_329_pp0_iter22_reg <= icmp_ln120_reg_329_pp0_iter21_reg;
        icmp_ln120_reg_329_pp0_iter23_reg <= icmp_ln120_reg_329_pp0_iter22_reg;
        icmp_ln120_reg_329_pp0_iter24_reg <= icmp_ln120_reg_329_pp0_iter23_reg;
        icmp_ln120_reg_329_pp0_iter25_reg <= icmp_ln120_reg_329_pp0_iter24_reg;
        icmp_ln120_reg_329_pp0_iter26_reg <= icmp_ln120_reg_329_pp0_iter25_reg;
        icmp_ln120_reg_329_pp0_iter27_reg <= icmp_ln120_reg_329_pp0_iter26_reg;
        icmp_ln120_reg_329_pp0_iter28_reg <= icmp_ln120_reg_329_pp0_iter27_reg;
        icmp_ln120_reg_329_pp0_iter29_reg <= icmp_ln120_reg_329_pp0_iter28_reg;
        icmp_ln120_reg_329_pp0_iter2_reg <= icmp_ln120_reg_329_pp0_iter1_reg;
        icmp_ln120_reg_329_pp0_iter30_reg <= icmp_ln120_reg_329_pp0_iter29_reg;
        icmp_ln120_reg_329_pp0_iter31_reg <= icmp_ln120_reg_329_pp0_iter30_reg;
        icmp_ln120_reg_329_pp0_iter32_reg <= icmp_ln120_reg_329_pp0_iter31_reg;
        icmp_ln120_reg_329_pp0_iter33_reg <= icmp_ln120_reg_329_pp0_iter32_reg;
        icmp_ln120_reg_329_pp0_iter34_reg <= icmp_ln120_reg_329_pp0_iter33_reg;
        icmp_ln120_reg_329_pp0_iter35_reg <= icmp_ln120_reg_329_pp0_iter34_reg;
        icmp_ln120_reg_329_pp0_iter36_reg <= icmp_ln120_reg_329_pp0_iter35_reg;
        icmp_ln120_reg_329_pp0_iter37_reg <= icmp_ln120_reg_329_pp0_iter36_reg;
        icmp_ln120_reg_329_pp0_iter38_reg <= icmp_ln120_reg_329_pp0_iter37_reg;
        icmp_ln120_reg_329_pp0_iter39_reg <= icmp_ln120_reg_329_pp0_iter38_reg;
        icmp_ln120_reg_329_pp0_iter3_reg <= icmp_ln120_reg_329_pp0_iter2_reg;
        icmp_ln120_reg_329_pp0_iter40_reg <= icmp_ln120_reg_329_pp0_iter39_reg;
        icmp_ln120_reg_329_pp0_iter41_reg <= icmp_ln120_reg_329_pp0_iter40_reg;
        icmp_ln120_reg_329_pp0_iter42_reg <= icmp_ln120_reg_329_pp0_iter41_reg;
        icmp_ln120_reg_329_pp0_iter43_reg <= icmp_ln120_reg_329_pp0_iter42_reg;
        icmp_ln120_reg_329_pp0_iter44_reg <= icmp_ln120_reg_329_pp0_iter43_reg;
        icmp_ln120_reg_329_pp0_iter45_reg <= icmp_ln120_reg_329_pp0_iter44_reg;
        icmp_ln120_reg_329_pp0_iter46_reg <= icmp_ln120_reg_329_pp0_iter45_reg;
        icmp_ln120_reg_329_pp0_iter47_reg <= icmp_ln120_reg_329_pp0_iter46_reg;
        icmp_ln120_reg_329_pp0_iter4_reg <= icmp_ln120_reg_329_pp0_iter3_reg;
        icmp_ln120_reg_329_pp0_iter5_reg <= icmp_ln120_reg_329_pp0_iter4_reg;
        icmp_ln120_reg_329_pp0_iter6_reg <= icmp_ln120_reg_329_pp0_iter5_reg;
        icmp_ln120_reg_329_pp0_iter7_reg <= icmp_ln120_reg_329_pp0_iter6_reg;
        icmp_ln120_reg_329_pp0_iter8_reg <= icmp_ln120_reg_329_pp0_iter7_reg;
        icmp_ln120_reg_329_pp0_iter9_reg <= icmp_ln120_reg_329_pp0_iter8_reg;
        j_2_reg_325_pp0_iter10_reg <= j_2_reg_325_pp0_iter9_reg;
        j_2_reg_325_pp0_iter11_reg <= j_2_reg_325_pp0_iter10_reg;
        j_2_reg_325_pp0_iter12_reg <= j_2_reg_325_pp0_iter11_reg;
        j_2_reg_325_pp0_iter13_reg <= j_2_reg_325_pp0_iter12_reg;
        j_2_reg_325_pp0_iter14_reg <= j_2_reg_325_pp0_iter13_reg;
        j_2_reg_325_pp0_iter15_reg <= j_2_reg_325_pp0_iter14_reg;
        j_2_reg_325_pp0_iter16_reg <= j_2_reg_325_pp0_iter15_reg;
        j_2_reg_325_pp0_iter17_reg <= j_2_reg_325_pp0_iter16_reg;
        j_2_reg_325_pp0_iter18_reg <= j_2_reg_325_pp0_iter17_reg;
        j_2_reg_325_pp0_iter19_reg <= j_2_reg_325_pp0_iter18_reg;
        j_2_reg_325_pp0_iter20_reg <= j_2_reg_325_pp0_iter19_reg;
        j_2_reg_325_pp0_iter21_reg <= j_2_reg_325_pp0_iter20_reg;
        j_2_reg_325_pp0_iter22_reg <= j_2_reg_325_pp0_iter21_reg;
        j_2_reg_325_pp0_iter23_reg <= j_2_reg_325_pp0_iter22_reg;
        j_2_reg_325_pp0_iter24_reg <= j_2_reg_325_pp0_iter23_reg;
        j_2_reg_325_pp0_iter25_reg <= j_2_reg_325_pp0_iter24_reg;
        j_2_reg_325_pp0_iter26_reg <= j_2_reg_325_pp0_iter25_reg;
        j_2_reg_325_pp0_iter27_reg <= j_2_reg_325_pp0_iter26_reg;
        j_2_reg_325_pp0_iter28_reg <= j_2_reg_325_pp0_iter27_reg;
        j_2_reg_325_pp0_iter29_reg <= j_2_reg_325_pp0_iter28_reg;
        j_2_reg_325_pp0_iter2_reg <= j_2_reg_325_pp0_iter1_reg;
        j_2_reg_325_pp0_iter30_reg <= j_2_reg_325_pp0_iter29_reg;
        j_2_reg_325_pp0_iter31_reg <= j_2_reg_325_pp0_iter30_reg;
        j_2_reg_325_pp0_iter32_reg <= j_2_reg_325_pp0_iter31_reg;
        j_2_reg_325_pp0_iter33_reg <= j_2_reg_325_pp0_iter32_reg;
        j_2_reg_325_pp0_iter34_reg <= j_2_reg_325_pp0_iter33_reg;
        j_2_reg_325_pp0_iter35_reg <= j_2_reg_325_pp0_iter34_reg;
        j_2_reg_325_pp0_iter36_reg <= j_2_reg_325_pp0_iter35_reg;
        j_2_reg_325_pp0_iter37_reg <= j_2_reg_325_pp0_iter36_reg;
        j_2_reg_325_pp0_iter38_reg <= j_2_reg_325_pp0_iter37_reg;
        j_2_reg_325_pp0_iter39_reg <= j_2_reg_325_pp0_iter38_reg;
        j_2_reg_325_pp0_iter3_reg <= j_2_reg_325_pp0_iter2_reg;
        j_2_reg_325_pp0_iter40_reg <= j_2_reg_325_pp0_iter39_reg;
        j_2_reg_325_pp0_iter41_reg <= j_2_reg_325_pp0_iter40_reg;
        j_2_reg_325_pp0_iter42_reg <= j_2_reg_325_pp0_iter41_reg;
        j_2_reg_325_pp0_iter43_reg <= j_2_reg_325_pp0_iter42_reg;
        j_2_reg_325_pp0_iter44_reg <= j_2_reg_325_pp0_iter43_reg;
        j_2_reg_325_pp0_iter45_reg <= j_2_reg_325_pp0_iter44_reg;
        j_2_reg_325_pp0_iter46_reg <= j_2_reg_325_pp0_iter45_reg;
        j_2_reg_325_pp0_iter47_reg <= j_2_reg_325_pp0_iter46_reg;
        j_2_reg_325_pp0_iter48_reg <= j_2_reg_325_pp0_iter47_reg;
        j_2_reg_325_pp0_iter4_reg <= j_2_reg_325_pp0_iter3_reg;
        j_2_reg_325_pp0_iter5_reg <= j_2_reg_325_pp0_iter4_reg;
        j_2_reg_325_pp0_iter6_reg <= j_2_reg_325_pp0_iter5_reg;
        j_2_reg_325_pp0_iter7_reg <= j_2_reg_325_pp0_iter6_reg;
        j_2_reg_325_pp0_iter8_reg <= j_2_reg_325_pp0_iter7_reg;
        j_2_reg_325_pp0_iter9_reg <= j_2_reg_325_pp0_iter8_reg;
        x_assign_2_reg_353 <= grp_fu_193_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln120_reg_329 <= icmp_ln120_fu_214_p2;
        icmp_ln120_reg_329_pp0_iter1_reg <= icmp_ln120_reg_329;
        j_2_reg_325 <= ap_sig_allocacmp_j_2;
        j_2_reg_325_pp0_iter1_reg <= j_2_reg_325;
    end
end

always @ (posedge ap_clk) begin
    if (((j_2_reg_325_pp0_iter48_reg == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter49 == 1'b1))) begin
        out_blk_0_0_load38_fu_80 <= grp_fu_197_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((j_2_reg_325_pp0_iter48_reg == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter49 == 1'b1))) begin
        out_blk_0_1_load45_fu_84 <= grp_fu_197_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~(j_2_reg_325_pp0_iter48_reg == 2'd1) & ~(j_2_reg_325_pp0_iter48_reg == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter49 == 1'b1))) begin
        out_blk_0_2_load52_fu_88 <= grp_fu_197_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp132)) begin
        tmp_3_reg_343 <= grp_pown_generic_float_s_fu_155_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001_ignoreCallOp133)) begin
        tmp_4_reg_348 <= grp_pown_generic_float_s_fu_174_ap_return;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln120_fu_214_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter48_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_idle_pp0 == 1'b1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter26 == 1'b0) & (ap_enable_reg_pp0_iter25 == 1'b0) & (ap_enable_reg_pp0_iter24 == 1'b0) & (ap_enable_reg_pp0_iter23 == 1'b0) & (ap_enable_reg_pp0_iter22 == 1'b0) & (ap_enable_reg_pp0_iter21 == 1'b0) & (ap_enable_reg_pp0_iter20 == 1'b0) & (ap_enable_reg_pp0_iter19 == 1'b0) & (ap_enable_reg_pp0_iter18 == 1'b0) & (ap_enable_reg_pp0_iter17 == 1'b0) & (ap_enable_reg_pp0_iter16 == 1'b0) & (ap_enable_reg_pp0_iter15 == 1'b0) & (ap_enable_reg_pp0_iter14 == 1'b0) & (ap_enable_reg_pp0_iter13 == 1'b0) & (ap_enable_reg_pp0_iter12 == 1'b0) & (ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter49 == 1'b0) 
    & (ap_enable_reg_pp0_iter48 == 1'b0) & (ap_enable_reg_pp0_iter47 == 1'b0) & (ap_enable_reg_pp0_iter46 == 1'b0) & (ap_enable_reg_pp0_iter45 == 1'b0) & (ap_enable_reg_pp0_iter44 == 1'b0) & (ap_enable_reg_pp0_iter43 == 1'b0) & (ap_enable_reg_pp0_iter42 == 1'b0) & (ap_enable_reg_pp0_iter41 == 1'b0) & (ap_enable_reg_pp0_iter40 == 1'b0) & (ap_enable_reg_pp0_iter39 == 1'b0) & (ap_enable_reg_pp0_iter38 == 1'b0) & (ap_enable_reg_pp0_iter37 == 1'b0) & (ap_enable_reg_pp0_iter36 == 1'b0) & (ap_enable_reg_pp0_iter35 == 1'b0) & (ap_enable_reg_pp0_iter34 == 1'b0) & (ap_enable_reg_pp0_iter33 == 1'b0) & (ap_enable_reg_pp0_iter32 == 1'b0) & (ap_enable_reg_pp0_iter31 == 1'b0) & (ap_enable_reg_pp0_iter30 == 1'b0) & (ap_enable_reg_pp0_iter29 == 1'b0) & (ap_enable_reg_pp0_iter28 == 1'b0) & (ap_enable_reg_pp0_iter27 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_sig_allocacmp_j_2 = 2'd0;
    end else begin
        ap_sig_allocacmp_j_2 = j_fu_76;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter48_reg == 1'b1) & (icmp_ln120_reg_329_pp0_iter47_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_blk_0_0_load38_out_ap_vld = 1'b1;
    end else begin
        out_blk_0_0_load38_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter48_reg == 1'b1) & (icmp_ln120_reg_329_pp0_iter47_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_blk_0_1_load45_out_ap_vld = 1'b1;
    end else begin
        out_blk_0_1_load45_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter48_reg == 1'b1) & (icmp_ln120_reg_329_pp0_iter47_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        out_blk_0_2_load52_out_ap_vld = 1'b1;
    end else begin
        out_blk_0_2_load52_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln120_fu_220_p2 = (ap_sig_allocacmp_j_2 + 2'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001_ignoreCallOp132 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001_ignoreCallOp133 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_ignoreCallOp73 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_ignoreCallOp74 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_ready = ap_ready_sig;

assign icmp_ln120_fu_214_p2 = (($signed(zext_ln120_fu_210_p1) < $signed(elements_in_block)) ? 1'b1 : 1'b0);

assign id_val_fu_226_p7 = 'bx;

assign iq_val_fu_247_p7 = 'bx;

assign out_blk_0_0_load38_out = out_blk_0_0_load38_fu_80;

assign out_blk_0_1_load45_out = out_blk_0_1_load45_fu_84;

assign out_blk_0_2_load52_out = out_blk_0_2_load52_fu_88;

assign zext_ln120_fu_210_p1 = ap_sig_allocacmp_j_2;

endmodule //complex_mag_stream_complex_mag_stream_Pipeline_VITIS_LOOP_120_2
