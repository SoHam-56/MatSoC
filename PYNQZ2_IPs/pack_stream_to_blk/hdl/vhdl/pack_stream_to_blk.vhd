-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity pack_stream_to_blk is
generic (
    C_S_AXI_CTRL_ADDR_WIDTH : INTEGER := 5;
    C_S_AXI_CTRL_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    input_stream_TDATA : IN STD_LOGIC_VECTOR (31 downto 0);
    input_stream_TVALID : IN STD_LOGIC;
    input_stream_TREADY : OUT STD_LOGIC;
    input_stream_TKEEP : IN STD_LOGIC_VECTOR (3 downto 0);
    input_stream_TSTRB : IN STD_LOGIC_VECTOR (3 downto 0);
    input_stream_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    blk_stream_TDATA : OUT STD_LOGIC_VECTOR (95 downto 0);
    blk_stream_TVALID : OUT STD_LOGIC;
    blk_stream_TREADY : IN STD_LOGIC;
    s_axi_CTRL_AWVALID : IN STD_LOGIC;
    s_axi_CTRL_AWREADY : OUT STD_LOGIC;
    s_axi_CTRL_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_ADDR_WIDTH-1 downto 0);
    s_axi_CTRL_WVALID : IN STD_LOGIC;
    s_axi_CTRL_WREADY : OUT STD_LOGIC;
    s_axi_CTRL_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH-1 downto 0);
    s_axi_CTRL_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH/8-1 downto 0);
    s_axi_CTRL_ARVALID : IN STD_LOGIC;
    s_axi_CTRL_ARREADY : OUT STD_LOGIC;
    s_axi_CTRL_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_ADDR_WIDTH-1 downto 0);
    s_axi_CTRL_RVALID : OUT STD_LOGIC;
    s_axi_CTRL_RREADY : IN STD_LOGIC;
    s_axi_CTRL_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH-1 downto 0);
    s_axi_CTRL_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_CTRL_BVALID : OUT STD_LOGIC;
    s_axi_CTRL_BREADY : IN STD_LOGIC;
    s_axi_CTRL_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of pack_stream_to_blk is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "pack_stream_to_blk_pack_stream_to_blk,hls_ip_2024_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=5.118000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=567,HLS_SYN_LUT=889,HLS_VERSION=2024_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant C_S_AXI_DATA_WIDTH : INTEGER := 32;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv31_0 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv31_1 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000001";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal n : STD_LOGIC_VECTOR (31 downto 0);
    signal input_stream_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal blk_stream_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal or_ln23_reg_393 : STD_LOGIC_VECTOR (0 downto 0);
    signal n_read_reg_323 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub4_fu_126_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub4_reg_328 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_2_fu_154_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal i_2_reg_336 : STD_LOGIC_VECTOR (30 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal p_load10_reg_341 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_load_reg_346 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln19_fu_163_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln19_reg_351 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln19_1_fu_169_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln19_1_reg_357 : STD_LOGIC_VECTOR (0 downto 0);
    signal blk_idx_2_fu_175_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal blk_idx_2_reg_363 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln23_1_fu_181_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln23_1_reg_371 : STD_LOGIC_VECTOR (0 downto 0);
    signal data_conv_1_fu_197_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_conv_1_reg_377 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_conv_2_fu_205_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_conv_2_reg_382 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_conv_3_fu_212_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal data_conv_3_reg_387 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln23_fu_224_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_pack_stream_to_blk_Pipeline_VITIS_LOOP_26_2_fu_111_ap_start : STD_LOGIC;
    signal grp_pack_stream_to_blk_Pipeline_VITIS_LOOP_26_2_fu_111_ap_done : STD_LOGIC;
    signal grp_pack_stream_to_blk_Pipeline_VITIS_LOOP_26_2_fu_111_ap_idle : STD_LOGIC;
    signal grp_pack_stream_to_blk_Pipeline_VITIS_LOOP_26_2_fu_111_ap_ready : STD_LOGIC;
    signal grp_pack_stream_to_blk_Pipeline_VITIS_LOOP_26_2_fu_111_p_out_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pack_stream_to_blk_Pipeline_VITIS_LOOP_26_2_fu_111_p_out_o_ap_vld : STD_LOGIC;
    signal grp_pack_stream_to_blk_Pipeline_VITIS_LOOP_26_2_fu_111_p_out1_o : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_pack_stream_to_blk_Pipeline_VITIS_LOOP_26_2_fu_111_p_out1_o_ap_vld : STD_LOGIC;
    signal grp_pack_stream_to_blk_Pipeline_VITIS_LOOP_26_2_fu_111_ap_start_reg : STD_LOGIC := '0';
    signal and_ln25_fu_248_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal empty_16_fu_82 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal empty_15_fu_78 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal blk_idx_fu_66 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal ap_block_state6 : BOOLEAN;
    signal icmp_ln13_fu_149_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_70 : STD_LOGIC_VECTOR (30 downto 0) := "0000000000000000000000000000000";
    signal empty_fu_74 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal zext_ln13_fu_145_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln19_fu_193_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln23_fu_219_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln25_fu_243_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_blk_stream_U_apdone_blk : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal regslice_both_input_stream_V_data_V_U_apdone_blk : STD_LOGIC;
    signal input_stream_TDATA_int_regslice : STD_LOGIC_VECTOR (31 downto 0);
    signal input_stream_TVALID_int_regslice : STD_LOGIC;
    signal input_stream_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_input_stream_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_input_stream_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal input_stream_TKEEP_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_input_stream_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_input_stream_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_input_stream_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal input_stream_TSTRB_int_regslice : STD_LOGIC_VECTOR (3 downto 0);
    signal regslice_both_input_stream_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_input_stream_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_input_stream_V_last_V_U_apdone_blk : STD_LOGIC;
    signal input_stream_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_input_stream_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_input_stream_V_last_V_U_ack_in : STD_LOGIC;
    signal blk_stream_TDATA_int_regslice : STD_LOGIC_VECTOR (95 downto 0);
    signal blk_stream_TVALID_int_regslice : STD_LOGIC;
    signal blk_stream_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_blk_stream_U_vld_out : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component pack_stream_to_blk_pack_stream_to_blk_Pipeline_VITIS_LOOP_26_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        data_conv_1 : IN STD_LOGIC_VECTOR (31 downto 0);
        data_conv_2 : IN STD_LOGIC_VECTOR (31 downto 0);
        zext_ln26 : IN STD_LOGIC_VECTOR (31 downto 0);
        p_out_i : IN STD_LOGIC_VECTOR (31 downto 0);
        p_out_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        p_out_o_ap_vld : OUT STD_LOGIC;
        p_out1_i : IN STD_LOGIC_VECTOR (31 downto 0);
        p_out1_o : OUT STD_LOGIC_VECTOR (31 downto 0);
        p_out1_o_ap_vld : OUT STD_LOGIC );
    end component;


    component pack_stream_to_blk_CTRL_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        n : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component pack_stream_to_blk_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    grp_pack_stream_to_blk_Pipeline_VITIS_LOOP_26_2_fu_111 : component pack_stream_to_blk_pack_stream_to_blk_Pipeline_VITIS_LOOP_26_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_pack_stream_to_blk_Pipeline_VITIS_LOOP_26_2_fu_111_ap_start,
        ap_done => grp_pack_stream_to_blk_Pipeline_VITIS_LOOP_26_2_fu_111_ap_done,
        ap_idle => grp_pack_stream_to_blk_Pipeline_VITIS_LOOP_26_2_fu_111_ap_idle,
        ap_ready => grp_pack_stream_to_blk_Pipeline_VITIS_LOOP_26_2_fu_111_ap_ready,
        data_conv_1 => data_conv_1_reg_377,
        data_conv_2 => data_conv_2_reg_382,
        zext_ln26 => blk_idx_2_reg_363,
        p_out_i => empty_16_fu_82,
        p_out_o => grp_pack_stream_to_blk_Pipeline_VITIS_LOOP_26_2_fu_111_p_out_o,
        p_out_o_ap_vld => grp_pack_stream_to_blk_Pipeline_VITIS_LOOP_26_2_fu_111_p_out_o_ap_vld,
        p_out1_i => empty_15_fu_78,
        p_out1_o => grp_pack_stream_to_blk_Pipeline_VITIS_LOOP_26_2_fu_111_p_out1_o,
        p_out1_o_ap_vld => grp_pack_stream_to_blk_Pipeline_VITIS_LOOP_26_2_fu_111_p_out1_o_ap_vld);

    CTRL_s_axi_U : component pack_stream_to_blk_CTRL_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CTRL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CTRL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_CTRL_AWVALID,
        AWREADY => s_axi_CTRL_AWREADY,
        AWADDR => s_axi_CTRL_AWADDR,
        WVALID => s_axi_CTRL_WVALID,
        WREADY => s_axi_CTRL_WREADY,
        WDATA => s_axi_CTRL_WDATA,
        WSTRB => s_axi_CTRL_WSTRB,
        ARVALID => s_axi_CTRL_ARVALID,
        ARREADY => s_axi_CTRL_ARREADY,
        ARADDR => s_axi_CTRL_ARADDR,
        RVALID => s_axi_CTRL_RVALID,
        RREADY => s_axi_CTRL_RREADY,
        RDATA => s_axi_CTRL_RDATA,
        RRESP => s_axi_CTRL_RRESP,
        BVALID => s_axi_CTRL_BVALID,
        BREADY => s_axi_CTRL_BREADY,
        BRESP => s_axi_CTRL_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        n => n,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    regslice_both_input_stream_V_data_V_U : component pack_stream_to_blk_regslice_both
    generic map (
        DataWidth => 32)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => input_stream_TDATA,
        vld_in => input_stream_TVALID,
        ack_in => regslice_both_input_stream_V_data_V_U_ack_in,
        data_out => input_stream_TDATA_int_regslice,
        vld_out => input_stream_TVALID_int_regslice,
        ack_out => input_stream_TREADY_int_regslice,
        apdone_blk => regslice_both_input_stream_V_data_V_U_apdone_blk);

    regslice_both_input_stream_V_keep_V_U : component pack_stream_to_blk_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => input_stream_TKEEP,
        vld_in => input_stream_TVALID,
        ack_in => regslice_both_input_stream_V_keep_V_U_ack_in,
        data_out => input_stream_TKEEP_int_regslice,
        vld_out => regslice_both_input_stream_V_keep_V_U_vld_out,
        ack_out => input_stream_TREADY_int_regslice,
        apdone_blk => regslice_both_input_stream_V_keep_V_U_apdone_blk);

    regslice_both_input_stream_V_strb_V_U : component pack_stream_to_blk_regslice_both
    generic map (
        DataWidth => 4)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => input_stream_TSTRB,
        vld_in => input_stream_TVALID,
        ack_in => regslice_both_input_stream_V_strb_V_U_ack_in,
        data_out => input_stream_TSTRB_int_regslice,
        vld_out => regslice_both_input_stream_V_strb_V_U_vld_out,
        ack_out => input_stream_TREADY_int_regslice,
        apdone_blk => regslice_both_input_stream_V_strb_V_U_apdone_blk);

    regslice_both_input_stream_V_last_V_U : component pack_stream_to_blk_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => input_stream_TLAST,
        vld_in => input_stream_TVALID,
        ack_in => regslice_both_input_stream_V_last_V_U_ack_in,
        data_out => input_stream_TLAST_int_regslice,
        vld_out => regslice_both_input_stream_V_last_V_U_vld_out,
        ack_out => input_stream_TREADY_int_regslice,
        apdone_blk => regslice_both_input_stream_V_last_V_U_apdone_blk);

    regslice_both_blk_stream_U : component pack_stream_to_blk_regslice_both
    generic map (
        DataWidth => 96)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => blk_stream_TDATA_int_regslice,
        vld_in => blk_stream_TVALID_int_regslice,
        ack_in => blk_stream_TREADY_int_regslice,
        data_out => blk_stream_TDATA,
        vld_out => regslice_both_blk_stream_U_vld_out,
        ack_out => blk_stream_TREADY,
        apdone_blk => regslice_both_blk_stream_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_pack_stream_to_blk_Pipeline_VITIS_LOOP_26_2_fu_111_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_pack_stream_to_blk_Pipeline_VITIS_LOOP_26_2_fu_111_ap_start_reg <= ap_const_logic_0;
            else
                if (((or_ln23_fu_224_p2 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln25_fu_248_p2) and (input_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    grp_pack_stream_to_blk_Pipeline_VITIS_LOOP_26_2_fu_111_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_pack_stream_to_blk_Pipeline_VITIS_LOOP_26_2_fu_111_ap_ready = ap_const_logic_1)) then 
                    grp_pack_stream_to_blk_Pipeline_VITIS_LOOP_26_2_fu_111_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    blk_idx_fu_66_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln23_fu_224_p2 = ap_const_lv1_0) and (input_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                blk_idx_fu_66 <= blk_idx_2_reg_363;
            elsif ((((or_ln23_reg_393 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_boolean_0 = ap_block_state6)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)))) then 
                blk_idx_fu_66 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    empty_15_fu_78_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((or_ln23_fu_224_p2 = ap_const_lv1_0) and (input_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((or_ln23_fu_224_p2 = ap_const_lv1_1) and (input_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_0 = and_ln25_fu_248_p2)))) then 
                empty_15_fu_78 <= data_conv_2_fu_205_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_pack_stream_to_blk_Pipeline_VITIS_LOOP_26_2_fu_111_p_out1_o_ap_vld = ap_const_logic_1))) then 
                empty_15_fu_78 <= grp_pack_stream_to_blk_Pipeline_VITIS_LOOP_26_2_fu_111_p_out1_o;
            end if; 
        end if;
    end process;

    empty_16_fu_82_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((or_ln23_fu_224_p2 = ap_const_lv1_0) and (input_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((or_ln23_fu_224_p2 = ap_const_lv1_1) and (input_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_0 = and_ln25_fu_248_p2)))) then 
                empty_16_fu_82 <= data_conv_1_fu_197_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state4) and (grp_pack_stream_to_blk_Pipeline_VITIS_LOOP_26_2_fu_111_p_out_o_ap_vld = ap_const_logic_1))) then 
                empty_16_fu_82 <= grp_pack_stream_to_blk_Pipeline_VITIS_LOOP_26_2_fu_111_p_out_o;
            end if; 
        end if;
    end process;

    i_fu_70_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_fu_70 <= ap_const_lv31_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_boolean_0 = ap_block_state6))) then 
                i_fu_70 <= i_2_reg_336;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                blk_idx_2_reg_363 <= blk_idx_2_fu_175_p2;
                i_2_reg_336 <= i_2_fu_154_p2;
                icmp_ln19_1_reg_357 <= icmp_ln19_1_fu_169_p2;
                icmp_ln19_reg_351 <= icmp_ln19_fu_163_p2;
                icmp_ln23_1_reg_371 <= icmp_ln23_1_fu_181_p2;
                p_load10_reg_341 <= empty_15_fu_78;
                p_load_reg_346 <= empty_16_fu_82;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                data_conv_1_reg_377 <= data_conv_1_fu_197_p3;
                data_conv_2_reg_382 <= data_conv_2_fu_205_p3;
                data_conv_3_reg_387 <= data_conv_3_fu_212_p3;
                or_ln23_reg_393 <= or_ln23_fu_224_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_boolean_0 = ap_block_state6))) then
                empty_fu_74 <= data_conv_3_reg_387;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                n_read_reg_323 <= n;
                sub4_reg_328 <= sub4_fu_126_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state3, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state2, or_ln23_fu_224_p2, grp_pack_stream_to_blk_Pipeline_VITIS_LOOP_26_2_fu_111_ap_done, and_ln25_fu_248_p2, ap_CS_fsm_state4, ap_block_state6, icmp_ln13_fu_149_p2, regslice_both_blk_stream_U_apdone_blk, input_stream_TVALID_int_regslice, blk_stream_TREADY_int_regslice)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((regslice_both_blk_stream_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln13_fu_149_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif (((regslice_both_blk_stream_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln13_fu_149_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((or_ln23_fu_224_p2 = ap_const_lv1_1) and (input_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3) and (ap_const_lv1_0 = and_ln25_fu_248_p2))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                elsif (((or_ln23_fu_224_p2 = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln25_fu_248_p2) and (input_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                elsif (((or_ln23_fu_224_p2 = ap_const_lv1_0) and (input_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((grp_pack_stream_to_blk_Pipeline_VITIS_LOOP_26_2_fu_111_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                if (((blk_stream_TREADY_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (ap_const_boolean_0 = ap_block_state6))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    and_ln25_fu_248_p2 <= (icmp_ln25_fu_243_p2 and icmp_ln23_1_reg_371);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(regslice_both_blk_stream_U_apdone_blk)
    begin
        if ((regslice_both_blk_stream_U_apdone_blk = ap_const_logic_1)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state3_blk_assign_proc : process(input_stream_TVALID_int_regslice)
    begin
        if ((input_stream_TVALID_int_regslice = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state4_blk_assign_proc : process(grp_pack_stream_to_blk_Pipeline_VITIS_LOOP_26_2_fu_111_ap_done)
    begin
        if ((grp_pack_stream_to_blk_Pipeline_VITIS_LOOP_26_2_fu_111_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state5_blk_assign_proc : process(blk_stream_TREADY_int_regslice)
    begin
        if ((blk_stream_TREADY_int_regslice = ap_const_logic_0)) then 
            ap_ST_fsm_state5_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state5_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state6_blk_assign_proc : process(ap_block_state6)
    begin
        if ((ap_const_boolean_1 = ap_block_state6)) then 
            ap_ST_fsm_state6_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state6_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state6_assign_proc : process(or_ln23_reg_393, blk_stream_TREADY_int_regslice)
    begin
                ap_block_state6 <= ((or_ln23_reg_393 = ap_const_lv1_1) and (blk_stream_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state2, icmp_ln13_fu_149_p2, regslice_both_blk_stream_U_apdone_blk)
    begin
        if (((regslice_both_blk_stream_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln13_fu_149_p2 = ap_const_lv1_0))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln13_fu_149_p2, regslice_both_blk_stream_U_apdone_blk)
    begin
        if (((regslice_both_blk_stream_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln13_fu_149_p2 = ap_const_lv1_0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    blk_idx_2_fu_175_p2 <= std_logic_vector(unsigned(blk_idx_fu_66) + unsigned(ap_const_lv32_1));

    blk_stream_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6, or_ln23_reg_393, blk_stream_TREADY_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or ((or_ln23_reg_393 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            blk_stream_TDATA_blk_n <= blk_stream_TREADY_int_regslice;
        else 
            blk_stream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    blk_stream_TDATA_int_regslice <= ((empty_16_fu_82 & empty_15_fu_78) & data_conv_3_reg_387);
    blk_stream_TVALID <= regslice_both_blk_stream_U_vld_out;

    blk_stream_TVALID_int_regslice_assign_proc : process(ap_CS_fsm_state5, blk_stream_TREADY_int_regslice)
    begin
        if (((blk_stream_TREADY_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            blk_stream_TVALID_int_regslice <= ap_const_logic_1;
        else 
            blk_stream_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    data_conv_1_fu_197_p3 <= 
        p_load_reg_346 when (or_ln19_fu_193_p2(0) = '1') else 
        input_stream_TDATA_int_regslice;
    data_conv_2_fu_205_p3 <= 
        input_stream_TDATA_int_regslice when (icmp_ln19_1_reg_357(0) = '1') else 
        p_load10_reg_341;
    data_conv_3_fu_212_p3 <= 
        input_stream_TDATA_int_regslice when (icmp_ln19_reg_351(0) = '1') else 
        empty_fu_74;
    grp_pack_stream_to_blk_Pipeline_VITIS_LOOP_26_2_fu_111_ap_start <= grp_pack_stream_to_blk_Pipeline_VITIS_LOOP_26_2_fu_111_ap_start_reg;
    i_2_fu_154_p2 <= std_logic_vector(unsigned(i_fu_70) + unsigned(ap_const_lv31_1));
    icmp_ln13_fu_149_p2 <= "1" when (signed(zext_ln13_fu_145_p1) < signed(n_read_reg_323)) else "0";
    icmp_ln19_1_fu_169_p2 <= "1" when (blk_idx_fu_66 = ap_const_lv32_1) else "0";
    icmp_ln19_fu_163_p2 <= "1" when (blk_idx_fu_66 = ap_const_lv32_0) else "0";
    icmp_ln23_1_fu_181_p2 <= "1" when (zext_ln13_fu_145_p1 = sub4_reg_328) else "0";
    icmp_ln23_fu_219_p2 <= "1" when (blk_idx_2_reg_363 = ap_const_lv32_3) else "0";
    icmp_ln25_fu_243_p2 <= "1" when (signed(blk_idx_2_reg_363) < signed(ap_const_lv32_3)) else "0";

    input_stream_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state3, input_stream_TVALID_int_regslice)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            input_stream_TDATA_blk_n <= input_stream_TVALID_int_regslice;
        else 
            input_stream_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    input_stream_TREADY <= regslice_both_input_stream_V_data_V_U_ack_in;

    input_stream_TREADY_int_regslice_assign_proc : process(ap_CS_fsm_state3, input_stream_TVALID_int_regslice)
    begin
        if (((input_stream_TVALID_int_regslice = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            input_stream_TREADY_int_regslice <= ap_const_logic_1;
        else 
            input_stream_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    or_ln19_fu_193_p2 <= (icmp_ln19_reg_351 or icmp_ln19_1_reg_357);
    or_ln23_fu_224_p2 <= (icmp_ln23_fu_219_p2 or icmp_ln23_1_reg_371);
    sub4_fu_126_p2 <= std_logic_vector(unsigned(n) + unsigned(ap_const_lv32_FFFFFFFF));
    zext_ln13_fu_145_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_fu_70),32));
end behav;
